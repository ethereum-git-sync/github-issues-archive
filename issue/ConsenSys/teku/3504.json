{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/3504",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/3504",
  "id": 795488400,
  "node_id": "MDU6SXNzdWU3OTU0ODg0MDA=",
  "number": 3504,
  "title": "Spike: Investigate how to handle versioned datastructures [3D]",
  "user": {
    "login": "rolfyone",
    "id": 2967240,
    "node_id": "MDQ6VXNlcjI5NjcyNDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rolfyone",
    "html_url": "https://github.com/rolfyone",
    "followers_url": "https://api.github.com/users/rolfyone/followers",
    "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
    "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
    "organizations_url": "https://api.github.com/users/rolfyone/orgs",
    "repos_url": "https://api.github.com/users/rolfyone/repos",
    "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rolfyone/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "mbaxter",
    "id": 658601,
    "node_id": "MDQ6VXNlcjY1ODYwMQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/658601?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mbaxter",
    "html_url": "https://github.com/mbaxter",
    "followers_url": "https://api.github.com/users/mbaxter/followers",
    "following_url": "https://api.github.com/users/mbaxter/following{/other_user}",
    "gists_url": "https://api.github.com/users/mbaxter/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mbaxter/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mbaxter/subscriptions",
    "organizations_url": "https://api.github.com/users/mbaxter/orgs",
    "repos_url": "https://api.github.com/users/mbaxter/repos",
    "events_url": "https://api.github.com/users/mbaxter/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mbaxter/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "mbaxter",
      "id": 658601,
      "node_id": "MDQ6VXNlcjY1ODYwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/658601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbaxter",
      "html_url": "https://github.com/mbaxter",
      "followers_url": "https://api.github.com/users/mbaxter/followers",
      "following_url": "https://api.github.com/users/mbaxter/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbaxter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbaxter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbaxter/subscriptions",
      "organizations_url": "https://api.github.com/users/mbaxter/orgs",
      "repos_url": "https://api.github.com/users/mbaxter/repos",
      "events_url": "https://api.github.com/users/mbaxter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbaxter/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2021-01-27T22:16:56Z",
  "updated_at": "2021-02-10T21:43:12Z",
  "closed_at": "2021-02-10T21:43:12Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nAs part of #3356, we'll need to figure out how to handle data structures (like `BeaconState`) that change format across forks.  \r\n\r\nSee [the eth2 spec repo for details](https://github.com/ethereum/eth2.0-specs/pull/2176) on the proposed changes to `BeaconState`.  Basically, 2 fields on `BeaconState` (`previous_epoch_attestations` and `current_epoch_attestations`) will be replaced with 2 new fields: `previous_epoch_participation` and `current_epoch_participation`.  Additional data structure changes are involved in [implementing light-client support](https://github.com/ethereum/eth2.0-specs/blob/dev/specs/lightclient/beacon-chain.md#containers) as well. \r\n\r\nIssues we want to consider:\r\n* How are versioned data structure classes organized?\r\n  * Do we have completely distinct versions: `BeaconStateV1`, `BeaconStateV2`?\r\n  * Do we try to somehow generify the optional fields: `BeaconState<TVersionedFields>`?\r\n  * Do we have an overarching `BeaconState` interface with more specific implementations: `BeaconStateV1 implements BeaconState`?\r\n * How does versioned `core` logic that operates on a `BeaconState` work?\r\n * How is (de)serialization handled by the `Database`\r\n   * Likely we will need to delegate to a deserializer that we pull from the `SpecProvider`.  This deserializer could take the serialized `Bytes`, extract the state's slot or fork info, use that to find the right deserializer instance, and then deserialize the state to the right type. \r\n\r\nOutcomes:\r\n* Propose a general plan for how to address the outlined issues, get feedback from the team\r\n* If appropriate, think about tickets / subtasks we might want to add\r\n\r\nTime box: 3 days.\r\n\r\n",
  "closed_by": {
    "login": "rolfyone",
    "id": 2967240,
    "node_id": "MDQ6VXNlcjI5NjcyNDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rolfyone",
    "html_url": "https://github.com/rolfyone",
    "followers_url": "https://api.github.com/users/rolfyone/followers",
    "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
    "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
    "organizations_url": "https://api.github.com/users/rolfyone/orgs",
    "repos_url": "https://api.github.com/users/rolfyone/repos",
    "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rolfyone/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/3504/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/768861968",
    "html_url": "https://github.com/ConsenSys/teku/issues/3504#issuecomment-768861968",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504",
    "id": 768861968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODg2MTk2OA==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-28T07:36:11Z",
    "updated_at": "2021-01-28T07:36:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just linking my current PR #3426 to this issue. ",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/768861968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773465047",
    "html_url": "https://github.com/ConsenSys/teku/issues/3504#issuecomment-773465047",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504",
    "id": 773465047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ2NTA0Nw==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-04T17:08:59Z",
    "updated_at": "2021-02-04T17:09:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just logged the issue #3541 : \r\n> Hard fork 1 adds two fields to the `BeaconState` (`current_epoch_participation`, `previous_epoch_participation`) with `List[Bitvector]` type (Teku type `SSZList<SSZVector<BitView>>`). The list length would be the same as validators\r\nNeed to make sure this works and works with acceptable speed.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773465047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773486239",
    "html_url": "https://github.com/ConsenSys/teku/issues/3504#issuecomment-773486239",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504",
    "id": 773486239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ4NjIzOQ==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-04T17:41:21Z",
    "updated_at": "2021-02-04T17:41:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do we try to somehow generify the optional fields: `BeaconState<TVersionedFields>`?\r\n\r\nFrom my personal experience fine-grained generifying of more or less complex class sets always lead to monstrously looking types which then hard to support. Java is not too expressive in that respect. I personally prefer few places with class casts. ",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773486239/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773489164",
    "html_url": "https://github.com/ConsenSys/teku/issues/3504#issuecomment-773489164",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504",
    "id": 773489164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ4OTE2NA==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-04T17:45:46Z",
    "updated_at": "2021-02-04T17:45:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do we have an overarching `BeaconState` interface with more specific implementations: `BeaconStateV1` implements `BeaconState`?\r\n\r\nMakes sense to me. `BeaconState` might have just common fields for all fork versions like this: \r\n```java\r\npublic interface BeaconState {\r\n  UInt64 slot();\r\n  ListViewRead<Validator> validators();\r\n  ListViewRead<UInt64View> getBalances();\r\n  // other common fields\r\n}\r\npublic interface BeaconStateGenesis extends BeaconState {\r\n  SSZList<PendingAttestation> getPrevious_epoch_attestations();\r\n  SSZList<PendingAttestation> getCurrent_epoch_attestations();\r\n}\r\npublic interface BeaconStateHF1 extends BeaconState {\r\n  SSZList<SSZVector<BitView>> getPrevious_epoch_participation();\r\n  SSZList<SSZVector<BitView>> getCurrent_epoch_participation();\r\n  UInt64 balanceDenominator();\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773489164/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773492069",
    "html_url": "https://github.com/ConsenSys/teku/issues/3504#issuecomment-773492069",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504",
    "id": 773492069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzQ5MjA2OQ==",
    "user": {
      "login": "Nashatyrev",
      "id": 8173857,
      "node_id": "MDQ6VXNlcjgxNzM4NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Nashatyrev",
      "html_url": "https://github.com/Nashatyrev",
      "followers_url": "https://api.github.com/users/Nashatyrev/followers",
      "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
      "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
      "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
      "repos_url": "https://api.github.com/users/Nashatyrev/repos",
      "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-04T17:50:29Z",
    "updated_at": "2021-02-04T17:50:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Likely we will need to delegate to a deserializer that we pull from the SpecProvider. This deserializer could take the serialized Bytes, extract the state's slot or fork info, use that to find the right deserializer instance, and then deserialize the state to the right type.\r\n\r\nWe may potentially have structures modified in the future which doesn't contain slot info. So probably makes sense to come up with some generic solution? E.g. prepend db record with a single version byte ",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773492069/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773602574",
    "html_url": "https://github.com/ConsenSys/teku/issues/3504#issuecomment-773602574",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/3504",
    "id": 773602574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MzYwMjU3NA==",
    "user": {
      "login": "mbaxter",
      "id": 658601,
      "node_id": "MDQ6VXNlcjY1ODYwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/658601?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mbaxter",
      "html_url": "https://github.com/mbaxter",
      "followers_url": "https://api.github.com/users/mbaxter/followers",
      "following_url": "https://api.github.com/users/mbaxter/following{/other_user}",
      "gists_url": "https://api.github.com/users/mbaxter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mbaxter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mbaxter/subscriptions",
      "organizations_url": "https://api.github.com/users/mbaxter/orgs",
      "repos_url": "https://api.github.com/users/mbaxter/repos",
      "events_url": "https://api.github.com/users/mbaxter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mbaxter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-04T21:04:26Z",
    "updated_at": "2021-02-04T21:04:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another option could be something like:\r\n```\r\npublic interface BeaconState {\r\n  // Common fields\r\n  UInt64 slot();\r\n  ListViewRead<Validator> validators();\r\n  ListViewRead<UInt64View> getBalances();\r\n  // etc\r\n\r\n  // Variable fields\r\n  Optional<SSZList<PendingAttestation>> maybeGetPrevious_epoch_attestations();\r\n  Optional<SSZList<PendingAttestation>> maybeGetCurrent_epoch_attestations();\r\n\r\n  Optional<SSZList<SSZVector<BitView>>> maybeGetPrevious_epoch_participation();\r\n  Optional<SSZList<SSZVector<BitView>>> maybeGetCurrent_epoch_participation();\r\n}\r\n\r\npublic interface BeaconStateGenesis extends BeaconState {\r\n  SSZList<PendingAttestation> getPrevious_epoch_attestations();\r\n  SSZList<PendingAttestation> getCurrent_epoch_attestations();\r\n}\r\n\r\npublic interface BeaconStateHF1 extends BeaconState {\r\n  SSZList<SSZVector<BitView>> getPrevious_epoch_participation();\r\n  SSZList<SSZVector<BitView>> getCurrent_epoch_participation();\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/773602574/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
