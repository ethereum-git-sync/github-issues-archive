{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/5791",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/5791/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/5791/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/5791/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/5791",
  "id": 1271469680,
  "node_id": "I_kwDOCM9I9M5LyRZw",
  "number": 5791,
  "title": "Review memory/performance trade off for SszVectorImpl.createCache",
  "user": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1271198478,
      "node_id": "MDU6TGFiZWwxMjcxMTk4NDc4",
      "url": "https://api.github.com/repos/ConsenSys/teku/labels/performance%20%F0%9F%9A%80",
      "name": "performance ðŸš€",
      "color": "ffcce3",
      "default": false,
      "description": "Improves performance without changing functionality"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-06-14T23:33:05Z",
  "updated_at": "2022-06-15T21:33:18Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\nWould be worth investigating if the child view cache we use for large SszVectorImpls is getting the best performance bang for memory buck. For large vectors we are using a default sized `ArrayIntCache` which starts with a backing array of size 16 but if we then access an element right at the end of the vector it will resize to the full size of the vector using all the memory.  If we access close to the end, then further along it would have to resize and copy the already large array.\n\nDepending on access patterns we may be better just allocating the full size backing array up front, or using a IntHashMap or LimitedMap based IntCache implementation which only caches recently accessed child views rather than allocating a full array.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/5791/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/5791/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
