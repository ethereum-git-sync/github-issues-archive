{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/368",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/368/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/368/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/368/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/368",
  "id": 413086898,
  "node_id": "MDU6SXNzdWU0MTMwODY4OTg=",
  "number": 368,
  "title": "Path to Artemis MVPoC",
  "user": {
    "login": "jrhea",
    "id": 5555162,
    "node_id": "MDQ6VXNlcjU1NTUxNjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrhea",
    "html_url": "https://github.com/jrhea",
    "followers_url": "https://api.github.com/users/jrhea/followers",
    "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
    "organizations_url": "https://api.github.com/users/jrhea/orgs",
    "repos_url": "https://api.github.com/users/jrhea/repos",
    "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrhea/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1048919131,
      "node_id": "MDU6TGFiZWwxMDQ4OTE5MTMx",
      "url": "https://api.github.com/repos/ConsenSys/teku/labels/enhancement%20%F0%9F%95%B5%EF%B8%8F%E2%80%8D%E2%99%80%EF%B8%8F",
      "name": "enhancement üïµÔ∏è‚Äç‚ôÄÔ∏è",
      "color": "a2eeef",
      "default": false,
      "description": "New feature or request"
    },
    {
      "id": 1168108262,
      "node_id": "MDU6TGFiZWwxMTY4MTA4MjYy",
      "url": "https://api.github.com/repos/ConsenSys/teku/labels/in%20progress%20%F0%9F%9A%A7",
      "name": "in progress üöß",
      "color": "f7d9a3",
      "default": false,
      "description": "This issue or pull request is in progress"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "dangerousfood",
    "id": 4099038,
    "node_id": "MDQ6VXNlcjQwOTkwMzg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4099038?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dangerousfood",
    "html_url": "https://github.com/dangerousfood",
    "followers_url": "https://api.github.com/users/dangerousfood/followers",
    "following_url": "https://api.github.com/users/dangerousfood/following{/other_user}",
    "gists_url": "https://api.github.com/users/dangerousfood/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dangerousfood/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dangerousfood/subscriptions",
    "organizations_url": "https://api.github.com/users/dangerousfood/orgs",
    "repos_url": "https://api.github.com/users/dangerousfood/repos",
    "events_url": "https://api.github.com/users/dangerousfood/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dangerousfood/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "dangerousfood",
      "id": 4099038,
      "node_id": "MDQ6VXNlcjQwOTkwMzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4099038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dangerousfood",
      "html_url": "https://github.com/dangerousfood",
      "followers_url": "https://api.github.com/users/dangerousfood/followers",
      "following_url": "https://api.github.com/users/dangerousfood/following{/other_user}",
      "gists_url": "https://api.github.com/users/dangerousfood/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dangerousfood/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dangerousfood/subscriptions",
      "organizations_url": "https://api.github.com/users/dangerousfood/orgs",
      "repos_url": "https://api.github.com/users/dangerousfood/repos",
      "events_url": "https://api.github.com/users/dangerousfood/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dangerousfood/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "akhila-raju",
      "id": 5432198,
      "node_id": "MDQ6VXNlcjU0MzIxOTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5432198?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akhila-raju",
      "html_url": "https://github.com/akhila-raju",
      "followers_url": "https://api.github.com/users/akhila-raju/followers",
      "following_url": "https://api.github.com/users/akhila-raju/following{/other_user}",
      "gists_url": "https://api.github.com/users/akhila-raju/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akhila-raju/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akhila-raju/subscriptions",
      "organizations_url": "https://api.github.com/users/akhila-raju/orgs",
      "repos_url": "https://api.github.com/users/akhila-raju/repos",
      "events_url": "https://api.github.com/users/akhila-raju/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akhila-raju/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "jrhea",
      "id": 5555162,
      "node_id": "MDQ6VXNlcjU1NTUxNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrhea",
      "html_url": "https://github.com/jrhea",
      "followers_url": "https://api.github.com/users/jrhea/followers",
      "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
      "organizations_url": "https://api.github.com/users/jrhea/orgs",
      "repos_url": "https://api.github.com/users/jrhea/repos",
      "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrhea/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "cemozerr",
      "id": 16581242,
      "node_id": "MDQ6VXNlcjE2NTgxMjQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/16581242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cemozerr",
      "html_url": "https://github.com/cemozerr",
      "followers_url": "https://api.github.com/users/cemozerr/followers",
      "following_url": "https://api.github.com/users/cemozerr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cemozerr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cemozerr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cemozerr/subscriptions",
      "organizations_url": "https://api.github.com/users/cemozerr/orgs",
      "repos_url": "https://api.github.com/users/cemozerr/repos",
      "events_url": "https://api.github.com/users/cemozerr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cemozerr/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "schroedingerscode",
      "id": 25290629,
      "node_id": "MDQ6VXNlcjI1MjkwNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schroedingerscode",
      "html_url": "https://github.com/schroedingerscode",
      "followers_url": "https://api.github.com/users/schroedingerscode/followers",
      "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
      "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
      "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
      "repos_url": "https://api.github.com/users/schroedingerscode/repos",
      "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-02-21T19:29:11Z",
  "updated_at": "2019-03-07T14:54:27Z",
  "closed_at": "2019-03-07T14:54:27Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!-- Have you done the following? -->\r\n<!--   * read the Code of Conduct? By filing an Issue, you are expected to -->  \r\n<!--     comply with it, including treating everyone with respect: -->\r\n<!--     https://github.com/PegasysEng/artemis/blob/master/CODE-OF-CONDUCT.md -->\r\n<!--   * Reproduced the issue in the latest version of the software -->\r\n<!--   * Read the debugging wiki: https://github.com/PegasysEng/artemis/wiki/debugging -->\r\n<!--   * Duplicate Issue check:  https://github.com/search?q=+is%3Aissue+repo%3APegasysEng/Artemis -->\r\n<!-- Note:  Not all sections will apply to all issue types. -->\r\n\r\n### Description\r\nHere are the tasks that need to be completed in order to have an MVPoC for Artemis that is demo-able.\r\n\r\n#### Framework mods (@jrhea) #376\r\n- [x] need to be able to retrieve state by state_root in ChainStore\r\n- [x] resolve the circular dependency issue caused by adding BeaconState to ChainStore\r\n  - [x] BeaconState.java needs to be moved from statetransition to datastructures/state\r\n  - [x] BeaconStateUtil.java needs to be moved from statetransition/util to datastructures/util\r\n  - [x] InterfaceAdapter.java needs to be moved from statetransition to datastructures/util\r\n  - [x] AttestationUtil.java needs to be moved from statetransition/util to datastructures/util\r\n  - [x] CrosslinkCommitteeUtil.java needs to be moved from statetransition/util to datastructures/util\r\n  - [x] ValidatorsUtil.java needs to be moved from statetransition/util to datastructures/util\r\n  - [x] TreeHashUtil.java needs to be moved to root/util\r\n> Note: all associated test files need to be moved too\r\n  - [x] predictable signature generation by providing entropy\r\n  - [x] modification of getParent implementation in ChainStorageClient\r\n  - [x] fixed error handling in ChainStorage.get()\r\n  - [x] better block simulation in MockP2PNetwork\r\n  - [x] StateTreeManager:\r\n    - [x] mods to get_ancestor\r\n    - [x] abstracted away genesis state & client from OnChainStart \r\n    - [x] modified onNewSlot to pass in the state corresponding to the received block's paren't state so that the processing step could be verified\r\n  - [x] in StateTransition, moved error handling to slot, block and epoch processing\r\n  - [x] DataStructureUtil:\r\n    - [x] createInitialBeaconState() -> can generate a deterministic initial beacon state\r\n    - [x] newBeaconBlock() -> creates a beaconBlock that can be verified by state processing\r\n    - [x] added seeds to random data methods so that we can have random looking, but repeatable runs\r\n\r\n#### On startup (@jrhea) #376\r\n\r\n- [x] need the initial state saved to chainstore in OnChainStart (in progress)\r\n- [x] need genesis block with slot `GENESIS_SLOT` saved to chainstore.  genesis block looks like this:\r\n\r\n```javascript\r\n{\r\n    slot=GENESIS_SLOT,\r\n    parent_root=ZERO_HASH,\r\n    state_root=STARTUP_STATE_ROOT,\r\n    randao_reveal=EMPTY_SIGNATURE,\r\n    eth1_data=Eth1Data(\r\n        deposit_root=ZERO_HASH,\r\n        block_hash=ZERO_HASH\r\n    ),\r\n    signature=EMPTY_SIGNATURE,\r\n    body=BeaconBlockBody(\r\n        proposer_slashings=[],\r\n        attester_slashings=[],\r\n        attestations=[],\r\n        deposits=[],\r\n        exits=[],\r\n    ),\r\n}\r\n``` \r\n#### Emulation( in progress @jrhea )\r\n- [x] Create the most basic version of blocks coming in from the network and referring to the correct state_root and parent_block #382 \r\n- [x] simulate network traffic coming from external block proposers and attesters\r\n    - [x] fix issue with validators not being activated (which causes a divide by zero error)\r\n\r\n#### Beacon chain processing (in progress - @jrhea)\r\nFor a beacon chain block, block, to be processed by a node, the following conditions must be met:\r\n- [x] The parent block with root block.parent_root has been processed and accepted.\r\n- [x] The node's local clock time is greater than or equal to state.genesis_time + block.slot * SLOT_DURATION.\r\n~An Ethereum 1.0 block pointed to by the state.latest_eth1_data.block_hash has been processed and accepted.~\r\n- [x] lmd_ghost integration #410 (@cemozerr)\r\n\r\n#### Beacon chain fork choice rule #214 (complete - @akhila-raju & @cemozerr)\r\n- [x] Let finalized_head be the finalized block with the highest epoch. (A block B is finalized if there is a descendant of B in store the processing of which sets B as finalized.)\r\n- [x] Let justified_head be the descendant of finalized_head with the highest epoch that has been justified for at least 1 epoch. (A block B is justified if there is a descendant of B in store the processing of which sets B as justified.) If no such descendant exists set justified_head to finalized_head.\r\n- [x] Let get_ancestor(store: Store, block: BeaconBlock, slot: SlotNumber) -> BeaconBlock be the ancestor of block with slot number slot. The get_ancestor function can be defined recursively as:\r\n```python\r\ndef get_ancestor(store: Store, block: BeaconBlock, slot: SlotNumber) -> BeaconBlock:\r\n    \"\"\"\r\n    Get the ancestor of ``block`` with slot number ``slot``; return ``None`` if not found.\r\n    \"\"\"\r\n    if block.slot == slot:\r\n        return block\r\n    elif block.slot < slot:\r\n        return None\r\n    else:\r\n        return get_ancestor(store, store.get_parent(block), slot)\r\n```\r\n- [x] Let get_latest_attestation(store: Store, validator: Validator) -> Attestation be the attestation with the highest slot number in store from validator. If several such attestations exist, use the one the validator v observed first.\r\n- [x] Let get_latest_attestation_target(store: Store, validator: Validator) -> BeaconBlock be the target block in the attestation get_latest_attestation(store, validator).\r\n- [x] Let get_children(store: Store, block: BeaconBlock) -> List[BeaconBlock] returns the child blocks of the given block.\r\n- [x]  Let justified_head_state be the resulting BeaconState object from processing the chain up to the justified_head.\r\n- [x] The head (block) is lmd_ghost(store, justified_head_state, justified_head): \r\n```python\r\ndef lmd_ghost(store: Store, start_state: BeaconState, start_block: BeaconBlock) -> BeaconBlock:\r\n    \"\"\"\r\n    Execute the LMD-GHOST algorithm to find the head ``BeaconBlock``.\r\n    \"\"\"\r\n    validators = start_state.validator_registry\r\n    active_validators = [\r\n        validators[i]\r\n        for i in get_active_validator_indices(validators, start_state.slot)\r\n    ]\r\n    attestation_targets = [\r\n        get_latest_attestation_target(store, validator)\r\n        for validator in active_validators\r\n    ]\r\n\r\n    def get_vote_count(block: BeaconBlock) -> int:\r\n        return len([\r\n            target\r\n            for target in attestation_targets\r\n            if get_ancestor(store, target, block.slot) == block\r\n        ])\r\n\r\n    head = start_block\r\n    while 1:\r\n        children = get_children(store, head)\r\n        if len(children) == 0:\r\n            return head\r\n        head = max(children, key=get_vote_count)\r\n```\r\n\r\n#### Pow Chain Work #344 (@dangerousfood )\r\n- [x] Work needed to have complete integration of the PoW chain with the Beacon Chain \r\n\r\n#### BLS Implementation #104 (@benjaminion)\r\n- [x] All the tasks associated with the BLS implementation\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "jrhea",
    "id": 5555162,
    "node_id": "MDQ6VXNlcjU1NTUxNjI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/5555162?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jrhea",
    "html_url": "https://github.com/jrhea",
    "followers_url": "https://api.github.com/users/jrhea/followers",
    "following_url": "https://api.github.com/users/jrhea/following{/other_user}",
    "gists_url": "https://api.github.com/users/jrhea/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jrhea/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jrhea/subscriptions",
    "organizations_url": "https://api.github.com/users/jrhea/orgs",
    "repos_url": "https://api.github.com/users/jrhea/repos",
    "events_url": "https://api.github.com/users/jrhea/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jrhea/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/368/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/368/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
