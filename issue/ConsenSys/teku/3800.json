{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/3800",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/3800/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/3800/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/3800/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/3800",
  "id": 844578104,
  "node_id": "MDU6SXNzdWU4NDQ1NzgxMDQ=",
  "number": 3800,
  "title": "Use atomic write for signing records",
  "user": {
    "login": "jmcruz1983",
    "id": 15966694,
    "node_id": "MDQ6VXNlcjE1OTY2Njk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/15966694?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jmcruz1983",
    "html_url": "https://github.com/jmcruz1983",
    "followers_url": "https://api.github.com/users/jmcruz1983/followers",
    "following_url": "https://api.github.com/users/jmcruz1983/following{/other_user}",
    "gists_url": "https://api.github.com/users/jmcruz1983/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jmcruz1983/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jmcruz1983/subscriptions",
    "organizations_url": "https://api.github.com/users/jmcruz1983/orgs",
    "repos_url": "https://api.github.com/users/jmcruz1983/repos",
    "events_url": "https://api.github.com/users/jmcruz1983/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jmcruz1983/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "regio",
    "id": 1396294,
    "node_id": "MDQ6VXNlcjEzOTYyOTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1396294?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/regio",
    "html_url": "https://github.com/regio",
    "followers_url": "https://api.github.com/users/regio/followers",
    "following_url": "https://api.github.com/users/regio/following{/other_user}",
    "gists_url": "https://api.github.com/users/regio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/regio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/regio/subscriptions",
    "organizations_url": "https://api.github.com/users/regio/orgs",
    "repos_url": "https://api.github.com/users/regio/repos",
    "events_url": "https://api.github.com/users/regio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/regio/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "regio",
      "id": 1396294,
      "node_id": "MDQ6VXNlcjEzOTYyOTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1396294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/regio",
      "html_url": "https://github.com/regio",
      "followers_url": "https://api.github.com/users/regio/followers",
      "following_url": "https://api.github.com/users/regio/following{/other_user}",
      "gists_url": "https://api.github.com/users/regio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/regio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/regio/subscriptions",
      "organizations_url": "https://api.github.com/users/regio/orgs",
      "repos_url": "https://api.github.com/users/regio/repos",
      "events_url": "https://api.github.com/users/regio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/regio/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-03-30T13:45:57Z",
  "updated_at": "2021-08-31T03:21:45Z",
  "closed_at": "2021-08-31T03:21:45Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nAs a validator, I want local slashing protection to ignore corrupted/empty signing records.\r\n\r\n### Steps to Reproduce (Bug)\r\n1. Having a validator running with loaded 1000 keys with local slashing protection enabled.\r\n2. Loaded keys got reduced to 500.\r\n3. And validator got restarted.\r\n4. Error related to corrupted file in slashing protection directory started to appear in logs.\r\n5. After inspecting slashing protection directory, we observed that some yaml files got 0 bytes size.\r\n\r\nLog stack trace:\r\n`\r\nteku-validator-2-0 teku 13:40:41.676 ERROR - Validator   *** Failed to produce attestation  Slot: 850101 Validator: <REDACTED>\r\nteku-validator-2-0 teku java.io.UncheckedIOException: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input\r\nteku-validator-2-0 teku  at [Source: (byte[])\"\"; line: 1, column: 1]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.data.signingrecord.ValidatorSigningRecordSerialization.readRecord(ValidatorSigningRecordSerialization.java:52) ~[teku-data-signingrecord-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.data.signingrecord.ValidatorSigningRecord.fromBytes(ValidatorSigningRecord.java:67) ~[teku-data-signingrecord-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat java.util.Optional.map(Optional.java:258) ~[?:?]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.core.signatures.LocalSlashingProtector.loadSigningRecord(LocalSlashingProtector.java:87) ~[teku-ethereum-core-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.core.signatures.LocalSlashingProtector.lambda$maySignAttestation$1(LocalSlashingProtector.java:61) ~[teku-ethereum-core-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.of(SafeFuture.java:78) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.core.signatures.LocalSlashingProtector.maySignAttestation(LocalSlashingProtector.java:58) ~[teku-ethereum-core-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.core.signatures.SlashingProtectedSigner.signAttestationData(SlashingProtectedSigner.java:64) ~[teku-ethereum-core-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.validator.client.duties.AttestationProductionDuty.signAttestationForValidator(AttestationProductionDuty.java:150) ~[teku-validator-client-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.validator.client.duties.AttestationProductionDuty.lambda$signAttestationsForCommittee$5(AttestationProductionDuty.java:136) ~[teku-validator-client-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.validator.client.duties.AttestationProductionDuty$Committee.forEach(AttestationProductionDuty.java:186) ~[teku-validator-client-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.validator.client.duties.AttestationProductionDuty.signAttestationsForCommittee(AttestationProductionDuty.java:135) ~[teku-validator-client-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.validator.client.duties.AttestationProductionDuty.lambda$produceAttestationsForCommittee$2(AttestationProductionDuty.java:120) ~[teku-validator-client-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat java.util.Optional.map(Optional.java:258) ~[?:?]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.validator.client.duties.AttestationProductionDuty.lambda$produceAttestationsForCommittee$4(AttestationProductionDuty.java:118) ~[teku-validator-client-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:1146) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2137) ~[?:?]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.lambda$propagateResult$3(SafeFuture.java:144) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:883) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.whenComplete(CompletableFuture.java:2315) ~[?:?]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.whenComplete(SafeFuture.java:495) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.whenComplete(SafeFuture.java:29) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.propagateResult(SafeFuture.java:139) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.lambda$exceptionallyCompose$25(SafeFuture.java:339) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2137) ~[?:?]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.lambda$propagateResult$3(SafeFuture.java:144) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.uniWhenCompleteStage(CompletableFuture.java:883) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.CompletableFuture.whenComplete(CompletableFuture.java:2315) ~[?:?]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.whenComplete(SafeFuture.java:495) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.whenComplete(SafeFuture.java:29) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.propagateResult(SafeFuture.java:139) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.SafeFuture.propagateTo(SafeFuture.java:236) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.infrastructure.async.ScheduledExecutorAsyncRunner.lambda$createRunnableForAction$1(ScheduledExecutorAsyncRunner.java:119) ~[teku-infrastructure-async-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) ~[?:?]\r\nteku-validator-2-0 teku \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) ~[?:?]\r\nteku-validator-2-0 teku \tat java.lang.Thread.run(Thread.java:832) [?:?]\r\nteku-validator-2-0 teku Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input\r\nteku-validator-2-0 teku  at [Source: (byte[])\"\"; line: 1, column: 1]\r\nteku-validator-2-0 teku \tat com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59) ~[jackson-databind-2.11.2.jar:2.11.2]\r\nteku-validator-2-0 teku \tat com.fasterxml.jackson.databind.ObjectMapper._initForReading(ObjectMapper.java:4666) ~[jackson-databind-2.11.2.jar:2.11.2]\r\nteku-validator-2-0 teku \tat com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4511) ~[jackson-databind-2.11.2.jar:2.11.2]\r\nteku-validator-2-0 teku \tat com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3527) ~[jackson-databind-2.11.2.jar:2.11.2]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.data.yaml.YamlProvider.read(YamlProvider.java:66) ~[teku-data-yaml-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \tat tech.pegasys.teku.data.signingrecord.ValidatorSigningRecordSerialization.readRecord(ValidatorSigningRecordSerialization.java:50) ~[teku-data-signingrecord-21.2.0.jar:21.2.0]\r\nteku-validator-2-0 teku \t... 48 more\r\n`\r\n\r\nCorrupted files in _data/validator/slashprotection_:\r\n`-rwxrwxrwx 1 root teku   0 Mar 29 13:24 <REDACTED>.yml`\r\n\r\n`-rwxrwxrwx 1 root teku   0 Mar 29 14:22 <REDACTED>.yml`\r\n\r\n**Frequency:** 2 files got corrupted failing to produce attestations every time these keys were used.\r\n\r\n### Acceptance Criteria\r\n* Slashing protection should ignore corrupted signing records.\r\n* Validator should be able to override/fix empty file.\r\n\r\n### Versions (Add all that apply)\r\n* Software version: `21.2.0`\r\n* Java version: `openjdk 15.0.2 2021-01-19`\r\n* OS Name & Version: `Debian GNU/Linux 10 (buster)`\r\n* Kernel Version: `Linux teku-validator-0-0 5.4.0-1036-azure #38~18.04.1-Ubuntu SMP Wed Jan 6 18:26:30 UTC 2021 x86_64 GNU/Linux`\r\n* Cloud VM, type, size: `AKS v1.18.14`",
  "closed_by": {
    "login": "regio",
    "id": 1396294,
    "node_id": "MDQ6VXNlcjEzOTYyOTQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1396294?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/regio",
    "html_url": "https://github.com/regio",
    "followers_url": "https://api.github.com/users/regio/followers",
    "following_url": "https://api.github.com/users/regio/following{/other_user}",
    "gists_url": "https://api.github.com/users/regio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/regio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/regio/subscriptions",
    "organizations_url": "https://api.github.com/users/regio/orgs",
    "repos_url": "https://api.github.com/users/regio/repos",
    "events_url": "https://api.github.com/users/regio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/regio/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/3800/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/3800/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/811605201",
    "html_url": "https://github.com/ConsenSys/teku/issues/3800#issuecomment-811605201",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/3800",
    "id": 811605201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTYwNTIwMQ==",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-01T03:09:32Z",
    "updated_at": "2021-04-01T03:09:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "We definitely don't want to ignore corrupt files as that would create opportunities to be slashed.\r\n\r\nIn your case since you're using web3signer with its slashing protection anyway, my suggestion would be to disable the inbuilt slashing protection from teku entirely with `--validators-external-signer-slashing-protection-enabled=false`.\r\n\r\nIt's interesting that the files got cleared by not written to as we do use fsync to flush the write immediately.  When the validator was restarted was it a clean shutdown or was a k8s pod just terminated?\r\n\r\nWe could potentially look at writing to a temp file then doing an atomic move to replace the existing one - it's more expensive to do though and I'm not sure if it would actually be more atomic when using a network drive.",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/811605201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
