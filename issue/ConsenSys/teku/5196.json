{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/5196",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/5196/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/5196/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/5196/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/5196",
  "id": 1172800521,
  "node_id": "I_kwDOCM9I9M5F54QJ",
  "number": 5196,
  "title": "Improve `AggregatingAttestationPool`",
  "user": {
    "login": "tbenr",
    "id": 15999009,
    "node_id": "MDQ6VXNlcjE1OTk5MDA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tbenr",
    "html_url": "https://github.com/tbenr",
    "followers_url": "https://api.github.com/users/tbenr/followers",
    "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
    "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
    "organizations_url": "https://api.github.com/users/tbenr/orgs",
    "repos_url": "https://api.github.com/users/tbenr/repos",
    "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tbenr/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2022-03-17T19:11:07Z",
  "updated_at": "2022-04-06T21:50:50Z",
  "closed_at": "2022-04-06T21:50:49Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "We should better control the items contained in the pool since it is expensive to select them to find good ones that can be included in block when requested by `getAttestationsForBlock`\r\n\r\nWhat I can see so far:\r\n- [x] we are pruning attestations `onSlot` event. We retain all attestations within last 2 epochs.\r\n  - action taken: reduced to 32 slot #5197\r\n- [x] we are not considering the retain rule in the `add` method, so attestation older than 2 epochs could be added and then pruned on the next `onSlot`\r\n  - action taken:  none. During attestation validation we already ignores attestations older than 32 slots. (as per spec `ATTESTATION_PROPAGATION_SLOT_RANGE`).\r\n\r\n- we can have an HARD cap of number of attestationData in each slot  to `MAX_ATTESTATIONS` (retrieved by the schema at slot)\r\n\r\n```java\r\n  private Optional<MatchingDataAttestationGroup> getOrCreateAttestationGroup(\r\n      final AttestationData attestationData) {\r\n    Set<Bytes> attestationDataRootSet =\r\n        dataHashBySlot.computeIfAbsent(attestationData.getSlot(), slot -> new HashSet<>());\r\n    if (attestationDataRootSet.size() > 128) {\r\n      return Optional.empty();\r\n    }\r\n    attestationDataRootSet.add(attestationData.hashTreeRoot());\r\n    return attestationGroupByDataHash.computeIfAbsent(\r\n        attestationData.hashTreeRoot(),\r\n        key -> new MatchingDataAttestationGroup(spec, attestationData));\r\n  }\r\n```\r\n\r\n-  We could introduce another data structure `Map<Slot,Integer> numOfQueuedAttDataBySlot`  mapping `Slot -> sum(dataHashBySlot.get(s1).size()) where s1 <= Slot` and use this in `getOrCreateAttestationGroup` to avoid adding attestationData that VERY unlikely will be considered in `getAttestationsForBlock` due to the fact that there are already a lot of attestationData that will be considered first and will fill-up the upcoming block.\r\n",
  "closed_by": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/5196/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/5196/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1071304977",
    "html_url": "https://github.com/ConsenSys/teku/issues/5196#issuecomment-1071304977",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/5196",
    "id": 1071304977,
    "node_id": "IC_kwDOCM9I9M4_2tER",
    "user": {
      "login": "benjaminion",
      "id": 20796281,
      "node_id": "MDQ6VXNlcjIwNzk2Mjgx",
      "avatar_url": "https://avatars.githubusercontent.com/u/20796281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjaminion",
      "html_url": "https://github.com/benjaminion",
      "followers_url": "https://api.github.com/users/benjaminion/followers",
      "following_url": "https://api.github.com/users/benjaminion/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjaminion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjaminion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjaminion/subscriptions",
      "organizations_url": "https://api.github.com/users/benjaminion/orgs",
      "repos_url": "https://api.github.com/users/benjaminion/repos",
      "events_url": "https://api.github.com/users/benjaminion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjaminion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-17T19:51:42Z",
    "updated_at": "2022-03-17T19:51:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> We retain all attestations within last 2 epochs.\r\n\r\nAttestations older than 32 slots are valueless, so we don't need the whole 2 epochs' worth.\r\n\r\n`current_epoch_attestations` and `previous_epoch_attestations` are no longer a thing in the Altair spec, so this could be re-engineered if they are still in use.",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1071304977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1071487771",
    "html_url": "https://github.com/ConsenSys/teku/issues/5196#issuecomment-1071487771",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/5196",
    "id": 1071487771,
    "node_id": "IC_kwDOCM9I9M4_3Zsb",
    "user": {
      "login": "tbenr",
      "id": 15999009,
      "node_id": "MDQ6VXNlcjE1OTk5MDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbenr",
      "html_url": "https://github.com/tbenr",
      "followers_url": "https://api.github.com/users/tbenr/followers",
      "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
      "organizations_url": "https://api.github.com/users/tbenr/orgs",
      "repos_url": "https://api.github.com/users/tbenr/repos",
      "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbenr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-03-17T21:03:43Z",
    "updated_at": "2022-03-17T21:03:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Attestations older than 32 slots are valueless, so we don't need the whole 2 epochs' worth.\n\nYeah true, we are infact filtering valueless attestations but only during selecting them for block production. Definitely we can easily improve here. ",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1071487771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
