{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/4348",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/4348/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/4348/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/4348/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/4348",
  "id": 994453495,
  "node_id": "MDU6SXNzdWU5OTQ0NTM0OTU=",
  "number": 4348,
  "title": "[Merge] Support Async payload execution",
  "user": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-09-13T04:57:47Z",
  "updated_at": "2021-11-17T20:54:34Z",
  "closed_at": "2021-11-17T20:54:34Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nCurrently, synchronous calls are made to the execution engine during block processing which results in blocking the fork choice thread while the execution engine processes the payload.  The fork choice thread however is not designed to be blocked.\r\n\r\nWe either need to move block processing off the fork choice thread entirely (without introducing race conditions with fork choice vote updating or deadlocks while accessing the protoarray) or be able to process the execution payload before moving onto the fork choice thread (similar to how the beacon state is retrieved prior to moving onto the fork choice thread).",
  "closed_by": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/4348/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/4348/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/919680287",
    "html_url": "https://github.com/ConsenSys/teku/issues/4348#issuecomment-919680287",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/4348",
    "id": 919680287,
    "node_id": "IC_kwDOCM9I9M420TUf",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-15T04:02:04Z",
    "updated_at": "2021-09-15T04:02:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect the key to this is to split block verification from processing.  We ultimately need to move the `executionPayloadUtil.verifyExecutionStateTransition` call which is currently in `BlockProcessorMerge.processExecutionPayload` to happen off the fork choice thread - thus it would be a pre-verification step and the block can be rejected if the execution state is invalid.  Since verifying the state transition is expensive we likely also need to do some of the other verifications before this step though - at minimum checking the block signature.  Likely we could and should move quite a lot of the verifications forward and thus be able to perform them off the fork choice thread as well which is useful.\r\n\r\nThe potential risk here is that doing this verification off the fork choice thread makes it more difficult to guarantee the order of messages sent to the execution engine.  We'd guarantee that `newBlock` is called before `setHead` for that block but there might be multiple blocks from different forks being processed in parallel resulting in `newBlock(blockA)` `newBlock(blockB)` `setHead(blockA)` type sequences (in old RPC method name terms). In the absence of forks, we'd still have to import blocks one at a time anyway but the pending block pool automatically does that sequencing for us.  @mkalinin might be worth considering this as part of discussions on the API.",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/919680287/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/919954038",
    "html_url": "https://github.com/ConsenSys/teku/issues/4348#issuecomment-919954038",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/4348",
    "id": 919954038,
    "node_id": "IC_kwDOCM9I9M421WJ2",
    "user": {
      "login": "mkalinin",
      "id": 1892772,
      "node_id": "MDQ6VXNlcjE4OTI3NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1892772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkalinin",
      "html_url": "https://github.com/mkalinin",
      "followers_url": "https://api.github.com/users/mkalinin/followers",
      "following_url": "https://api.github.com/users/mkalinin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkalinin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkalinin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkalinin/subscriptions",
      "organizations_url": "https://api.github.com/users/mkalinin/orgs",
      "repos_url": "https://api.github.com/users/mkalinin/repos",
      "events_url": "https://api.github.com/users/mkalinin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkalinin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-15T11:57:51Z",
    "updated_at": "2021-09-15T11:57:51Z",
    "author_association": "NONE",
    "body": "> The potential risk here is that doing this verification off the fork choice thread makes it more difficult to guarantee the order of messages sent to the execution engine\r\n\r\nThis is very good point. There is a the [Message ordering](https://hackmd.io/@n0ble/consensus_api_design_space#Message-ordering) section in the design doc. But for the Merge F2F event I am going to suggest consensus clients to make synchronous calls. This is straightforward and doesn't affect aims that we have for the interop. It also allows for using HTTP as the communication protocol. Making these calls async is a must for production implementations and I think can be done later on considering the message ordering strategy and restrictions on the communication protocol that it will bring. This is what I'd like to raise during the ACD this week, I think we will get a rough agreement for synchronous approach.\r\n\r\nSo, I'd wait for the ACD before starting this portion of work. It will likely be deferred for after the interop.",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/919954038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
