{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/5623",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/5623/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/5623/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/5623/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/5623",
  "id": 1252691014,
  "node_id": "I_kwDOCM9I9M5KqoxG",
  "number": 5623,
  "title": "Different Json type definitions for different ByteList fields ",
  "user": {
    "login": "Nashatyrev",
    "id": 8173857,
    "node_id": "MDQ6VXNlcjgxNzM4NTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8173857?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Nashatyrev",
    "html_url": "https://github.com/Nashatyrev",
    "followers_url": "https://api.github.com/users/Nashatyrev/followers",
    "following_url": "https://api.github.com/users/Nashatyrev/following{/other_user}",
    "gists_url": "https://api.github.com/users/Nashatyrev/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Nashatyrev/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Nashatyrev/subscriptions",
    "organizations_url": "https://api.github.com/users/Nashatyrev/orgs",
    "repos_url": "https://api.github.com/users/Nashatyrev/repos",
    "events_url": "https://api.github.com/users/Nashatyrev/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Nashatyrev/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-05-30T12:45:16Z",
  "updated_at": "2022-05-31T08:44:44Z",
  "closed_at": "2022-05-31T08:44:44Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "<!-- \r\nBy filing an Issue, you are expected to comply with the Code of Conduct, \r\nincluding treating everyone with respect:\r\nhttps://github.com/ConsenSys/teku/blob/master/CODE-OF-CONDUCT.md\r\n\r\nNot all sections will apply to all issue types.\r\n-->\r\n\r\n### Description\r\n\r\nAccording to API schema definitions [here](https://ethereum.github.io/beacon-APIs) the `BeaconStateAltair.*_epoch_participation` fields should be represented as an array of bytes while the field `ExecutionPayload.extra_data` field should be represented as a hex byte string. While both fields have the same SSZ schema: `ByteList`\r\n\r\nCurrently that discrepancy is annihilated by the absence of the following 2 lines: \r\n```patch\r\nIndex: infrastructure/ssz/src/main/java/tech/pegasys/teku/infrastructure/ssz/schema/collections/SszPrimitiveListSchema.java\r\nIDEA additional info:\r\nSubsystem: com.intellij.openapi.diff.impl.patch.CharsetEP\r\n<+>UTF-8\r\n===================================================================\r\ndiff --git a/infrastructure/ssz/src/main/java/tech/pegasys/teku/infrastructure/ssz/schema/collections/SszPrimitiveListSchema.java b/infrastructure/ssz/src/main/java/tech/pegasys/teku/infrastructure/ssz/schema/collections/SszPrimitiveListSchema.java\r\n--- a/infrastructure/ssz/src/main/java/tech/pegasys/teku/infrastructure/ssz/schema/collections/SszPrimitiveListSchema.java\t(revision 1440c4cc14007ac5b3ddc380722817b692b6c053)\r\n+++ b/infrastructure/ssz/src/main/java/tech/pegasys/teku/infrastructure/ssz/schema/collections/SszPrimitiveListSchema.java\t(date 1653912116533)\r\n@@ -42,6 +42,8 @@\r\n       return (SszPrimitiveListSchema<PrimT, SszPrimT, ?>) SszBitlistSchema.create(maxLength);\r\n     } else if (elementSchema == SszPrimitiveSchemas.UINT64_SCHEMA) {\r\n       return (SszPrimitiveListSchema<PrimT, SszPrimT, ?>) SszUInt64ListSchema.create(maxLength);\r\n+    } else if (elementSchema == SszPrimitiveSchemas.BYTE_SCHEMA) {\r\n+      return (SszPrimitiveListSchema<PrimT, SszPrimT, ?>) SszByteListSchema.create(maxLength);\r\n     } else {\r\n       return new SszPrimitiveListSchemaImpl<>(elementSchema, maxLength);\r\n     }\r\n```\r\nIn other words currently the `*_epoch_participation` schema is `SszPrimitiveListSchemaImpl<SszByte>` instance while `extra_data` schema is `SszByteListSchemaImpl` instance. That's why they have different Json type definitions. \r\n\r\n### Possible solutions\r\n\r\n- Request API change: always represent `ByteList` as a hex string\r\n- Request API change: always represent `ByteList` as an array of bytes\r\n- Add a Json type parameter to the `SszByteListSchema` and specify different Json types for the fields mentioned above \r\n\r\n### Relates to\r\n- #5611 ",
  "closed_by": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/5623/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/5623/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1141555250",
    "html_url": "https://github.com/ConsenSys/teku/issues/5623#issuecomment-1141555250",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/5623",
    "id": 1141555250,
    "node_id": "IC_kwDOCM9I9M5ECsAy",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-31T00:23:46Z",
    "updated_at": "2022-05-31T00:23:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "This has been a bit of a point of contention recently - the participation lists in the state are defined as `List[uint8]` and the extra data is `ByteList`. In the ssz spec `byte` is an alias of `uint8` but the JSON representation of the two is different (one being a decimal number and one being hex encoded).  We should be able to use the same underlying representation in SSZ but with a different mapping to JSON easily enough though. I think it will boil down to just having a subclass of SszByteListSchema that provides the uint8 form of json type definition with no other changes. I'll have a play.",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1141555250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
