{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/6346",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/6346",
  "id": 1425753783,
  "node_id": "I_kwDOCM9I9M5U-0a3",
  "number": 6346,
  "title": "verkle trees: add 2 fields to ExecutionPayload",
  "user": {
    "login": "gballet",
    "id": 3272758,
    "node_id": "MDQ6VXNlcjMyNzI3NTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gballet",
    "html_url": "https://github.com/gballet",
    "followers_url": "https://api.github.com/users/gballet/followers",
    "following_url": "https://api.github.com/users/gballet/following{/other_user}",
    "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
    "organizations_url": "https://api.github.com/users/gballet/orgs",
    "repos_url": "https://api.github.com/users/gballet/repos",
    "events_url": "https://api.github.com/users/gballet/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gballet/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "rolfyone",
    "id": 2967240,
    "node_id": "MDQ6VXNlcjI5NjcyNDA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rolfyone",
    "html_url": "https://github.com/rolfyone",
    "followers_url": "https://api.github.com/users/rolfyone/followers",
    "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
    "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
    "organizations_url": "https://api.github.com/users/rolfyone/orgs",
    "repos_url": "https://api.github.com/users/rolfyone/repos",
    "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rolfyone/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-10-27T14:41:02Z",
  "updated_at": "2023-05-05T15:18:36Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Description\r\n\r\nWith the verge, proofs and witness of the pre-state of an (EL) block execution are included in the blocks. In order to build a PoS testnet that provides proofs in blocks, it would be great if it were possible to create a branch with the required fields to be added to the `ExecutionPayload`.\r\n\r\nThe `ExecutionPayload` needs to have two more, optional fields:\r\n\r\n * `VerkleProof`, a byte array of variable length\r\n * `VerkleKeyVals`, an array of (key, value) pairs, in which the key is a 32-byte vector, and value is a byte vector of length either 0 (missing value) or 32.\r\n\r\nAt the moment, there is no need to support forking as for this testnet, verkle trees are used since the genesis.\r\n\r\nIf present, these two fields should be propagated over the network with the rest of the `ExecutionPayload` so that other clients can inject these fields in their verkle-enabled EL.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/6346/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1296568501",
    "html_url": "https://github.com/ConsenSys/teku/issues/6346#issuecomment-1296568501",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346",
    "id": 1296568501,
    "node_id": "IC_kwDOCM9I9M5NSBC1",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-31T05:42:23Z",
    "updated_at": "2022-10-31T05:42:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm, I'm not sure I have enough info to actually implement this.  `ExecutionPayload` is an SSZ object so there's no way to add an optional field - there hasn't be some default value (for a list or array that's usually just the empty list), and there has to be a maximum length on every type.\n\nFor execution payloads specifically we'd also need to know if these new fields are present on `ExecutionPayloadHeader` as well or if they're replaced with the hash tree root like transactions is.",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1296568501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1296865609",
    "html_url": "https://github.com/ConsenSys/teku/issues/6346#issuecomment-1296865609",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346",
    "id": 1296865609,
    "node_id": "IC_kwDOCM9I9M5NTJlJ",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-10-31T10:07:41Z",
    "updated_at": "2022-10-31T10:07:41Z",
    "author_association": "NONE",
    "body": "Thank you for the feedback.\n\n  1. Both lists are arbitraty-length, but limiting them to a maximum of 75K\neach for now should be fine.\n  2. It should indeed be the empty list by default.\n  3. it can be hashed in the header, because without transactions, the\nproof is of limited use\n\nThanks\nGuillaume\n\n\nOn Mon, 31 Oct 2022, 06:42 Adrian Sutton, ***@***.***> wrote:\n\n> hmm, I'm not sure I have enough info to actually implement this.\n> ExecutionPayload is an SSZ object so there's no way to add an optional\n> field - there hasn't be some default value (for a list or array that's\n> usually just the empty list), and there has to be a maximum length on every\n> type.\n>\n> For execution payloads specifically we'd also need to know if these new\n> fields are present on ExecutionPayloadHeader as well or if they're\n> replaced with the hash tree root like transactions is.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ConsenSys/teku/issues/6346#issuecomment-1296568501>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAY7ANU3KD4QPNKGKIMZHWDWF5L4VANCNFSM6AAAAAARQEK57A>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1296865609/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1297993443",
    "html_url": "https://github.com/ConsenSys/teku/issues/6346#issuecomment-1297993443",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346",
    "id": 1297993443,
    "node_id": "IC_kwDOCM9I9M5NXc7j",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-01T04:01:50Z",
    "updated_at": "2022-11-01T04:01:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've put up https://github.com/ConsenSys/teku/compare/master...ajsutton:teku:verkle-trees which has this added in. There's nothing to test it with so hard to know if there's something I've missed though.\n\nI wound up including the full verkle proof and verkle key val values in the `ExecutionPayloadHeader` because blinding and unblinding them would introduce quite a bit more complexity. In terms of actual implementation the key question is likely whether or not the verkle proof and key/vals should wind up in the `BeaconState.latestPayloadHeader` field which uses the `ExecutionPayloadHeader` type.\n\nTo make this fit within SSZ the two new fields wind up being defined as:\n\n```\nclass ExecutionPayload(Container):\n# Execution block header fields\n    parent_hash: Hash32\n    fee_recipient: ExecutionAddress  # 'beneficiary' in the yellow paper\n    state_root: Bytes32\n    receipts_root: Bytes32\n    logs_bloom: ByteVector[BYTES_PER_LOGS_BLOOM]\n    prev_randao: Bytes32  # 'difficulty' in the yellow paper\n    block_number: uint64  # 'number' in the yellow paper\n    gas_limit: uint64\n    gas_used: uint64\n    timestamp: uint64\n    extra_data: ByteList[MAX_EXTRA_DATA_BYTES]\n    base_fee_per_gas: uint256\n    # Extra payload fields\n    block_hash: Hash32  # Hash of execution block\n    verkle_proofs: ByteList[75000],                              # New \n    verkle_key_vals, List[VerkleKeyVal, 75000],          # New\n    transactions: List[Transaction, MAX_TRANSACTIONS_PER_PAYLOAD]\n\n\nclass VerkleKeyVal:\n    key: Bytes32,\n    value: ByteList[32]\n```\n\nNotably the `value` is allowing any length byte array up to 32 bytes because you can't express either 0 or 32 bytes in SSZ without using a union (and unions aren't currently used in the beacon chain so add quite a bit of complexity to support).",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1297993443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1311505059",
    "html_url": "https://github.com/ConsenSys/teku/issues/6346#issuecomment-1311505059",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346",
    "id": 1311505059,
    "node_id": "IC_kwDOCM9I9M5OK_qj",
    "user": {
      "login": "gballet",
      "id": 3272758,
      "node_id": "MDQ6VXNlcjMyNzI3NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3272758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gballet",
      "html_url": "https://github.com/gballet",
      "followers_url": "https://api.github.com/users/gballet/followers",
      "following_url": "https://api.github.com/users/gballet/following{/other_user}",
      "gists_url": "https://api.github.com/users/gballet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gballet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gballet/subscriptions",
      "organizations_url": "https://api.github.com/users/gballet/orgs",
      "repos_url": "https://api.github.com/users/gballet/repos",
      "events_url": "https://api.github.com/users/gballet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gballet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-11-11T10:19:24Z",
    "updated_at": "2022-11-11T10:19:24Z",
    "author_association": "NONE",
    "body": "@ajsutton thank you for this, there is now a branch to test: https://github.com/gballet/go-ethereum/pull/136. We will add your branch to our tests when they are ready and come back with more feedback.\r\n\r\nIncidentally, there has been a proposal for the SSZ encoding a few months ago: https://notes.ethereum.org/Si5tEWlMTYerkhG3fOIAMQ It hasn't been used so far because it requires the post-state, which isn't really practical to provide. The other problem is that it uses `Union`s. I could update the PR to return the fields needed to build these SSZ structures, but I would like to know your feedback on this, maybe it would be possible to tweak these structures to make it easier for a CL to implement?",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1311505059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1536384201",
    "html_url": "https://github.com/ConsenSys/teku/issues/6346#issuecomment-1536384201",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/6346",
    "id": 1536384201,
    "node_id": "IC_kwDOCM9I9M5bk1zJ",
    "user": {
      "login": "tbenr",
      "id": 15999009,
      "node_id": "MDQ6VXNlcjE1OTk5MDA5",
      "avatar_url": "https://avatars.githubusercontent.com/u/15999009?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tbenr",
      "html_url": "https://github.com/tbenr",
      "followers_url": "https://api.github.com/users/tbenr/followers",
      "following_url": "https://api.github.com/users/tbenr/following{/other_user}",
      "gists_url": "https://api.github.com/users/tbenr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tbenr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tbenr/subscriptions",
      "organizations_url": "https://api.github.com/users/tbenr/orgs",
      "repos_url": "https://api.github.com/users/tbenr/repos",
      "events_url": "https://api.github.com/users/tbenr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tbenr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-05T14:56:05Z",
    "updated_at": "2023-05-05T15:18:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Spec PR\r\nhttps://github.com/ethereum/consensus-specs/pull/3230",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1536384201/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
