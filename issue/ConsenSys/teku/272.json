{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/272",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/272/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/272/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/272/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/272",
  "id": 408390653,
  "node_id": "MDU6SXNzdWU0MDgzOTA2NTM=",
  "number": 272,
  "title": "Bug: UnsignedLong.fromLongBits is preferred to UnsignedLong.valueOf",
  "user": {
    "login": "schroedingerscode",
    "id": 25290629,
    "node_id": "MDQ6VXNlcjI1MjkwNjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/schroedingerscode",
    "html_url": "https://github.com/schroedingerscode",
    "followers_url": "https://api.github.com/users/schroedingerscode/followers",
    "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
    "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
    "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
    "repos_url": "https://api.github.com/users/schroedingerscode/repos",
    "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1048919129,
      "node_id": "MDU6TGFiZWwxMDQ4OTE5MTI5",
      "url": "https://api.github.com/repos/ConsenSys/teku/labels/bug%20%F0%9F%90%9E",
      "name": "bug üêû",
      "color": "dd6c94",
      "default": false,
      "description": "Something isn't working"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "schroedingerscode",
    "id": 25290629,
    "node_id": "MDQ6VXNlcjI1MjkwNjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/schroedingerscode",
    "html_url": "https://github.com/schroedingerscode",
    "followers_url": "https://api.github.com/users/schroedingerscode/followers",
    "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
    "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
    "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
    "repos_url": "https://api.github.com/users/schroedingerscode/repos",
    "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "schroedingerscode",
      "id": 25290629,
      "node_id": "MDQ6VXNlcjI1MjkwNjI5",
      "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schroedingerscode",
      "html_url": "https://github.com/schroedingerscode",
      "followers_url": "https://api.github.com/users/schroedingerscode/followers",
      "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
      "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
      "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
      "repos_url": "https://api.github.com/users/schroedingerscode/repos",
      "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-02-09T02:55:45Z",
  "updated_at": "2019-02-09T03:08:30Z",
  "closed_at": "2019-02-09T03:08:30Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\r\nAs an implementer, I should use `UnsignedLong.fromLongBits(long)` to load a `com.google.common.primitives.UnsignedLong` instead of `UnsignedLong.valueOf(long)` so that I can use the full size of an unsigned long type. \r\n\r\n### Acceptance Criteria\r\n* All occurrences of loading an UnsignedLong using `valueOf(long)` should be replaced with `fromLongBits(long)` unless there is a logical reason for treating an UnsignedLong as a signed type.\r\n\r\n### Steps to Reproduce (Bug)\r\n1. Load `tech.pegasys.artemis.datastructures.operations.AttestationData`'s `shard` OR `justified_slot` field with a long value larger than 2^63-1 (i.e. a negative long in traditional 2s complement signed arithmetic). Observe an IllegalArgumentException is thrown.\r\n\r\n2. Allow `UnsignedLong.valueOf(committees_per_slot * offset + i)` in `tech.pegasys.artemis.statetransition.util.BeaconStateUtil#get_crosslink_committees_at_slot` to become larger than 2^63-1 (i.e. a negative long in traditional 2s complement signed arithmetic). Observe an IllegalArgumentException is thrown.\r\n\r\n3. Allow `long slot_upper_bound = slot + state.getLatest_block_roots().size()` in `tech.pegasys.artemis.statetransition.util.BeaconStateUtil#get_block_root` to become larger than 2^63-1 (i.e. a negative long in traditional 2s complement signed arithmetic). Observe an IllegalArgumentException is thrown.\r\n\r\n4. Allow `mod(UnsignedLong.valueOf((long) Math.pow(2, 64)))` in `tech.pegasys.artemis.statetransition.util.EpochProcessorUtil#updateJustification` to become larger than 2^63-1 (i.e. a negative long in traditional 2s complement signed arithmetic). Observe an IllegalArgumentException is thrown.\r\n\r\n**Expected behavior:** An unsigned long value (from 0 to 2^64-1) should be able to be loaded into a \r\n`com.google.common.primitives.UnsignedLong` type.\r\n\r\n**Actual behavior:** Where `UnsignedLong.valueOf(long)` is used to load an UnsignedLong type, an IllegalArgumentException is thrown if the parameter is larger than 2^63-1 (i.e. is negative in traditional 2s complement arithmetic). \r\n\r\n### Additional Information\r\n\r\n- [Google Guava 27.0 - UnsignedLong.valueOf(long)](https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/primitives/UnsignedLong.html#valueOf-long-)\r\n\r\n- [Google Guava 27.0 - UnsignedLong.fromLongBits(long)](https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/primitives/UnsignedLong.html#fromLongBits-long-)\r\n\r\n_**Future TODOs**_\r\n\r\n- Both occurrences of potential IllegalArgumentExceptions at `PendingAttestationRecord.AttestationData.slot (long)` in `tech.pegasys.artemis.statetransition.util.AttestationUtil#get_previous_epoch_attestations` should be resolved when slots are converted from long to UnsignedLong natively.\r\n\r\n- The potential IllegalArgumentException at `long epoch = slot_to_epoch(UnsignedLong.valueOf(slot)).longValue()` in `tech.pegasys.artemis.statetransition.util.BeaconStateUtil#get_crosslink_committees_at_slot` should be resolved when slots are converted from long to UnsignedLong natively.\r\n\r\n- A handful of potential IllegalArgumentException in `tech.pegasys.artemis.statetransition.util.BeaconStateUtil` where the parameter in `UnsignedLong.valueOf(long)` is either `slot` or `epoch` should be resolved when slots and epochs are converted from long to UnsignedLong natively.\r\n\r\n_**Usage Notes**_\r\n\r\n- `UnsignedLong.valueOf(long)` in `tech.pegasys.artemis.datastructures.state.Validator#get_effective_balance` is acceptable because MAX_DEPOSIT_AMOUNT is less than 2**63 - 1\r\n\r\n- `UnsignedLong.valueOf(int)` in `tech.pegasys.artemis.datastructures.state.StateTransition#initiate` is acceptable because EPOCH_LENGTH is an int, hence is bounded at less than 2**63 - 1\r\n\r\n- All other occurrences of `UnsignedLong.valueOf(int)` in `tech.pegasys.artemis.datastructures.state.AttestationUtil#get_previous_epoch_attestations` is acceptable because ints are bounded at less than 2**63 - 1\r\n\r\n- All other occurrences of `UnsignedLong.valueOf(int)` and `UnsignedLong.valueOf(long)` in `tech.pegasys.artemis.datastructures.state.BeaconStateUtil` are acceptable because they are inherently bounded at less than 2**63 - 1\r\n\r\n- All other occurrences of `UnsignedLong.valueOf(int)` in `tech.pegasys.artemis.datastructures.state.EpochProcessorUtil` are acceptable because they are ints, hence are inherently bounded at less than 2**63 - 1\r\n\r\n- All other occurrences of `UnsignedLong.valueOf(int)` and `UnsignedLong.valueOf(long)` in `tech.pegasys.artemis.statetransition.BeaconStateTest` are acceptable because they are inherently bounded at less than 2**63 - 1\r\n\r\n- All other occurrences of `UnsignedLong.valueOf(int)` in `tech.pegasys.artemis.statetransition.StateTransitionTest` are acceptable because they are ints, hence are inherently bounded at less than 2**63 - 1\r\n",
  "closed_by": {
    "login": "schroedingerscode",
    "id": 25290629,
    "node_id": "MDQ6VXNlcjI1MjkwNjI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/25290629?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/schroedingerscode",
    "html_url": "https://github.com/schroedingerscode",
    "followers_url": "https://api.github.com/users/schroedingerscode/followers",
    "following_url": "https://api.github.com/users/schroedingerscode/following{/other_user}",
    "gists_url": "https://api.github.com/users/schroedingerscode/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/schroedingerscode/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/schroedingerscode/subscriptions",
    "organizations_url": "https://api.github.com/users/schroedingerscode/orgs",
    "repos_url": "https://api.github.com/users/schroedingerscode/repos",
    "events_url": "https://api.github.com/users/schroedingerscode/events{/privacy}",
    "received_events_url": "https://api.github.com/users/schroedingerscode/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/272/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/272/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
