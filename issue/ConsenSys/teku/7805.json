{
  "url": "https://api.github.com/repos/Consensys/teku/issues/7805",
  "repository_url": "https://api.github.com/repos/Consensys/teku",
  "labels_url": "https://api.github.com/repos/Consensys/teku/issues/7805/labels{/name}",
  "comments_url": "https://api.github.com/repos/Consensys/teku/issues/7805/comments",
  "events_url": "https://api.github.com/repos/Consensys/teku/issues/7805/events",
  "html_url": "https://github.com/Consensys/teku/issues/7805",
  "id": 2032119155,
  "node_id": "I_kwDOCM9I9M55H61z",
  "number": 7805,
  "title": "Data structure discrepancy on deferred attestation",
  "user": {
    "login": "hcnam",
    "id": 43805697,
    "node_id": "MDQ6VXNlcjQzODA1Njk3",
    "avatar_url": "https://avatars.githubusercontent.com/u/43805697?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/hcnam",
    "html_url": "https://github.com/hcnam",
    "followers_url": "https://api.github.com/users/hcnam/followers",
    "following_url": "https://api.github.com/users/hcnam/following{/other_user}",
    "gists_url": "https://api.github.com/users/hcnam/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/hcnam/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/hcnam/subscriptions",
    "organizations_url": "https://api.github.com/users/hcnam/orgs",
    "repos_url": "https://api.github.com/users/hcnam/repos",
    "events_url": "https://api.github.com/users/hcnam/events{/privacy}",
    "received_events_url": "https://api.github.com/users/hcnam/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-12-08T07:52:29Z",
  "updated_at": "2023-12-11T05:08:33Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "<!-- \r\nBy filing an Issue, you are expected to comply with the Code of Conduct, \r\nincluding treating everyone with respect:\r\nhttps://github.com/Consensys/teku/blob/master/CODE-OF-CONDUCT.md\r\n\r\nNot all sections will apply to all issue types.\r\n-->\r\n\r\n### Description\r\nWe’ve checked several implementations, but they adopt different data structures for deferring future attestations: Lighthouse and Nimbus are using queue, and Prysm and Teku using map to save early received attestations (Prysm uses non-deterministic map, but Teku uses deterministic map structure).\r\nDue to the above discrepancy, if a slashable pair of attestation (like double voting two different block that shares the same parent block) enter `onAttestation`, Prysm makes a non-deterministic fork choice result. See scenario below.\r\n\r\n\r\n### Steps to Reproduce\r\nScenario\r\nAssumption: No attestation except Attestation X and Y, or B and C has same vote. attester_slashing was not received yet.\r\nSteps:\r\n```\r\n N      N+1     N+2  \r\n[A]  –  [B]  –  [ ] \r\n     \\  [ ]  –  [C] \r\n \r\nSlot N   : Block A\r\nSlot N+1 : Block B (parent: A)\r\nSlot N+2 : Block C (parent also A)\r\n           Receive Attestation_0 from validator X of slot N+3 (attesting block B)\r\n           Receive Attestation_1 from validator X of slot N+3 (attesting block C)\r\nSlot N+3 : Check head\r\n```\r\nExpect: head is B due to other use queue for deferred attestation (later ignored)\r\nResult: Teku deterministically makes the same decisions while Prysm nondeterministically makes different decisions (Note that the results from Teku and Prysm may be different from Lighthouse and Nimbus).\r\n\r\nReferences:\r\nLighthouse: [queued_attestations](https://github.com/sigp/lighthouse/blob/dfcb3363c757671eb19d5f8e519b4b94ac74677a/consensus/fork_choice/src/fork_choice.rs#L1135C13-L1135C17)\r\nTeku: [deferredAttestations](https://github.com/Consensys/teku/blob/8b618b03842ffe866769d9a5192746018290ed18/ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/forkchoice/ForkChoice.java#L211C21-L211C21), [futureAttestations](https://github.com/Consensys/teku/blob/e89031eca692b4a4b4df84fa4ae32bae07b491d8/ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/attestation/AttestationManager.java#L247C19-L247C37)\r\nPrysm: [processAttestations](https://github.com/prysmaticlabs/prysm/blob/7bc44d9cfe6260964c5c03ae05111cb36088efd1/beacon-chain/blockchain/receive_attestation.go#L163), [AttCaches](https://github.com/prysmaticlabs/prysm/blob/develop/beacon-chain/operations/attestations/kv/kv.go#L27)\r\nNimbus: [queuedAttestations](https://github.com/status-im/nimbus-eth2/blob/d014d0a51cca1dda13d34e3de860aa4287afdb36/beacon_chain/fork_choice/fork_choice.nim#L232)",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/Consensys/teku/issues/7805/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/Consensys/teku/issues/7805/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/Consensys/teku/issues/comments/1849120482",
    "html_url": "https://github.com/Consensys/teku/issues/7805#issuecomment-1849120482",
    "issue_url": "https://api.github.com/repos/Consensys/teku/issues/7805",
    "id": 1849120482,
    "node_id": "IC_kwDOCM9I9M5uN1bi",
    "user": {
      "login": "rolfyone",
      "id": 2967240,
      "node_id": "MDQ6VXNlcjI5NjcyNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2967240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolfyone",
      "html_url": "https://github.com/rolfyone",
      "followers_url": "https://api.github.com/users/rolfyone/followers",
      "following_url": "https://api.github.com/users/rolfyone/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolfyone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolfyone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolfyone/subscriptions",
      "organizations_url": "https://api.github.com/users/rolfyone/orgs",
      "repos_url": "https://api.github.com/users/rolfyone/repos",
      "events_url": "https://api.github.com/users/rolfyone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolfyone/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-10T23:16:01Z",
    "updated_at": "2023-12-10T23:16:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure how to progress this one, Is the assertion here that we're making an incorrect decision? Any future / deferred attestations should be not processed and how they're queue'd shouldn't matter?\nDeferred attestations for example are typically deferred because we don't have the block it's referring to iirc, and in that case they can't count towards fork choice...\nI'm not sure if I'm missing something, so I've put my line of thinking here in the hope that maybe there's a clarification on what we want out of this issue before I categorise how to proceed...",
    "reactions": {
      "url": "https://api.github.com/repos/Consensys/teku/issues/comments/1849120482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/Consensys/teku/issues/comments/1849336875",
    "html_url": "https://github.com/Consensys/teku/issues/7805#issuecomment-1849336875",
    "issue_url": "https://api.github.com/repos/Consensys/teku/issues/7805",
    "id": 1849336875,
    "node_id": "IC_kwDOCM9I9M5uOqQr",
    "user": {
      "login": "hcnam",
      "id": 43805697,
      "node_id": "MDQ6VXNlcjQzODA1Njk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/43805697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hcnam",
      "html_url": "https://github.com/hcnam",
      "followers_url": "https://api.github.com/users/hcnam/followers",
      "following_url": "https://api.github.com/users/hcnam/following{/other_user}",
      "gists_url": "https://api.github.com/users/hcnam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hcnam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hcnam/subscriptions",
      "organizations_url": "https://api.github.com/users/hcnam/orgs",
      "repos_url": "https://api.github.com/users/hcnam/repos",
      "events_url": "https://api.github.com/users/hcnam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hcnam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-11T05:08:32Z",
    "updated_at": "2023-12-11T05:08:32Z",
    "author_association": "NONE",
    "body": "Before starting, I'm not saying that Teku is wrong. Teku is doing well under the consensus specification. \r\nIt's just that the current specification doesn't specify how to defer fork choice when handling with future attestations that vote on a known block (attestation for unknown block will ignored on assertion), which seems to have led to discrepancy between different clients in implementing it. \r\nTherefore, this question relates to a mechanism to defer attestations from the future that target already known blocks. As I remember, in consensus-spec, `validate_on_attestation` asks to delay consideration for future attestations until their slot is in the past, but not mentioning how.\r\n\r\nFor example, in the above scenario, validator X is making double-voting (yes, this is slashable) attestation and releasing it before the proper slot. Therefore, both double-voting attestations are considered attestations from the future. \r\nNow, the implementations that are using _queue_ (like Lighthouse or Nimbus) will store those future attestations on _queue_, and try to handle it when the proper slot has arrived with the arrival order. That is, if the arrival order of attestation is [_att_0, att_1_] then, the client will process _att_0_ properly and ignore _att_1_ because it is duplicated.\r\n\r\nHowever, _map_ -based implementations (like Teku or Prysm) will make different decisions (because, as you know, the _map_ is based on key-value unlike the _queue_, which doesn't guarantee the order). Therefore, it is not 100% deterministic whether the processing order will be [_att_0, att_1_] or [_att_1, att_0_] unlike _queue_-based implementations.\r\n\r\nThis is a minor and non-urgent discrepancy. Because, as you know, in the real world this may not be a big problem due to there being more than 900K validators and a lot of slashers are watching it. Also, the order of arrival of the attestations will be unpredictable (except when packet orders are manipulated by a larger-scale network attacker). \r\nBut, I want to suggest that the possibility exists that such a minor discrepancy like this may lead to real problems in the future.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/Consensys/teku/issues/comments/1849336875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
