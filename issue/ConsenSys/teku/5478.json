{
  "url": "https://api.github.com/repos/ConsenSys/teku/issues/5478",
  "repository_url": "https://api.github.com/repos/ConsenSys/teku",
  "labels_url": "https://api.github.com/repos/ConsenSys/teku/issues/5478/labels{/name}",
  "comments_url": "https://api.github.com/repos/ConsenSys/teku/issues/5478/comments",
  "events_url": "https://api.github.com/repos/ConsenSys/teku/issues/5478/events",
  "html_url": "https://github.com/ConsenSys/teku/issues/5478",
  "id": 1233292123,
  "node_id": "I_kwDOCM9I9M5Jgotb",
  "number": 5478,
  "title": "Some attestations being re-validated with SIMPLE BLS verifier",
  "user": {
    "login": "ajsutton",
    "id": 72675,
    "node_id": "MDQ6VXNlcjcyNjc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ajsutton",
    "html_url": "https://github.com/ajsutton",
    "followers_url": "https://api.github.com/users/ajsutton/followers",
    "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
    "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
    "organizations_url": "https://api.github.com/users/ajsutton/orgs",
    "repos_url": "https://api.github.com/users/ajsutton/repos",
    "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ajsutton/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "StefanBratanov",
    "id": 14827647,
    "node_id": "MDQ6VXNlcjE0ODI3NjQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/14827647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/StefanBratanov",
    "html_url": "https://github.com/StefanBratanov",
    "followers_url": "https://api.github.com/users/StefanBratanov/followers",
    "following_url": "https://api.github.com/users/StefanBratanov/following{/other_user}",
    "gists_url": "https://api.github.com/users/StefanBratanov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/StefanBratanov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/StefanBratanov/subscriptions",
    "organizations_url": "https://api.github.com/users/StefanBratanov/orgs",
    "repos_url": "https://api.github.com/users/StefanBratanov/repos",
    "events_url": "https://api.github.com/users/StefanBratanov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/StefanBratanov/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "StefanBratanov",
      "id": 14827647,
      "node_id": "MDQ6VXNlcjE0ODI3NjQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/14827647?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StefanBratanov",
      "html_url": "https://github.com/StefanBratanov",
      "followers_url": "https://api.github.com/users/StefanBratanov/followers",
      "following_url": "https://api.github.com/users/StefanBratanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/StefanBratanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StefanBratanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StefanBratanov/subscriptions",
      "organizations_url": "https://api.github.com/users/StefanBratanov/orgs",
      "repos_url": "https://api.github.com/users/StefanBratanov/repos",
      "events_url": "https://api.github.com/users/StefanBratanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StefanBratanov/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-05-12T00:04:28Z",
  "updated_at": "2022-06-24T10:24:29Z",
  "closed_at": "2022-06-24T10:24:29Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Description\nNormally the gossip validation performs the `isValidIndexedAttestationCheck` which is cached in `ValidatableAttestation` so we don't have to recheck it when processing the attestation.  If we do wind up rechecking it, currently we use the simple BLS signature verifier which does not do any batching.\n\nThere seem to be some attestations slipping through which aren't yet marked as valid indexed attestations and wind up actually doing signature verification with this simple approach.  I'm not yet sure what flow leads to these.\n\nI added a check in `AttestationUtil.isValidIndexedAttestationAsync` to print a stack trace if simple verification was used and got:\n```\njava.lang.Exception: Using simple BLS verification\n\tat tech.pegasys.teku.spec.logic.common.util.AttestationUtil.isValidIndexedAttestationAsync(AttestationUtil.java:169)\n\tat tech.pegasys.teku.spec.logic.common.util.AttestationUtil.isValidIndexedAttestation(AttestationUtil.java:139)\n\tat tech.pegasys.teku.spec.logic.common.util.ForkChoiceUtil.lambda$validate$1(ForkChoiceUtil.java:232)\n\tat tech.pegasys.teku.spec.datastructures.util.AttestationProcessingResult.ifSuccessful(AttestationProcessingResult.java:47)\n\tat tech.pegasys.teku.spec.logic.common.util.ForkChoiceUtil.validate(ForkChoiceUtil.java:227)\n\tat tech.pegasys.teku.spec.Spec.validateAttestation(Spec.java:477)\n\tat tech.pegasys.teku.statetransition.forkchoice.ForkChoice.lambda$onAttestation$18(ForkChoice.java:507)\n\tat java.base/java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:1187)\n\tat java.base/java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2309)\n\tat tech.pegasys.teku.infrastructure.async.SafeFuture.thenCompose(SafeFuture.java:470)\n\tat tech.pegasys.teku.statetransition.forkchoice.ForkChoice.onAttestation(ForkChoice.java:503)\n\tat tech.pegasys.teku.statetransition.attestation.AttestationManager.onAttestation(AttestationManager.java:196)\n\tat tech.pegasys.teku.statetransition.attestation.AttestationManager.lambda$processInternallyValidatedAttestation$5(AttestationManager.java:142)\n\tat java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:757)\n\tat java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735)\n\tat java.base/java.util.concurrent.CompletableFuture.thenAccept(CompletableFuture.java:2182)\n\tat tech.pegasys.teku.infrastructure.async.SafeFuture.thenAccept(SafeFuture.java:451)\n\tat tech.pegasys.teku.statetransition.attestation.AttestationManager.processInternallyValidatedAttestation(AttestationManager.java:138)\n\tat tech.pegasys.teku.statetransition.attestation.AttestationManager.addAttestation(AttestationManager.java:124)\n\tat tech.pegasys.teku.networking.eth2.gossip.topics.topichandlers.SingleAttestationTopicHandler.lambda$createHandler$0(SingleAttestationTopicHandler.java:40)\n\tat tech.pegasys.teku.networking.eth2.gossip.topics.topichandlers.Eth2TopicHandler.lambda$handleMessage$2(Eth2TopicHandler.java:101)\n\tat tech.pegasys.teku.infrastructure.async.SafeFuture.of(SafeFuture.java:73)\n\tat tech.pegasys.teku.infrastructure.async.ScheduledExecutorAsyncRunner.lambda$createRunnableForAction$1(ScheduledExecutorAsyncRunner.java:119)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n```\n\nThis is quite rare so not a significant contributor to CPU usage (and the resulting behaviour is correct and entirely safe - just potentially less efficient than it could be).  We need to investigate why this occurs and work out if we can safely use the batching signature verification for these as well.",
  "closed_by": {
    "login": "StefanBratanov",
    "id": 14827647,
    "node_id": "MDQ6VXNlcjE0ODI3NjQ3",
    "avatar_url": "https://avatars.githubusercontent.com/u/14827647?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/StefanBratanov",
    "html_url": "https://github.com/StefanBratanov",
    "followers_url": "https://api.github.com/users/StefanBratanov/followers",
    "following_url": "https://api.github.com/users/StefanBratanov/following{/other_user}",
    "gists_url": "https://api.github.com/users/StefanBratanov/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/StefanBratanov/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/StefanBratanov/subscriptions",
    "organizations_url": "https://api.github.com/users/StefanBratanov/orgs",
    "repos_url": "https://api.github.com/users/StefanBratanov/repos",
    "events_url": "https://api.github.com/users/StefanBratanov/events{/privacy}",
    "received_events_url": "https://api.github.com/users/StefanBratanov/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/5478/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ConsenSys/teku/issues/5478/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1154930370",
    "html_url": "https://github.com/ConsenSys/teku/issues/5478#issuecomment-1154930370",
    "issue_url": "https://api.github.com/repos/ConsenSys/teku/issues/5478",
    "id": 1154930370,
    "node_id": "IC_kwDOCM9I9M5E1tbC",
    "user": {
      "login": "ajsutton",
      "id": 72675,
      "node_id": "MDQ6VXNlcjcyNjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/72675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajsutton",
      "html_url": "https://github.com/ajsutton",
      "followers_url": "https://api.github.com/users/ajsutton/followers",
      "following_url": "https://api.github.com/users/ajsutton/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajsutton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajsutton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajsutton/subscriptions",
      "organizations_url": "https://api.github.com/users/ajsutton/orgs",
      "repos_url": "https://api.github.com/users/ajsutton/repos",
      "events_url": "https://api.github.com/users/ajsutton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajsutton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-06-14T09:17:33Z",
    "updated_at": "2022-06-14T09:17:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "One theory is that these attestations are being recovered from re-orged blocks.  So they are initially included in a canonical block (and thus removed from our pool) then that block is re-orged back out and the attestation isn't included in the other fork so we add it back to our pool.  Sincee we're getting these attestations from a block we know that the signature is valid even though we won't have a cached IndexedAttestation for them so we should find a way to skip rechecking the signature.",
    "reactions": {
      "url": "https://api.github.com/repos/ConsenSys/teku/issues/comments/1154930370/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
