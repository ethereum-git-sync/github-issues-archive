{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/6050",
  "id": 1951303354,
  "node_id": "I_kwDOCD5_Gc50Toa6",
  "number": 6050,
  "title": "Ephemery Testnet Configs",
  "user": {
    "login": "atkinsonholly",
    "id": 32036223,
    "node_id": "MDQ6VXNlcjMyMDM2MjIz",
    "avatar_url": "https://avatars.githubusercontent.com/u/32036223?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/atkinsonholly",
    "html_url": "https://github.com/atkinsonholly",
    "followers_url": "https://api.github.com/users/atkinsonholly/followers",
    "following_url": "https://api.github.com/users/atkinsonholly/following{/other_user}",
    "gists_url": "https://api.github.com/users/atkinsonholly/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/atkinsonholly/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/atkinsonholly/subscriptions",
    "organizations_url": "https://api.github.com/users/atkinsonholly/orgs",
    "repos_url": "https://api.github.com/users/atkinsonholly/repos",
    "events_url": "https://api.github.com/users/atkinsonholly/events{/privacy}",
    "received_events_url": "https://api.github.com/users/atkinsonholly/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4754137758,
      "node_id": "LA_kwDOCD5_Gc8AAAABG15ing",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/meta-feature-request",
      "name": "meta-feature-request",
      "color": "B5CF5F",
      "default": false,
      "description": "Issues to track feature requests."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-10-19T05:36:39Z",
  "updated_at": "2023-10-19T15:11:04Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Problem description\r\n\r\nInclude configs to easily connect to the ephemeral testnet, \"ephemery\".\r\n\r\nDescription of Ephemery, its behaviour and the integration plans by @taxmeifyoucan :\r\n[Ephemery](https://ephemery.dev/) is a new kind of testnet which is intended for short term testing use cases. It automatically resets back to genesis after every given period which enables reclaiming faucet funds, clearing validator set and keeping small state.\r\n\r\nEphemery runs since December 2022 but is mostly run by external tooling. There is ongoing effort to implement specs also within clients, not only externally. All resources for using the testnet are here: https://github.com/ephemery-testnet/ephemery-resources.\r\n\r\nCurrent specs for client requirements can be found in [the draft EIP](https://github.com/taxmeifyoucan/EIPs/blob/d298cdd8eaf47a21e7770e5c6efef870587c924d/EIPS/eip-6916.md).\r\n\r\n### Solution description\r\n\r\nAdd the `--ephemery` config. \r\nAdd additional flags for developer options related to downloading / generating genesis (see below).\r\n\r\n### Additional context\r\n\r\n**Add Ephemery to the Lodestar network options (cli and config packages)**\r\n- [ ] Add ephemery flag\r\n\r\n**Additional genesis options**\r\nDefault: load genesis from a URL (checkpointz server). Additional [developer] options currently envisaged:\r\n\r\n- [ ] Use backup download URL (ephemery.dev)\r\n- [ ] Use flag to override with custom path to a `genesis.ssz` file provided by user\r\n- [ ] Use flag to generate genesis with script at `packages/ephemery`. Note: user dependency [eth2-testnet-genesis](https://github.com/protolambda/eth2-testnet-genesis). \r\n\r\n**Reset**\r\n- [ ] Research phase ongoing for ephemery reset.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1770131841",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/6050#issuecomment-1770131841",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050",
    "id": 1770131841,
    "node_id": "IC_kwDOCD5_Gc5pghGB",
    "user": {
      "login": "atkinsonholly",
      "id": 32036223,
      "node_id": "MDQ6VXNlcjMyMDM2MjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/32036223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atkinsonholly",
      "html_url": "https://github.com/atkinsonholly",
      "followers_url": "https://api.github.com/users/atkinsonholly/followers",
      "following_url": "https://api.github.com/users/atkinsonholly/following{/other_user}",
      "gists_url": "https://api.github.com/users/atkinsonholly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atkinsonholly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atkinsonholly/subscriptions",
      "organizations_url": "https://api.github.com/users/atkinsonholly/orgs",
      "repos_url": "https://api.github.com/users/atkinsonholly/repos",
      "events_url": "https://api.github.com/users/atkinsonholly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atkinsonholly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T06:16:35Z",
    "updated_at": "2023-10-19T06:16:35Z",
    "author_association": "NONE",
    "body": "I'll link my draft PRs here shortly",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1770131841/reactions",
      "total_count": 2,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1770462381",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/6050#issuecomment-1770462381",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050",
    "id": 1770462381,
    "node_id": "IC_kwDOCD5_Gc5phxyt",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T09:50:30Z",
    "updated_at": "2023-10-19T09:50:30Z",
    "author_association": "MEMBER",
    "body": "That's a great idea to add first-class support for Ephemery, I quickly looked at this before and I think the ideal solution would be that you only have to set `--network ephemery` and that's it.\r\n\r\nMy general understanding of how this would work is\r\n- pull genesis data / network config from github ([ephemery-testnet/ephemery-genesis](https://github.com/ephemery-testnet/ephemery-genesis))\r\n- dynamically load network config in Lodestar\r\n- periodically check if there is a new geneses ([check_testnet](https://github.com/ephemery-testnet/ephemery-scripts/blob/9f93fc04ea15d19560445769014fd80043042393/retention.sh#L72-L100))\r\n- restart Lodestar if new genesis is detected ([node-js-process-restart](https://stackoverflow.com/questions/40835187/node-js-process-restart))\r\n\r\nI have just quickly looked at this and haven't used Ephemery myself yet. mostly got my ideas from [Ephemery using geth and lodestar](https://github.com/ephemery-testnet/ephemery-scripts/blob/9f93fc04ea15d19560445769014fd80043042393/manual/setup-geth-lodestar.md) and [Retention script](https://github.com/ephemery-testnet/ephemery-scripts/blob/9f93fc04ea15d19560445769014fd80043042393/retention.sh).\r\n\r\nOne difficulty I see right now is that both the EL and CL need to be coordinated, if only Lodestar supports this it is not gonna be that useful, you would still have to run a separate script in a cronjob to manage the EL. But either way someone has to start pushing this. For initial testing, could use `--execution.engineMock` to not rely on the EL for now.\r\n\r\nWould love to hear your thoughts on how this should work in the end from a users point of view",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1770462381/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1771092071",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/6050#issuecomment-1771092071",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050",
    "id": 1771092071,
    "node_id": "IC_kwDOCD5_Gc5pkLhn",
    "user": {
      "login": "atkinsonholly",
      "id": 32036223,
      "node_id": "MDQ6VXNlcjMyMDM2MjIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/32036223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atkinsonholly",
      "html_url": "https://github.com/atkinsonholly",
      "followers_url": "https://api.github.com/users/atkinsonholly/followers",
      "following_url": "https://api.github.com/users/atkinsonholly/following{/other_user}",
      "gists_url": "https://api.github.com/users/atkinsonholly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atkinsonholly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atkinsonholly/subscriptions",
      "organizations_url": "https://api.github.com/users/atkinsonholly/orgs",
      "repos_url": "https://api.github.com/users/atkinsonholly/repos",
      "events_url": "https://api.github.com/users/atkinsonholly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atkinsonholly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T14:19:53Z",
    "updated_at": "2023-10-19T14:20:54Z",
    "author_association": "NONE",
    "body": "Hi @nflaig that's right, there's other work happening to integrate ephemery into more clients. Geth is next up, and there is also WIP for Lighthouse + Reth. Thanks for the heads up on how to do the initial testing. \r\nI've now linked my [draft PR](https://github.com/ChainSafe/lodestar/pull/6054) for adding the ephemery network which should address your first bullet - let me know what you think! \r\nI'm working on a second PR relating to more dynamic genesis options (your second bullet) which will probably mainly be useful for developer users. \r\nWork on reset is in the early stages (your third + fourth bullets) - draft typescript version of retention script [here](https://github.com/atkinsonholly/lodestar/pull/1/files) (WIP). ",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1771092071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1771190653",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/6050#issuecomment-1771190653",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6050",
    "id": 1771190653,
    "node_id": "IC_kwDOCD5_Gc5pkjl9",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-10-19T15:11:04Z",
    "updated_at": "2023-10-19T15:11:04Z",
    "author_association": "MEMBER",
    "body": "> I've now linked my https://github.com/ChainSafe/lodestar/pull/6054 for adding the ephemery network which should address your first bullet - let me know what you think!\r\n\r\nLooks good on first glance, will give it more detailed review later. Mostly need to understand the requirements that Ephemery has a bit better to know if this goes in the right direction.\r\n\r\n> Work on reset is in the early stages (your third + fourth bullets) - draft typescript version of retention script [here](https://github.com/atkinsonholly/lodestar/pull/1/files) (WIP).\r\n\r\nIt's a good first PoC but I feel like an ideal solution for this needs to be inherent to Lodestar and not just written in Typescript that in the end just does system calls\r\n\r\nThis would give us a few advantages\r\n- Lodestar knows where it's data dirs are, no need to have predefined values for this\r\n- Platform agnostic, should work in docker, ideally also windows and not have any dependency on system level tooling like `systemctl`\r\n- Does not rely on any system level permissions (`sudo`)\r\n\r\n> restart Lodestar if new genesis is detected ([node-js-process-restart](https://stackoverflow.com/questions/40835187/node-js-process-restart))\r\n\r\nI am also still not sure how this would look like, the CLI could act like a process manager by starting the beacon node and validator client in a child process.\r\n\r\nFor me mostly the question is what the UX of this should look like, if you have a single script which manages all three clients (el + bn + vc) then coordination is easy between clients but a user would have to run another script which possibly requires additional configuration based on client combinations.\r\n\r\nOn the other hand, if each clients implement an inherent solution it requires more coordination effort, all three clients need to detect a new genesis at around the same time, clean their data dirs and restart. Technically, this should work fine, I think the validator client for example would just restart if there is a config mismatch with then beacon node and at some point, both would be on the same network with new genesis. The implementation effort for this is considerably higher as each client has to implement a native solution but from a user point of view, if we get this right, it would be seamless.\r\n\r\n> I'm working on a second PR relating to more dynamic genesis options (your second bullet) which will probably mainly be useful for developer users.\r\n\r\nActually this might already be the case, if the process starts and the database is empty it will pull the genesis state from github and/or checkpoint sync. Another option is to provide a custom genesis file via CLI `--genesisStateFile` flag.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1771190653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
