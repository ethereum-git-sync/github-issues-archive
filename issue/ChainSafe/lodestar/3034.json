{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3034",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3034/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3034/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3034/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/3034",
  "id": 982137698,
  "node_id": "MDU6SXNzdWU5ODIxMzc2OTg=",
  "number": 3034,
  "title": "Improve gossip attestation processing capacity",
  "user": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1200090446,
      "node_id": "MDU6TGFiZWwxMjAwMDkwNDQ2",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/prio-medium",
      "name": "prio-medium",
      "color": "fdc09f",
      "default": false,
      "description": "Resolve this some time soon (tm)."
    },
    {
      "id": 2963898184,
      "node_id": "MDU6TGFiZWwyOTYzODk4MTg0",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/scope-performance",
      "name": "scope-performance",
      "color": "980043",
      "default": false,
      "description": "Performance issue and ideas to improve performance."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-08-29T16:04:56Z",
  "updated_at": "2023-05-24T07:51:39Z",
  "closed_at": "2023-05-24T07:51:39Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "A busy Lodestar beacon node sometimes struggles to process all aggregates and attestations from gossip. I'm opening this issue to explore different queue and processing strategies to improve capacity.\r\n\r\n### Sync batch validation\r\n\r\nCurrently all incoming gossip objects are placed in a queue and processed sequentially (LIFO) with a concurrency of 16.\r\n\r\nA different approach would be modify our `validateGossipAggregateAndProof` to take a batch of aggregates with the same target so process the synchronous steps at once. To test I've patched this code in the API of a busy node:\r\n\r\n```ts\r\nasync function timeQueueStyles(\r\n  chain: BeaconChain,\r\n  signedAggregateAndProof: phase0.SignedAggregateAndProof,\r\n  count: number\r\n): Promise<{seriesMs: number; parallelMs: number; batchMs: number}> {\r\n  const indexes = linspace(0, count - 1);\r\n\r\n  // time seriesMs\r\n  for (let i = 0; i < count; i++) {\r\n    await validateGossipAggregateAndProof(chain, signedAggregateAndProof);\r\n  }\r\n\r\n  // time parallelMs\r\n  await Promise.all(indexes.map(() => validateGossipAggregateAndProof(chain, signedAggregateAndProof)));\r\n\r\n  // time batchMs\r\n  await validateGossipAggregateAndProofBatch(chain, indexes.map(() => signedAggregateAndProof));\r\n}\r\n```\r\n\r\n`validateGossipAggregateAndProofBatch` does the syncronous checks in a for loop, while getting the target state once and directly verifying the signatures in batch. The code is committed at https://github.com/ChainSafe/lodestar/compare/master...dapplion/queue-batch\r\n\r\n```ts\r\nexport async function validateGossipAggregateAndProofBatch(\r\n  chain: IBeaconChain,\r\n  signedAggregateAndProofs: phase0.SignedAggregateAndProof[]\r\n): Promise<void> {\r\n  for (const signedAggregateAndProof of signedAggregateAndProofs) {\r\n    // Pre target state checks\r\n  }\r\n\r\n  const targetState = await chain.regen.getCheckpointState(attTarget, RegenCaller.validateGossipAggregateAndProof);\r\n\r\n  for (const signedAggregateAndProof of signedAggregateAndProofs) {\r\n    // Post target state checks\r\n  }\r\n\r\n  // Get signatureSets for all aggregates\r\n  if (!(await chain.bls.verifySignatureSets(signatureSets, {batchable: true}))) {\r\n    throw new AttestationError(GossipAction.REJECT, {code: AttestationErrorCode.INVALID_SIGNATURE});\r\n  }\r\n\r\n  for (const signedAggregateAndProof of signedAggregateAndProofs) {\r\n    // Post signature checks\r\n  }\r\n}\r\n```\r\n\r\nAfter running multiple times in mainnet, CPU at 100-120% the average result is:\r\n```\r\nseries_ms: 11927.700116\r\nparallel_ms: 361.762955\r\nbatch_ms: 450.60736\r\n```\r\n\r\nSo the batch processing is not faster than just running them all with Promise.all(). Note that using the batch approach involves changing the validate functions completely to deal with early errors.\r\n\r\n### Increasing concurrency\r\n\r\nValidating an aggreate has a variable cost to the node:\r\n- Cheap syncronous checks (fixed)\r\n- Validate 3 signatures (fixed)\r\n- Get / regenerate the target state (variable). This item can range from free (state in cache), to extremely expensive if regen has to replay many blocks.",
  "closed_by": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3034/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3034/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1560622681",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/3034#issuecomment-1560622681",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3034",
    "id": 1560622681,
    "node_id": "IC_kwDOCD5_Gc5dBTZZ",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-24T07:51:39Z",
    "updated_at": "2023-05-24T07:51:39Z",
    "author_association": "MEMBER",
    "body": "- Gossip queues have good throughput after https://github.com/ChainSafe/lodestar/pull/5350",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1560622681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
