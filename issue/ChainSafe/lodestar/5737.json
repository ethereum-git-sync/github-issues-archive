{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/5737",
  "id": 1794565974,
  "node_id": "I_kwDOCD5_Gc5q9udW",
  "number": 5737,
  "title": "api: `consensusClient.debug.getStatev2` returns incorrect BeaconState object",
  "user": {
    "login": "ratankaliani",
    "id": 34041956,
    "node_id": "MDQ6VXNlcjM0MDQxOTU2",
    "avatar_url": "https://avatars.githubusercontent.com/u/34041956?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ratankaliani",
    "html_url": "https://github.com/ratankaliani",
    "followers_url": "https://api.github.com/users/ratankaliani/followers",
    "following_url": "https://api.github.com/users/ratankaliani/following{/other_user}",
    "gists_url": "https://api.github.com/users/ratankaliani/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ratankaliani/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ratankaliani/subscriptions",
    "organizations_url": "https://api.github.com/users/ratankaliani/orgs",
    "repos_url": "https://api.github.com/users/ratankaliani/repos",
    "events_url": "https://api.github.com/users/ratankaliani/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ratankaliani/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2023-07-08T00:28:31Z",
  "updated_at": "2023-07-12T22:10:16Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Describe the bug\r\n\r\nI'm currently working with the @lodestar/api package to retrieve `BeaconState` from a consensus node, but it is returning an incomplete `BeaconState` object for `capella` blocks. The objects are fairly large, so I haven't been able to determine which specific containers are malformed, but when I query my consensus node directly over JSON-RPC for the `/eth/v2/debug/beacon/states/{state_id}` endpoint, I get the correct `BeaconState` object.\r\n\r\nSpecifically, I am querying for `BeaconState` and `BeaconBlock` for slot 6491104 and getting the following response:\r\n\r\n```\r\nBeaconBlock root:  0x8326162ea811c76d3135e60d9f0a86805a0b9c756da9fb9d7268535f46810474\r\nBeaconState root:  0xa1dd17accf33890f0821570dde3c1a96beec5e722c108467e84c7182e5eadc99\r\nstateRoot container in BeaconBlock: 0xa92c974e16b3fb3a081db8beb8190f1e05daedac13b598c41ce0be4f86defa64\r\n```\r\n\r\nThe `BeaconState` root and `stateRoot` container in `BeaconBlock` should be equivalent for the same slot.\r\n\r\n### Expected behavior\r\n\r\nThe `stateRoot` container in `BeaconBlock` should match the root hash of the `BeaconState` container.\r\n\r\n### Steps to reproduce\r\n\r\n1. Query `BeaconState` using the @lodestar/api package with `consensusClient.debug.getStateV2(slot)`\r\n2. Query `BeaconBlock` using the @lodestar/api package with `consensusClient.beacon.getBlockV2(slot)`\r\n3. Check if `BeaconState` root hash == `stateRoot` container in `BeaconBlock`\r\n\r\n### Additional context\r\n\r\n_No response_\r\n\r\n### Operating system\r\n\r\nmacOS\r\n\r\n### Lodestar version or commit hash\r\n\r\nv1.9.1",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1627305176",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1627305176",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
    "id": 1627305176,
    "node_id": "IC_kwDOCD5_Gc5g_rTY",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-08T13:53:36Z",
    "updated_at": "2023-07-08T13:53:36Z",
    "author_association": "MEMBER",
    "body": "Thanks for the detailed report.\r\n\r\nI tried to reproduce this but the result looks as expected for me\r\n\r\n```js\r\nimport { toHexString } from \"@chainsafe/ssz\";\r\nimport { getClient, ApiError } from \"@lodestar/api\";\r\nimport { config } from \"@lodestar/config/default\";\r\nimport { ssz } from \"@lodestar/types\";\r\n\r\nconst api = getClient({ baseUrl: \"http://localhost:9596\" }, { config });\r\nconst slot = process.argv[2];\r\n\r\nconst blockRes = await api.beacon.getBlockV2(slot);\r\nApiError.assert(blockRes);\r\n\r\nconst blockStateRoot = toHexString(blockRes.response.data.message.stateRoot);\r\nconsole.log(\"BeaconBlock stateRoot:    \", blockStateRoot);\r\n\r\nconst stateRes = await api.debug.getStateV2(slot);\r\nApiError.assert(stateRes);\r\n\r\nconst stateRoot = toHexString(ssz.capella.BeaconState.hashTreeRoot(stateRes.response.data));\r\nconsole.log(\"BeaconState hashTreeRoot: \", stateRoot);\r\n\r\nconsole.assert(stateRoot === blockStateRoot);\r\n```\r\n\r\n```sh\r\n> node index.js 6832476\r\nBeaconBlock stateRoot:     0xa80fa56b5f84f323e97eeb10b642190f2fb03b964eca38616e85e6c6e465bf26\r\nBeaconState hashTreeRoot:  0xa80fa56b5f84f323e97eeb10b642190f2fb03b964eca38616e85e6c6e465bf26\r\n\r\n> node index.js 6833329\r\nBeaconBlock stateRoot:     0xc6bf36c98decce99faf8c06a6491de3552daad8cc8f94f216bcd55a3be0ba4ee\r\nBeaconState hashTreeRoot:  0xc6bf36c98decce99faf8c06a6491de3552daad8cc8f94f216bcd55a3be0ba4ee\r\n\r\n> node index.js 6833350\r\nBeaconBlock stateRoot:     0xab26e7b7811b8c48e94edb0d4f2ab3e38969416c47f30b08dcd6a50c472790e4\r\nBeaconState hashTreeRoot:  0xab26e7b7811b8c48e94edb0d4f2ab3e38969416c47f30b08dcd6a50c472790e4\r\n```\r\n\r\nI have checked multiple slots and the results are always correct. Might be an issue with the data for specific slot 6491104 you checked.\r\n\r\nFrom where are you pulling the historic state and is it a Lodestar beacon node?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1627305176/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1627437753",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1627437753",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
    "id": 1627437753,
    "node_id": "IC_kwDOCD5_Gc5hALq5",
    "user": {
      "login": "ratankaliani",
      "id": 34041956,
      "node_id": "MDQ6VXNlcjM0MDQxOTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34041956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ratankaliani",
      "html_url": "https://github.com/ratankaliani",
      "followers_url": "https://api.github.com/users/ratankaliani/followers",
      "following_url": "https://api.github.com/users/ratankaliani/following{/other_user}",
      "gists_url": "https://api.github.com/users/ratankaliani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ratankaliani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ratankaliani/subscriptions",
      "organizations_url": "https://api.github.com/users/ratankaliani/orgs",
      "repos_url": "https://api.github.com/users/ratankaliani/repos",
      "events_url": "https://api.github.com/users/ratankaliani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ratankaliani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-08T17:41:13Z",
    "updated_at": "2023-07-08T17:43:11Z",
    "author_association": "NONE",
    "body": "I'm pulling the historical state from a Prysm beacon node, so the cross-compatibility here might be the issue. It's a bit odd, as when I query for the specific RPC URL, I get the correct `BeaconState`, so this is probably an issue with deserializing responses from different consensus node implementations using the `getStateV2` method.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1627437753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1627462304",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1627462304",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
    "id": 1627462304,
    "node_id": "IC_kwDOCD5_Gc5hARqg",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-08T18:46:47Z",
    "updated_at": "2023-07-08T18:46:47Z",
    "author_association": "MEMBER",
    "body": "What `version` does Prysm return in `/eth/v2/debug/beacon/states/{state_id}` response?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1627462304/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1628222846",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1628222846",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
    "id": 1628222846,
    "node_id": "IC_kwDOCD5_Gc5hDLV-",
    "user": {
      "login": "ratankaliani",
      "id": 34041956,
      "node_id": "MDQ6VXNlcjM0MDQxOTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34041956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ratankaliani",
      "html_url": "https://github.com/ratankaliani",
      "followers_url": "https://api.github.com/users/ratankaliani/followers",
      "following_url": "https://api.github.com/users/ratankaliani/following{/other_user}",
      "gists_url": "https://api.github.com/users/ratankaliani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ratankaliani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ratankaliani/subscriptions",
      "organizations_url": "https://api.github.com/users/ratankaliani/orgs",
      "repos_url": "https://api.github.com/users/ratankaliani/repos",
      "events_url": "https://api.github.com/users/ratankaliani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ratankaliani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-10T05:21:42Z",
    "updated_at": "2023-07-10T05:21:42Z",
    "author_association": "NONE",
    "body": "I get `capella` so a bit confused.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1628222846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1628784689",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1628784689",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
    "id": 1628784689,
    "node_id": "IC_kwDOCD5_Gc5hFUgx",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-10T11:33:54Z",
    "updated_at": "2023-07-10T11:33:54Z",
    "author_association": "MEMBER",
    "body": "> so the cross-compatibility here might be the issue\r\n\r\nI reviewed our implementation and I really don't see how this would fail, if the implementations compute a different state root it would lead to a consensus failure.\r\n\r\nI tested slot 6491104 specifically against different implementations, results are consistent.\r\n\r\nLighthouse\r\n```sh\r\n> node index.js 6491104\r\nBeaconBlock stateRoot:     0xa92c974e16b3fb3a081db8beb8190f1e05daedac13b598c41ce0be4f86defa64\r\nBeaconState hashTreeRoot:  0xa92c974e16b3fb3a081db8beb8190f1e05daedac13b598c41ce0be4f86defa64\r\n```\r\nNimbus\r\n```sh\r\n> node index.js 6491104\r\nBeaconBlock stateRoot:     0xa92c974e16b3fb3a081db8beb8190f1e05daedac13b598c41ce0be4f86defa64\r\nBeaconState hashTreeRoot:  0xa92c974e16b3fb3a081db8beb8190f1e05daedac13b598c41ce0be4f86defa64\r\n```\r\n\r\nI don't have a Prysm archive node at hand to quickly test against, what are the results if you run the script I linked above (https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1627305176)?\r\n\r\nWould be helpful if you could provide a snippet of your code, maybe something is going wrong there.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1628784689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1629378284",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1629378284",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
    "id": 1629378284,
    "node_id": "IC_kwDOCD5_Gc5hHlbs",
    "user": {
      "login": "ratankaliani",
      "id": 34041956,
      "node_id": "MDQ6VXNlcjM0MDQxOTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34041956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ratankaliani",
      "html_url": "https://github.com/ratankaliani",
      "followers_url": "https://api.github.com/users/ratankaliani/followers",
      "following_url": "https://api.github.com/users/ratankaliani/following{/other_user}",
      "gists_url": "https://api.github.com/users/ratankaliani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ratankaliani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ratankaliani/subscriptions",
      "organizations_url": "https://api.github.com/users/ratankaliani/orgs",
      "repos_url": "https://api.github.com/users/ratankaliani/repos",
      "events_url": "https://api.github.com/users/ratankaliani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ratankaliani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-10T17:10:05Z",
    "updated_at": "2023-07-10T17:15:33Z",
    "author_association": "NONE",
    "body": "When I run the script above I get:\r\n\r\n```\r\n> node index.js 6491104\r\nBeaconBlock stateRoot:     0xa92c974e16b3fb3a081db8beb8190f1e05daedac13b598c41ce0be4f86defa64\r\nBeaconState hashTreeRoot:  0xa1dd17accf33890f0821570dde3c1a96beec5e722c108467e84c7182e5eadc99\r\nAssertion failed\r\n```\r\n```\r\n> node index.js 6832476\r\nBeaconBlock stateRoot:     0xa80fa56b5f84f323e97eeb10b642190f2fb03b964eca38616e85e6c6e465bf26\r\nBeaconState hashTreeRoot:  0x39b11c8bfe377623a15926db3d8e249af34d503351560a2dd1864d4580a6823d\r\nAssertion failed\r\n```\r\n```\r\n> node index.js 6833329\r\nBeaconBlock stateRoot:     0xc6bf36c98decce99faf8c06a6491de3552daad8cc8f94f216bcd55a3be0ba4ee\r\nBeaconState hashTreeRoot:  0xd6e6f604dde0cc296e4f567c6f158cee804825894ea1b35aafc5c4aebf8f3c77\r\nAssertion failed\r\n```\r\nThe state roots from the prysm node are consistently incorrect when using `@lodestar/api`. When I query the node directly at `/eth/v2/debug/beacon/states/{state_id}` endpoint, I get the correct BeaconState object.\r\n\r\nCode I'm running is creating SSZ proofs against the `BeaconBlock` and `BeaconState`, but because of this issue, is running into difficulty equivocating the `stateRoot` from a `BeaconBlock` (as it does not match the root of the `BeaconState` of the same slot).",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1629378284/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1630655103",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1630655103",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
    "id": 1630655103,
    "node_id": "IC_kwDOCD5_Gc5hMdJ_",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-11T11:30:33Z",
    "updated_at": "2023-07-11T11:30:33Z",
    "author_association": "MEMBER",
    "body": "I have set up a Prysm node now to try and reproduce this. For slot **6853637** these are my results:\r\n\r\nFetched state using curl\r\n```sh\r\ncurl -o prysm-6853637.json http://<prysm-node>/eth/v2/debug/beacon/states/6853637\r\n```\r\n\r\nRead and compute state root\r\n```js\r\nimport fs from \"fs\";\r\nimport { toHexString } from \"@chainsafe/ssz\";\r\nimport { ssz } from \"@lodestar/types\";\r\n\r\nconst json = fs.readFileSync(\"./prysm-6853637.json\");\r\nconst parsed = JSON.parse(json);\r\nconst state = ssz.capella.BeaconState.fromJson(parsed.data);\r\n\r\nconst stateRoot = toHexString(ssz.capella.BeaconState.hashTreeRoot(state));\r\nconsole.log(\"BeaconState hashTreeRoot: \", stateRoot);\r\n```\r\n```sh\r\n> node from-json.js \r\nBeaconState hashTreeRoot:  0x84c5aa444319e61e3b22cd5a9f36af55a18209e26be7fb6fcee43b50eb3d4538\r\n```\r\n\r\nThis produces a wrong state root, correct root is `0x09fb204ba2d3329c1a1654d07669384e3ef75857639f484215d6eb05e8a68889`.\r\nI checked with Nimbus and Lighthouse those produce the correct result for this slot using same approach.\r\n\r\nI looked at the json files using [diff-json.js](https://gist.github.com/nflaig/bb8f7b9361fa80394800b5da501a91ec) and Prysm returns different `historical_roots` than other clients, see [prysm-diff.json](https://gist.github.com/nflaig/c6e971cf7083fc09abcb380e8c997ccc). It seems to me that the issue is that Prysm returns incorrect data from `/eth/v2/debug/beacon/states/{state_id}` endpoint.\r\n\r\nI'm curious what tool you used to compute the correct state root as using  `ssz.capella.BeaconState.hashTreeRoot` consistently produces a different root.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1630655103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1633271797",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5737#issuecomment-1633271797",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5737",
    "id": 1633271797,
    "node_id": "IC_kwDOCD5_Gc5hWb_1",
    "user": {
      "login": "ratankaliani",
      "id": 34041956,
      "node_id": "MDQ6VXNlcjM0MDQxOTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/34041956?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ratankaliani",
      "html_url": "https://github.com/ratankaliani",
      "followers_url": "https://api.github.com/users/ratankaliani/followers",
      "following_url": "https://api.github.com/users/ratankaliani/following{/other_user}",
      "gists_url": "https://api.github.com/users/ratankaliani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ratankaliani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ratankaliani/subscriptions",
      "organizations_url": "https://api.github.com/users/ratankaliani/orgs",
      "repos_url": "https://api.github.com/users/ratankaliani/repos",
      "events_url": "https://api.github.com/users/ratankaliani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ratankaliani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-07-12T22:07:38Z",
    "updated_at": "2023-07-12T22:10:16Z",
    "author_association": "NONE",
    "body": "Interesting, yeah I'm able to compute the correct state root doing the following: \r\n\r\n~~~typescript\r\nconst ROUTES = {\r\n    getBlock: '/eth/v2/beacon/blocks/{block_id}',\r\n    getGenesis: '/eth/v1/beacon/genesis',\r\n    getHeader: '/eth/v1/beacon/headers/{block_id}',\r\n    getBeaconState: '/eth/v2/debug/beacon/states/{state_id}',\r\n    getSyncStatus: '/eth/v1/node/syncing'\r\n};\r\n\r\ntype BeaconId = number | Uint8Array | string;\r\n\r\nfunction toStringFromBeaconId(identifier: BeaconId) {\r\n    if (identifier instanceof Uint8Array) {\r\n        return toHexString(identifier);\r\n    }\r\n    return identifier.toString();\r\n}\r\n\r\nexport async function getState(client: AxiosInstance, stateIdentifier: BeaconId): Promise<capella.BeaconState> {\r\n    const id = toStringFromBeaconId(stateIdentifier);\r\n    const response = await client.get(ROUTES.getBeaconState.replace('{state_id}', id), {\r\n        responseType: 'arraybuffer',\r\n        headers: {\r\n            Accept: 'application/octet-stream'\r\n        }\r\n    });\r\n    const bytes = response.data as Buffer;\r\n    const state = ssz.capella.BeaconState.deserialize(bytes);\r\n    return state;\r\n} \r\n\r\nasync function computeStateRoot(state: capella.BeaconState) {\r\n    stateView = ssz.capella.BeaconState.toView(\r\n            state as capella.BeaconState\r\n        );\r\n    console.log(\"stateRoot: \", toHexString(stateView.node.root))\r\n}\r\n~~~\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1633271797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
