{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/1773",
  "id": 747594081,
  "node_id": "MDU6SXNzdWU3NDc1OTQwODE=",
  "number": 1773,
  "title": "Enforce Conventional Commits",
  "user": {
    "login": "wemeetagain",
    "id": 1348242,
    "node_id": "MDQ6VXNlcjEzNDgyNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wemeetagain",
    "html_url": "https://github.com/wemeetagain",
    "followers_url": "https://api.github.com/users/wemeetagain/followers",
    "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
    "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
    "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
    "repos_url": "https://api.github.com/users/wemeetagain/repos",
    "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1478321239,
      "node_id": "MDU6TGFiZWwxNDc4MzIxMjM5",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/meta-discussion",
      "name": "meta-discussion",
      "color": "a6bddb",
      "default": false,
      "description": "Indicates a topic that requires input from various developers."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/milestones/28",
    "html_url": "https://github.com/ChainSafe/lodestar/milestone/28",
    "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/milestones/28/labels",
    "id": 9205234,
    "node_id": "MI_kwDOCD5_Gc4AjHXy",
    "number": 28,
    "title": "v1.8.0",
    "description": "",
    "creator": {
      "login": "philknows",
      "id": 58080811,
      "node_id": "MDQ6VXNlcjU4MDgwODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58080811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philknows",
      "html_url": "https://github.com/philknows",
      "followers_url": "https://api.github.com/users/philknows/followers",
      "following_url": "https://api.github.com/users/philknows/following{/other_user}",
      "gists_url": "https://api.github.com/users/philknows/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philknows/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philknows/subscriptions",
      "organizations_url": "https://api.github.com/users/philknows/orgs",
      "repos_url": "https://api.github.com/users/philknows/repos",
      "events_url": "https://api.github.com/users/philknows/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philknows/received_events",
      "type": "User",
      "site_admin": false
    },
    "open_issues": 0,
    "closed_issues": 12,
    "state": "closed",
    "created_at": "2023-03-25T05:12:00Z",
    "updated_at": "2023-05-09T04:09:32Z",
    "due_on": null,
    "closed_at": "2023-05-09T04:09:32Z"
  },
  "comments": 16,
  "created_at": "2020-11-20T15:49:48Z",
  "updated_at": "2023-04-25T12:51:39Z",
  "closed_at": "2023-04-25T12:51:38Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "There are some possible benefits to using/enforcing conventional commits. Pls discuss\n\nGithub action to enforce?",
  "closed_by": {
    "login": "philknows",
    "id": 58080811,
    "node_id": "MDQ6VXNlcjU4MDgwODEx",
    "avatar_url": "https://avatars.githubusercontent.com/u/58080811?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/philknows",
    "html_url": "https://github.com/philknows",
    "followers_url": "https://api.github.com/users/philknows/followers",
    "following_url": "https://api.github.com/users/philknows/following{/other_user}",
    "gists_url": "https://api.github.com/users/philknows/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/philknows/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/philknows/subscriptions",
    "organizations_url": "https://api.github.com/users/philknows/orgs",
    "repos_url": "https://api.github.com/users/philknows/repos",
    "events_url": "https://api.github.com/users/philknows/events{/privacy}",
    "received_events_url": "https://api.github.com/users/philknows/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/801828628",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-801828628",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 801828628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTgyODYyOA==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-18T11:00:15Z",
    "updated_at": "2021-03-18T11:02:43Z",
    "author_association": "MEMBER",
    "body": "In meetings it was agreed to not enforce at the commit level. Maybe at the PR title level (see https://github.com/ChainSafe/lodestar/issues/1812), but with our regular bi-weekly release schedule and not yet following semver's breaking policy it's not necessary",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/801828628/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1491026769",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1491026769",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1491026769,
    "node_id": "IC_kwDOCD5_Gc5Y30NR",
    "user": {
      "login": "philknows",
      "id": 58080811,
      "node_id": "MDQ6VXNlcjU4MDgwODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58080811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philknows",
      "html_url": "https://github.com/philknows",
      "followers_url": "https://api.github.com/users/philknows/followers",
      "following_url": "https://api.github.com/users/philknows/following{/other_user}",
      "gists_url": "https://api.github.com/users/philknows/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philknows/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philknows/subscriptions",
      "organizations_url": "https://api.github.com/users/philknows/orgs",
      "repos_url": "https://api.github.com/users/philknows/repos",
      "events_url": "https://api.github.com/users/philknows/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philknows/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-30T22:08:25Z",
    "updated_at": "2023-03-30T22:12:06Z",
    "author_association": "MEMBER",
    "body": "Reopened based on our Standup call from March 28. We would like to have better and more human-readable updates to our releases. A manual release summary and enforcing conventional commits on our monorepo should better organize our changelog and make it more useful for users. \r\n\r\nWe should:\r\n- [ ] Add a Github action to enforce \r\n- [ ] Update our `contributions.md` to reflect this change\r\n\r\n# Quick examples\r\n* `feat: new feature`\r\n* `fix(scope): bug in scope`\r\n* `feat!: breaking change` / `feat(scope)!: rework API`\r\n* `chore(deps): update dependencies`\r\n\r\n# Commit types\r\n* `build`: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\r\n* `ci`: Changes to CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\r\n* **`chore`: Changes which doesn't change source code or tests e.g. changes to the build process, auxiliary tools, libraries**\r\n* `docs`: Documentation only changes\r\n* **`feat`: A new feature**\r\n* **`fix`: A bug fix**\r\n* `perf`: A code change that improves performance\r\n* `refactor`:  A code change that neither fixes a bug nor adds a feature\r\n* `revert`: Revert something\r\n* `style`: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\r\n* `test`: Adding missing tests or correcting existing tests\r\n\r\nMore information on the spec here: https://www.conventionalcommits.org/en/v1.0.0/#specification",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1491026769/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1492318687",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1492318687",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1492318687,
    "node_id": "IC_kwDOCD5_Gc5Y8vnf",
    "user": {
      "login": "maschad",
      "id": 9755286,
      "node_id": "MDQ6VXNlcjk3NTUyODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9755286?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maschad",
      "html_url": "https://github.com/maschad",
      "followers_url": "https://api.github.com/users/maschad/followers",
      "following_url": "https://api.github.com/users/maschad/following{/other_user}",
      "gists_url": "https://api.github.com/users/maschad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maschad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maschad/subscriptions",
      "organizations_url": "https://api.github.com/users/maschad/orgs",
      "repos_url": "https://api.github.com/users/maschad/repos",
      "events_url": "https://api.github.com/users/maschad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maschad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-31T17:25:35Z",
    "updated_at": "2023-03-31T17:25:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for reopening this @philknows ! It will really help with standardizing our changes. A few points:\r\n\r\n- I think we can distinguish deps a bit more to have it as it's own commit types i.e. `deps (dev):` or `deps!:` if upgrading the dep introduces a breaking change.\r\n- We should ensure we outline all aspects of the [specification](https://www.conventionalcommits.org/en/v1.0.0/#specification) that we want to enforce.\r\n\r\nWe can setup a [husky pre-commit hook](https://github.com/typicode/husky) to enforce this once we agree upon it. ",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1492318687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1492875254",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1492875254",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1492875254,
    "node_id": "IC_kwDOCD5_Gc5Y-3f2",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-01T08:16:26Z",
    "updated_at": "2023-04-01T08:18:53Z",
    "author_association": "MEMBER",
    "body": "> deps!: if upgrading the dep introduces a breaking change.\r\n\r\nJust using `!` for breaking change should not be allowed at all and not sure to be honest why this is even allowed as per spec, we should enforce that commits that introduce breaking changes must include `BREAKING CHANGE` in the description with a thorough explanation of why it is breaking and what changes are required to make it work again. Adding the `!` in addition is good though because you can spot breaking commits just based on the message.\r\n\r\nAs for production dependencies, I would just use `fix(deps)`. I would also not define `fix` as a bug fix, sometimes it is just a fix/improvement, it is not always related to a bug.\r\n\r\n> We can setup a [husky pre-commit hook](https://github.com/typicode/husky) to enforce this once we agree upon it.\r\n\r\nWould not enforce this on commit level, we anyhow squash-merge. Need to enforce it on PR title which is also great because it gives contributors more freedom + git hooks are kinda annoying",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1492875254/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1493066326",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1493066326",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1493066326,
    "node_id": "IC_kwDOCD5_Gc5Y_mJW",
    "user": {
      "login": "maschad",
      "id": 9755286,
      "node_id": "MDQ6VXNlcjk3NTUyODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9755286?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maschad",
      "html_url": "https://github.com/maschad",
      "followers_url": "https://api.github.com/users/maschad/followers",
      "following_url": "https://api.github.com/users/maschad/following{/other_user}",
      "gists_url": "https://api.github.com/users/maschad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maschad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maschad/subscriptions",
      "organizations_url": "https://api.github.com/users/maschad/orgs",
      "repos_url": "https://api.github.com/users/maschad/repos",
      "events_url": "https://api.github.com/users/maschad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maschad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-01T18:18:50Z",
    "updated_at": "2023-04-01T18:18:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Just using `!` for breaking change should not be allowed at all and not sure to be honest why this is even allowed as per spec, we should enforce that commits that introduce breaking changes must include `BREAKING CHANGE` in the description with a thorough explanation of why it is breaking and what changes are required to make it work again.\r\n\r\nThis is outlined in the [spec](https://www.conventionalcommits.org/en/v1.0.0/#commit-message-with-both--and-breaking-change-footer) I was **not** suggesting that we solely use the `!` symbol.\r\n\r\n> Adding the ! in addition is good though because you can spot breaking commits just based on the message.\r\n\r\nThat's why I included it in my example.\r\n\r\n> I would also not define fix as a bug fix, sometimes it is just a fix/improvement, it is not always related to a bug.\r\n\r\nGive an example of this. A _fix_ that is related to a bug rather an improvement could be classified as a `refactor` or `perf` so I think `fix` relating specifically to bugs is appropriate. \r\n\r\n> Would not enforce this on commit level, we anyhow squash-merge. Need to enforce it on PR title which is also great because it gives contributors more freedom + git hooks are kinda annoying\r\n\r\nAs @philknows suggested we would have a Github action to enforce it in the PR title, but enforcing it at the commit level is actually to assist in the PR review process, particularly when reviewing larger PRs, having a good commit etiquette can help people to review PRs faster. I agree it _may_ be a deterrent for new contributors though so perhaps it can be optional, it would certainly be beneficial for maintainers though. \r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1493066326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1493283618",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1493283618",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1493283618,
    "node_id": "IC_kwDOCD5_Gc5ZAbMi",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-02T09:55:13Z",
    "updated_at": "2023-04-02T10:06:39Z",
    "author_association": "MEMBER",
    "body": "> A fix that is related to a bug rather an improvement could be classified as a refactor or perf so I think fix relating specifically to bugs is appropriate.\r\n\r\n`perf` is really specific category, even though in Lodestar there are quite a lot of commits that fit\r\n\r\n`refactor` is code structure only, meaning the behavior must not change (from outside view). This also means `refactor` type commits are omitted in the release trigger and changelog, as nothing really changed, code is just (hopefully) more maintainable now.\r\n\r\nI like to think about conventional commits in combination with [semantic versioning](https://semver.org/) which makes it easier to reason about\r\n\r\n```\r\nCommit Types & Release Triggers/Changelog\r\n|\r\n|-- Release Triggers & Included in Changelog\r\n|    |\r\n|    |-- Major Release\r\n|    |    |-- Breaking Changes (breaking: true)\r\n|    |\r\n|    |-- Minor Release\r\n|    |    |-- New Features (type: 'feat')\r\n|    |\r\n|    |-- Patch Release\r\n|         |-- Reverts (revert: true)\r\n|         |-- Bug Fixes (type: 'fix')\r\n|         |-- Performance Improvements (type: 'perf')\r\n|\r\n|-- No Release Trigger & Not included in Changelog\r\n     |\r\n     |-- Build System (type: 'build')\r\n     |-- Continuous Integration (type: 'ci')\r\n     |-- Chores (type: 'chore')\r\n     |-- Documentation (type: 'docs')\r\n     |-- Code Refactoring (type: 'refactor')\r\n     |-- Styles (type: 'style')\r\n     |-- Tests (type: 'test')\r\n```\r\n\r\nBased on this, let's just think about a change in isolation, if there was only one commit, what kind of release should it trigger if at all. This eliminates `refactor` right there for any sort of improvements that affect users because you would want those to trigger a release.\r\n\r\nNow we can of course re-write the rules or add our own rules that fit the project better but I would suggest sticking as close to the standard as possible.\r\n\r\n> I think fix relating specifically to bugs is appropriate.\r\n\r\nThen there won't be a lot of `fix` commits (hopefully) if we define a bug as an error or flaw in the code that causes the program to behave unexpectedly or incorrectly.\r\nAlso noting that `feat` should really be reserved for actual new features and not for minor improvements so practically there is no type we can use for a lot of commits if we define `fix` as bug fixes only.\r\n\r\n> Give an example of this.\r\n\r\nSure, these are few of the recent commits which are not a bug fix but should be of type `fix` as we would want them to trigger a `patch` release (if in isolation)\r\n\r\n- **Enable metrics if monitoring endpoint is configured**\r\n- **Only preaggregate attestations if there are connected aggregators**  (or `perf`)\r\n- **Limit preaggregating attestations** (or `perf`)\r\n- **Log index if attestations are published per committee**\r\n- **Always add gossip attestations to forkchoice** (or `perf`)\r\n- **Log monitoring errors as warning and reduce verbosity**\r\n- **Log expected api errors as warning instead of error**\r\n\r\n> but enforcing it at the commit level is actually to assist in the PR review process, particularly when reviewing larger PRs, having a good commit etiquette can help people to review PRs faster\r\n\r\nIn theory I would agree but you can do good commits without following conventional commits and you can do bad commits even when following it. I would prefer to keep a feature branch more like a \"playground\" with loose restrictions.\r\n\r\n> As @philknows suggested we would have a Github action to enforce it in the PR title\r\n\r\nsounds like the ideal solution to me, we get the benefits from using conventional commits without introducing too much overhead\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1493283618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494581494",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1494581494",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1494581494,
    "node_id": "IC_kwDOCD5_Gc5ZFYD2",
    "user": {
      "login": "maschad",
      "id": 9755286,
      "node_id": "MDQ6VXNlcjk3NTUyODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9755286?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maschad",
      "html_url": "https://github.com/maschad",
      "followers_url": "https://api.github.com/users/maschad/followers",
      "following_url": "https://api.github.com/users/maschad/following{/other_user}",
      "gists_url": "https://api.github.com/users/maschad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maschad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maschad/subscriptions",
      "organizations_url": "https://api.github.com/users/maschad/orgs",
      "repos_url": "https://api.github.com/users/maschad/repos",
      "events_url": "https://api.github.com/users/maschad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maschad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T15:57:29Z",
    "updated_at": "2023-04-03T15:57:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> A fix that is related to a bug rather an improvement could be classified as a refactor or perf so I think fix relating specifically to bugs is appropriate.\r\n\r\nI think there was a grammatical error here that caused confusion, it should say _A fix that is **NOT** related to a bug **BUT** rather an improvement could be classified as a refactor or perf so I think fix relating specifically to bugs is appropriate._\r\n\r\n> Based on this, let's just think about a change in isolation, if there was only one commit, what kind of release should it trigger if at all. This eliminates refactor right there for any sort of improvements that affect users because you would want those to trigger a release.\r\n\r\nA **changelog** should contain all changes in order to provide visibility and improvements of a codebase (not just to users but also other developers and potential contributors), that would include refactors, CI changes, documentation changes etc. \r\n\r\nIn the case of a refactor or a series of refactors, we probably would not do a release, but that is independent of what should be included in the **changelog**. In practice it is common to have multiple commits before a release and so whether we are doing a patch, minor or major release will be dependent on bug fixes, features, performance improvements and reverts and the refactors would more than likely be included alongside those changes.\r\n\r\n> Then there won't be a lot of fix commits (hopefully) if we define a bug as an error or flaw in the code that causes the program to behave unexpectedly or incorrectly.\r\nAlso noting that feat should really be reserved for actual new features and not for minor improvements so practically there is no type we can use for a lot of commits if we define fix as bug fixes only.\r\n\r\nI don't see this as a problem. I agree in that we would not want to have a lot of bug fixes but there is a possibility at some points we may.  I agree that `feat` should be for any type of new feature but I am not sure what you mean when you say \"minor improvements\" , those could be be classified as `feat` as well regardless of how drastic it is.\r\n\r\n> Sure, these are few of the recent commits which are not a bug fix but should be of type fix as we would want them to trigger a patch release (if in isolation)\r\n\r\nAll of the listed examples can be articulated as bug fixes or performance improvements (I wouldn't have labelled them refactors so I don't think it's a relevant example) since they are behaviours that were unintended but are now changed, or are improvements in the performance of the software,  and so in those cases would trigger a release.\r\n\r\n> In theory I would agree but you can do good commits without following conventional commits and you can do bad commits even when following it. I would prefer to keep a feature branch more like a \"playground\" with loose restrictions.\r\n\r\nThe rationale behind conventional commits is standardize commits so that we have _good_ commits and to reduce the possibility of a _bad_ commit. We agree on what those standards are and therefore determine what is _bad_ and _good_. ",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494581494/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494638351",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1494638351",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1494638351,
    "node_id": "IC_kwDOCD5_Gc5ZFl8P",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T16:34:22Z",
    "updated_at": "2023-04-03T16:36:13Z",
    "author_association": "MEMBER",
    "body": "> A changelog should contain all changes in order to provide visibility and improvements of a codebase\r\n\r\nWell I guess we just disagree on what a changelog is supposed to do and who the audience should be. IMO it is for consumers of the software and **not** developers of the software. Therefore adding things not relevant to a consumer is just noise.\r\nDevelopers can look at the commit history and PRs. \r\n\r\nI have used semantic-release for few years and have been involved in that ecosystem for quite a while, so I have rather strong opinions here, let's get input from others, will not come to a consent on this :)\r\n\r\n> those could be be classified as feat as well regardless of how drastic it is\r\n\r\nHard to define objective rules on how to classify `feat` but usually looking at a specific PR is should be quite clear, see comment above what I consider `fix`. A clear `feat` commit would be adding [Lodestar prover for execution api](https://github.com/ChainSafe/lodestar/commit/358b9e041006380191c3706e92675fec38773038).\r\n\r\n> All of the listed examples can be articulated as bug fixes \r\n\r\nHappy to disagree here as well, I guess we just have different definitions of what a \"bug\" is, see other comment on how I define it, pretty much like [here](https://en.wikipedia.org/wiki/Software_bug#:~:text=A%20software%20bug%20is%20an%20error%2C%20flaw%20or%20fault%20in%20the%20design%2C%20development%2C%20or%20operation%20of%20computer%20software%20that%20causes%20it%20to%20produce%20an%20incorrect%20or%20unexpected%20result%2C%20or%20to%20behave%20in%20unintended%20ways.).\r\n\r\n> We agree on what those standards are and therefore determine what is bad and good.\r\n\r\nJust because you tell developers to prefix their commits with `type(scope):` doesn't mean all commits magically become good. I have worked with a lot of JR devs while using conventional commits, trust me on this :)",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494638351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494737689",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1494737689",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1494737689,
    "node_id": "IC_kwDOCD5_Gc5ZF-MZ",
    "user": {
      "login": "maschad",
      "id": 9755286,
      "node_id": "MDQ6VXNlcjk3NTUyODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9755286?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maschad",
      "html_url": "https://github.com/maschad",
      "followers_url": "https://api.github.com/users/maschad/followers",
      "following_url": "https://api.github.com/users/maschad/following{/other_user}",
      "gists_url": "https://api.github.com/users/maschad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maschad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maschad/subscriptions",
      "organizations_url": "https://api.github.com/users/maschad/orgs",
      "repos_url": "https://api.github.com/users/maschad/repos",
      "events_url": "https://api.github.com/users/maschad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maschad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T17:52:38Z",
    "updated_at": "2023-04-03T17:52:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Well I guess we just disagree on what a changelog is supposed to do and who the audience should be. IMO it is for consumers of the software and not developers of the software. Therefore adding things not relevant to a consumer is just noise.\r\nDevelopers can look at the commit history and PRs.\r\n\r\nI think you are conflating [release notes](https://en.wikipedia.org/wiki/Release_notes?useskin=vector) with a changelog - (which is understandable as they have been used interchangeably in some cases) \r\n\r\nIf you examine [Google's release-please](https://github.com/googleapis/release-please) - which we could actually use to automate changelog generation and release version bumps if we do decide to use [Conventional Commit messages](https://www.conventionalcommits.org/) and [Semantic versioning](http://semver.org/) - there are changelogs which include [refactors](https://github.com/googleapis/release-please/compare/v14.17.5...v15.0.0) and  [build system changes](https://github.com/googleapis/release-please/compare/v13.21.0...v14.0.0) for instance, so I am not sure if the idea that they should be excluded from changelogs is industry standard. \r\n\r\n> Happy to disagree here as well, I guess we just have different definitions of what a \"bug\" is, see other comment on how I define it, pretty much like [here](https://en.wikipedia.org/wiki/Software_bug#:~:text=A%20software%20bug%20is%20an%20error%2C%20flaw%20or%20fault%20in%20the%20design%2C%20development%2C%20or%20operation%20of%20computer%20software%20that%20causes%20it%20to%20produce%20an%20incorrect%20or%20unexpected%20result%2C%20or%20to%20behave%20in%20unintended%20ways.).\r\n\r\nThe definition that you posted here (which I also had used to derive my own explanation) states: _A software bug is an error, flaw or [fault](https://en.wikipedia.org/wiki/Fault_(technology)) in the design, development, or operation of [computer software](https://en.wikipedia.org/wiki/Computer_software) that causes it to produce an incorrect or unexpected result, **or to behave in unintended ways.**_ which was the explanation I had given in stating the following:  \r\n> _since they are behaviours that were unintended but are now changed_  \r\n\r\nso I would say those examples can be articulated as bugs or performance improvements, regardless they should be in a changelog and potential triggers for release.\r\n\r\n> Just because you tell developers to prefix their commits with type(scope): doesn't mean all commits magically become good. I have worked with a lot of JR devs while using conventional commits, trust me on this :) \r\n\r\nThe reason behind us standardizing commits is to determine which commits are _good_ as right now there is no codified consensus within the team on what a _good_ commit is. I am not implying that there will not be _bad_ commits, but rather we are reducing that possibility by standardization. If there is more leniency in commit etiquette then there a greater variance in commit standards and subsequently a greater possibility of _bad_ commits. That doesn't mean we have to enforce commit hooks for instance, but we have to be open to the opportunity cost of not doing so.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494737689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494791751",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1494791751",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1494791751,
    "node_id": "IC_kwDOCD5_Gc5ZGLZH",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T18:33:16Z",
    "updated_at": "2023-04-03T20:01:19Z",
    "author_association": "MEMBER",
    "body": "Yall are covering a lot of ground here XD... will throw in my thoughts:\r\n\r\n- RE conv commits on commit level vs PR title level - I favor just enforcing conventional commits on PR titles\r\n  - Reason: We squash all PRs into a single commit, there's not a guarantee we'll maintain all original underlying commit messages for a PR. This will be only a small change to our existing workflow, which will be minimally disruptive for us, but its also convenient for newcomer contributors who aren't familiar with conv commits (we can just edit their PR title once we approve their work).\r\n- RE triggering releases based on specific conv commit types - IMO useful for lower level component libraries, but probably won't be necessary for this repo for a while.\r\n  - Given the rigor of testing required for our releases, I'd recommend just sticking with a biweekly release schedule based on manually curated commits off `unstable`.\r\n- RE including all changes in the changelog/release notes - I favor including everything, but tailoring the release notes for consumers\r\n  - I love to see the paragraph that @philknows writes for the lodestar-announcements channel as the 'intro' to the release\r\n  - we can add the \"unimportant\" changes under a dropdown at the bottom\r\n- RE good vs bad commits / PR titles - IMO conv commit titles won't be a silver bullet. We should also separately be conscientious about making titles succinct but also descriptive enough as a summary of the feat/fix/etc. I think this is just very subjective and hard to get right.\r\n\r\nHoping that by using conventional commit PR titles, it will get us more comfortable with conventional commits in general, give us more tools for organizing our releases, and act as a foundation for future release process changes, if / when we need / want to change.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494791751/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494862710",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1494862710",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1494862710,
    "node_id": "IC_kwDOCD5_Gc5ZGct2",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T19:30:27Z",
    "updated_at": "2023-04-03T19:56:42Z",
    "author_association": "MEMBER",
    "body": "RE @maschad \r\n\r\n> I am not sure if the idea that they should be excluded from changelogs is industry standard.\r\n\r\nLike I said before my opinions are shaped by [semantic-release](https://www.npmjs.com/package/semantic-release), whether or not this can be considered an industry standard, I leave up for you to decide\r\n\r\n> I think you are conflating [release notes](https://en.wikipedia.org/wiki/Release_notes?useskin=vector) with a changelog\r\n\r\nI don't care what name we use for it, I just care how we can improve what we output here https://github.com/ChainSafe/lodestar/releases (or in a `CHANGELOG.md` file for that matter) and see if conventional commits are helpful to improve this and how we need to tailor it for it to be valuable\r\n\r\n> so I would say those examples can be articulated as bugs\r\n\r\nthe commit `Log monitoring errors as warning and reduce verbosity` is clearly **not** a bug, it does not produce an incorrect or unexpected result, and it behaved as intended. Just changed my mind on how this should be logged later. This was a quite opinionated change because I think it improves log UX, fixing a bug is not opinionated because you fix something that is not working as intended and you just make it work as it was supposed to in the first place.\r\n\r\n--------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nRE @wemeetagain \r\n\r\n> RE triggering releases based on specific conv commit types\r\n\r\ndefinitely, was just giving a theoretical example how conv commit are often used for clarification\r\n\r\n> I favor including everything, but tailoring the release notes for consumers\r\n\r\nMaybe if we have different sections in the changelog this will be bearable and people will dare to read the changelog.\r\n\r\nTechnically, this also easy to realize because we basically only need conv commits to generate release notes, could just use https://github.com/semantic-release/release-notes-generator out of the box and define our own `preset` (see [options](https://github.com/semantic-release/release-notes-generator#options)), or just write a script ourselves, sounds simple enough.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494862710/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494894771",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1494894771",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1494894771,
    "node_id": "IC_kwDOCD5_Gc5ZGkiz",
    "user": {
      "login": "maschad",
      "id": 9755286,
      "node_id": "MDQ6VXNlcjk3NTUyODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9755286?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maschad",
      "html_url": "https://github.com/maschad",
      "followers_url": "https://api.github.com/users/maschad/followers",
      "following_url": "https://api.github.com/users/maschad/following{/other_user}",
      "gists_url": "https://api.github.com/users/maschad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maschad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maschad/subscriptions",
      "organizations_url": "https://api.github.com/users/maschad/orgs",
      "repos_url": "https://api.github.com/users/maschad/repos",
      "events_url": "https://api.github.com/users/maschad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maschad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T19:57:35Z",
    "updated_at": "2023-04-03T19:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Like I said before my opinions are shaped by [semantic-release](https://www.npmjs.com/package/semantic-release), whether or not this can be considered an industry standard, I leave up to you to decide\r\n\r\n[semantic release](https://github.com/semantic-release/semantic-release) is intended to generate **release notes** as it states in it's description, which is distinct from the **changelog**.\r\n\r\n> I don't care what name we use for it, I just care how we can improve what we output here [ChainSafe/lodestar/releases](https://github.com/ChainSafe/lodestar/releases) (or in a CHANGELOG.md file for that matter) and see if conventional commits are helpful to improve this and how we need to tailor it for it to be valuable\r\n\r\nWe intentionally make a distinction between the two, [as demonstrated in our last release](https://github.com/ChainSafe/lodestar/releases/tag/v1.7.2) as @wemeetagain mentioned the release notes help the consumers see what is relevant to them. \r\n\r\n> the commit Log monitoring errors as warning and reduce verbosity is clearly not a bug, it does not produce an incorrect or unexpected result, and it behaved as intended. Just changed my mind on how this should be logged later. This was a quite opinionated change because I think it improves log UX, fixing a bug is not opinionated because you fix something that is not working as intended and you just make it work as it was supposed to in the first place.\r\n\r\nAnd one could make an argument that the way it ought to have worked in the first place was to have been less noisy and thus it was a UX/DX bug fix, regardless this is an unnecessary point to dwell on and has been discussed [ad nauseam](https://www.agileambition.com/bug-vs-feature/)  I think we can agree that bug fixes and features should be highlighted in release notes. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494894771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494922272",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1494922272",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1494922272,
    "node_id": "IC_kwDOCD5_Gc5ZGrQg",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-03T20:15:28Z",
    "updated_at": "2023-04-03T20:15:28Z",
    "author_association": "MEMBER",
    "body": "> I think we can agree that bug fixes and features should be highlighted in release notes.\r\n\r\nagreed\r\n\r\n> @wemeetagain mentioned the release notes help the consumers see what is relevant to them.\r\n\r\nI think @wemeetagain meant both the title/introducing aka lodestar-announcement done by @philknows + the Changelog (to be generated from conv commits) should be tailored towards consumers.\r\n\r\nNothing further to add, like I said just care about final/combined result of https://github.com/ChainSafe/lodestar/releases\r\n\r\n> [semantic release](https://github.com/semantic-release/semantic-release) is intended to generate release notes as it states in it's description, which is distinct from the changelog.\r\n\r\nI leave it at that",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1494922272/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1495535208",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1495535208",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1495535208,
    "node_id": "IC_kwDOCD5_Gc5ZJA5o",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-04T08:11:52Z",
    "updated_at": "2023-04-04T08:43:51Z",
    "author_association": "MEMBER",
    "body": "Regarding the tooling, even though we could use semantic-release with just the [release notes/changelog generator](https://github.com/semantic-release/release-notes-generator) to generate the Changelog, it seems suboptimal to me as customization is not as easy.\r\n\r\nSomething like [standard-version](https://github.com/conventional-changelog/standard-version) (or even [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog)) seems to do just what we require and is much leaner. However, there is a deprecation warning and the author suggests to use [release-please](https://github.com/googleapis/release-please) which @maschad also mentioned already, seems straight forward to [customize](https://github.com/googleapis/release-please/blob/main/docs/customizing.md) as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1495535208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1498502815",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1498502815",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1498502815,
    "node_id": "IC_kwDOCD5_Gc5ZUVaf",
    "user": {
      "login": "matthewkeil",
      "id": 18608739,
      "node_id": "MDQ6VXNlcjE4NjA4NzM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18608739?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewkeil",
      "html_url": "https://github.com/matthewkeil",
      "followers_url": "https://api.github.com/users/matthewkeil/followers",
      "following_url": "https://api.github.com/users/matthewkeil/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewkeil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewkeil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewkeil/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewkeil/orgs",
      "repos_url": "https://api.github.com/users/matthewkeil/repos",
      "events_url": "https://api.github.com/users/matthewkeil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewkeil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-06T05:14:10Z",
    "updated_at": "2023-04-06T05:14:10Z",
    "author_association": "MEMBER",
    "body": "> Regarding the tooling, even though we could use semantic-release with just the [release notes/changelog generator](https://github.com/semantic-release/release-notes-generator) to generate the Changelog, it seems suboptimal to me as customization is not as easy.\n\nIt was a bit hard to read the output for semantic-release if I'll be honest (was part of the rush.js monorepo tool used in prior project).  It also kinda just gave what it gave when we played with making the output better.\n\nI def agree that `release-please` looks like a better option",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1498502815/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1521737654",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1773#issuecomment-1521737654",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1773",
    "id": 1521737654,
    "node_id": "IC_kwDOCD5_Gc5as9-2",
    "user": {
      "login": "philknows",
      "id": 58080811,
      "node_id": "MDQ6VXNlcjU4MDgwODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58080811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philknows",
      "html_url": "https://github.com/philknows",
      "followers_url": "https://api.github.com/users/philknows/followers",
      "following_url": "https://api.github.com/users/philknows/following{/other_user}",
      "gists_url": "https://api.github.com/users/philknows/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philknows/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philknows/subscriptions",
      "organizations_url": "https://api.github.com/users/philknows/orgs",
      "repos_url": "https://api.github.com/users/philknows/repos",
      "events_url": "https://api.github.com/users/philknows/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philknows/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-25T12:51:38Z",
    "updated_at": "2023-04-25T12:51:38Z",
    "author_association": "MEMBER",
    "body": "Closed via #5342 ",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1521737654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
