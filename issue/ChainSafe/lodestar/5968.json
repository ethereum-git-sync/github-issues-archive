{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/5968",
  "id": 1902238006,
  "node_id": "I_kwDOCD5_Gc5xYdk2",
  "number": 5968,
  "title": "Experiment n historical states",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4754137758,
      "node_id": "LA_kwDOCD5_Gc8AAAABG15ing",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/meta-feature-request",
      "name": "meta-feature-request",
      "color": "B5CF5F",
      "default": false,
      "description": "Issues to track feature requests."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-09-19T05:37:59Z",
  "updated_at": "2023-09-20T01:34:03Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Problem description\n\nToday lodestar stores up to 96 states in state cache and up to 10 epochs of checkpoint states in checkpoint state cache, along with justified and finalized state. It causes us a lot of memory and node has to restarted multiple time due to OOM in long unfinality period like in early days of Holesky\n\n### Solution description\n\n- Find a way to load state ssz bytes to a current tree so that we have single seed/base state tree across application\r\n- Implement Shuffling cache:\r\n  - Stores based on an epoch and dependent root, something like: `Map<Epoch, Map<RootHex, Shuffling>>`\r\n  - Consumed by attestation verification\r\n  - Consumed when creating CachedBeaconState given a TreeBackedDU BeaconState to save time\r\n  - Prune when finalize()\r\n- State regen: don't change its logic\r\n- State cache: \r\n  - Right now we store up to 96 states, we could reduce this number a lot, for example 32 states (number could be changed based on experiment result)\r\n- Checkpoint cache: \r\n  - Right now we store up to 10 epochs, I think storing up to 2 epochs is enough, no need to store justified/finalized checkpoint in memory\r\n  - Prune from cache if more than 2 epochs and persist to file/db\r\n    - normally it should happen during PrecomputeEpochTransition at the last 1/3 of slot\r\n  - when calling `getLatest()` or `get()`, load from db/file if needed\r\n- Number of states to keep in state/checkpoint cache are configurable to test in different networks\n\n### Additional context\n\nStoring temp state to level db and later on remove it may cause the db to grow, may consider persisting it to file system and removing them when chain is finalized",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1724891840",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5968#issuecomment-1724891840",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968",
    "id": 1724891840,
    "node_id": "IC_kwDOCD5_Gc5mz8LA",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-19T06:18:30Z",
    "updated_at": "2023-09-19T06:18:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding merging ssz state bytes to an existing TreeViewDU state, I have some statistics from this branch https://github.com/tuyennhv/lodestar/blob/tuyen/state_perf_test/packages/state-transition/test/unit/util/migrateState.test.ts#L71C9-L71C9\r\n\r\n- load state 7335296: `const seedState = stateType.deserializeToViewDU(data_7335296);` => it takes 1.3s\r\n- `seedState.hashTreeRoot();` => this takes 36s\r\n- `const migratedState = migrateState(seedState, newStateBytes);` => this takes 0.5s-0.7s for 64 slots different. At this step `migratedState` and `seedState` share a lot of data, mainly the `state.validators`\r\n- `migratedState.hashTreeRoot()` => this takes 1.5s\r\n- The total time to create `CachedBeaconState` is ~2.3s given 64 slots difference (base state vs new state)\r\n- Same test but for 1 day difference (base state vs new state) takes 2.9x seconds\r\n- memory increased about 100MB - 110MB\r\n\r\nNote this assumes we have a Shuffling cache to save time when creating `CachedBeaconState`, otherwise it takes 0.8s - 1s more",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1724891840/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1725050051",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5968#issuecomment-1725050051",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968",
    "id": 1725050051,
    "node_id": "IC_kwDOCD5_Gc5m0izD",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-19T08:25:57Z",
    "updated_at": "2023-09-19T08:25:57Z",
    "author_association": "MEMBER",
    "body": "Really cool to see you exploring this solution direction!\r\n\r\n> load state 7335296: const seedState = stateType.deserializeToViewDU(data_7335296); => it takes 1.3s\r\n\r\nDo you propose to store the hashing cache in the DB, or load it from a similar state available in memory?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1725050051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1726752996",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5968#issuecomment-1726752996",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5968",
    "id": 1726752996,
    "node_id": "IC_kwDOCD5_Gc5m7Cjk",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-20T01:34:02Z",
    "updated_at": "2023-09-20T01:34:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do you propose to store the hashing cache in the DB, or load it from a similar state available in memory?\r\n\r\n@dapplion  I'd load it from a similar state available in memory. If I migrate from a mainnet seedState 1 day ago to current mainnet state, it takes ~`2.9s` to create `CachedBeaconState` which is not too different from 64-slot different load which takes ~2.3s. I think that's due to a lot of validators are not changed overtime, I noted the benchmark result here https://github.com/tuyennhv/lodestar/blob/4a69ce59929ea3065fdf65e75c1d4a88f1922c45/packages/state-transition/test/unit/util/migrateState.test.ts#L66",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1726752996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
