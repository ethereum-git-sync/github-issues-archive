{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/2846",
  "id": 945367358,
  "node_id": "MDU6SXNzdWU5NDUzNjczNTg=",
  "number": 2846,
  "title": "Review regen state cache strategy",
  "user": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1200090447,
      "node_id": "MDU6TGFiZWwxMjAwMDkwNDQ3",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/prio-high",
      "name": "prio-high",
      "color": "fd9579",
      "default": false,
      "description": "Resolve issues as soon as possible."
    },
    {
      "id": 2963898184,
      "node_id": "MDU6TGFiZWwyOTYzODk4MTg0",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/scope-performance",
      "name": "scope-performance",
      "color": "980043",
      "default": false,
      "description": "Performance issue and ideas to improve performance."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2021-07-15T13:13:57Z",
  "updated_at": "2022-05-10T18:15:05Z",
  "closed_at": "2022-05-10T18:14:53Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "<!--NOTE: -->\r\n<!--- General questions should go to the discord chat instead of the issue tracker.-->\r\n\r\n\r\n\r\nFrom Paul (Lighthouse) in normal network conditions:\r\n- The state cache should only 1 state (the head state) attached to `beacon_chain.canonical_head`\r\n- To process attestations, the shuffling cache should only contain 3 entries: previous, current and next epochs. They take 64bits * VALIDATOR_COUNT so not much either.\r\n\r\nOur state cache can reference up to 96 states. Thanks to structural sharing the total memory required is not 96 * state size tho it's a very high number.\r\n\r\nReview the strategy to ensure that at least in normal conditions we keep just one state in memory.\r\n\r\n",
  "closed_by": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/880887051",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2846#issuecomment-880887051",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846",
    "id": 880887051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDg4NzA1MQ==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T17:36:57Z",
    "updated_at": "2021-07-15T17:36:57Z",
    "author_association": "MEMBER",
    "body": "For lightclient proof serving we could use a dedicated cache that is enabled with a flag `--enable-state-proof-cache` which tracks one state per block in the canonical chain up to some configurable limit.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/880887051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/880920001",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2846#issuecomment-880920001",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846",
    "id": 880920001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDkyMDAwMQ==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-15T18:27:53Z",
    "updated_at": "2021-07-19T21:42:44Z",
    "author_association": "MEMBER",
    "body": "Current regen usage:\r\n\r\n- `getPreState: (block: allForks.BeaconBlock)`: Return a valid pre-state for a beacon block\r\n  - Used in chain state transition to process blocks, `processBlock()` and `processChainSegment()`\r\n    - `processBlock()`: Used in range sync, API `publishBlock`, gossip `beacon_block` handler. Last two will need a head, which could be many.\r\n    - `processChainSegment()`: Used in range sync. Will start from latest finalized block, no need for cache?\r\n- `getCheckpointState: (cp: phase0.Checkpoint)`: Return a valid checkpoint state\r\n  - Used in `onForkChoiceFinalized` by `lightclientUpdater`. Could be refactored to use the state directly after the state transition\r\n  - Used in `getPreState`. See above.\r\n  - Used in `validateGossipAggregateAndProof`. Can be replaced by attester shufflings cache. We can fetch the attestation target block from the forkChoice and use it (or it's parent) to get the dependantRoot.\r\n  - Used in `validateGossipAttestation`. Can be replaced by attester shufflings cache. Same as above.\r\n  - Used in `validateGossipVoluntaryExit`. Can we just use the `HEAD` state? We can use the HEAD state. If performance is good, dial to the current epoch. Note: Lighthouse uses the clock state.\r\n- `getBlockSlotState: (blockRoot: Root, slot: Slot)`: Return the state of `blockRoot` processed to slot `slot`\r\n  - Used in `produceAttestationData`. Can we just use the `HEAD` state? Lighthouse uses the head and may do a partial state advance. We should just allow the HEAD to be dial forward with the **exclusive** purpose of maybe updating the current justified checkpoint (consider having a light state transition to just compute that).\r\n  - Used in `getHeadStateAtCurrentEpoch`:\r\n    - `getProposerDuties`: Use block proposer shuffling cache, from the HEAD.\r\n    - `getAttesterDuties`: Use attester shufflings cache, from the HEAD.\r\n  - Used in `getHeadStateAtCurrentSlot`: NOT USED\r\n  - Used in `assembleBlock`. We need the HEAD state at the slot we are proposing. May trigger an epoch transition. This is why we use the regen for its cache.\r\n  - Used in `getCheckpointState`. See above.\r\n  - Used in `validateGossipBlock`. We may just use a block proposer shuffling cache. And use the forkChoice block summary target to get the dependant root quick.\r\n- `getState: (stateRoot: Root)`: Return the exact state with `stateRoot`\r\n  - Used in beacon state + debug API. Use the HEAD, throw for everything else. Use a separate cache if this node wants to beacon a block explorer or proof server.\r\n  - Used in `getStateByBlockRoot`: NOT USED\r\n  - Used in `getPreState`. See above.\r\n  - Used in `getBlockSlotState`. See above.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/880920001/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/881150445",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2846#issuecomment-881150445",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846",
    "id": 881150445,
    "node_id": "IC_kwDOCD5_Gc40hUnt",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-16T03:31:43Z",
    "updated_at": "2021-07-16T03:31:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree this is a good time to review our cache and regen module, this was designed at the time testnets were unstable so it's quite conservative. \r\n\r\n## Regen module\r\nIt's there to deal with abnormal network condition, currently the worse case is to generate a state from a finalized checkpoint, which never happen with the current good network condition. Hence I propose we generate from the justified checkpoint instead:\r\n+ Per LMDGhost (forkchoice), the HEAD is the best descendant of the justified checkpoint\r\n+ If a peer has a conflict HEAD to us, we'll disconnect each other\r\n\r\nso I think it's safe enough to generate state from a justified checkpoint instead of a finalized checkpoint. Also we should review every use cases of it as detailed above.\r\n\r\n\r\n## The cache\r\n+ CheckpointStateCache: MAX_EPOCHS = 10 which is big but right now we do `pruneFinalized()`. With the current good network condition, it keeps only 3 checkpoint states (1 finalized, 1 justified, 1 latest) in cache.\r\n<img width=\"706\" alt=\"Screen Shot 2021-07-16 at 10 26 31\" src=\"https://user-images.githubusercontent.com/10568965/125887182-7f744a92-5897-473d-bfd9-6ced0875e137.png\">\r\n\r\n+  StateContextCache: the 96 cached states span 4 epochs most of the time, not 3 epochs.\r\n\r\nSince states of the same epoch are shared in memory, I propose to cache exactly 2 epochs (to be aligned with the regen module) for both caches leveraging the shared memory of persistent-merkle-tree\r\n+ CheckpointStateCache: we could reduce MAX_EPOCHS, normally it should only store 1 justified checkpoint state and 1 latest checkpoint state\r\n+ StateContextCache: reduce to 32 cached states, it'd span 2 epochs to be aligned with CheckpointStateCache\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/881150445/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/881419183",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2846#issuecomment-881419183",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846",
    "id": 881419183,
    "node_id": "IC_kwDOCD5_Gc40iWOv",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-16T12:42:58Z",
    "updated_at": "2021-07-16T12:43:51Z",
    "author_association": "MEMBER",
    "body": "I've added some quick metrics to regen and run `altair-devnet-1`.\r\n\r\nThe StateContextCache is usually full all the time. During sync it's consistently at 96 states, when synced it varies between 70 and 96 based on the epoch's slot. CheckpointStateCache has 4 states, which makes sense too. Node heap is ~660MB.\r\n\r\nThen I've changed the cache params to `MAX_STATES = 2` and `MAX_EPOCHS = 1` (14:30 on the chart below). Some things break but I just want to do a quick take on memory. It's ~615MB a 7% reduction, which seems tinny. I guess the structural sharing of states is very powerful.\r\n\r\n![Screenshot from 2021-07-16 14-38-50 (1)](https://user-images.githubusercontent.com/35266934/125949493-415c6bc6-b1b3-4dd7-a0c0-2d5189e20c89.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/881419183/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/881551138",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2846#issuecomment-881551138",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846",
    "id": 881551138,
    "node_id": "IC_kwDOCD5_Gc40i2ci",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-16T15:57:37Z",
    "updated_at": "2021-07-16T16:02:45Z",
    "author_association": "MEMBER",
    "body": "A small analysis of state sizes. I'm using the performance states which are maxed out states with 250_000 validators\r\n\r\n```\r\nstart                rss  0 B             heapTotal  0 B             heapUsed +4.8 KB          external +40 B            arrayBuffers  0 B            \r\ngetPubkeys()         rss +73.39 MB        heapTotal +38.91 MB        heapUsed +41.32 MB        external +11.87 MB        arrayBuffers +11.87 MB       \r\n.defaultValue()      rss +11.83 MB        heapTotal +11.5 MB         heapUsed +12.61 MB        external -520.44 KB       arrayBuffers -520.44 KB      \r\nbuild raw state      rss +100.47 MB       heapTotal +100.82 MB       heapUsed +100.43 MB       external  0 B             arrayBuffers  0 B            \r\naddPendingAtt        rss +123.2 MB        heapTotal +128.25 MB       heapUsed +128.3 MB        external  0 B             arrayBuffers  0 B            \r\ntoTreeBacked         rss +684.8 MB        heapTotal +675.74 MB       heapUsed +675.85 MB       external -13.3 KB         arrayBuffers -12.69 KB       \r\nCachedBeaconState    rss +624.05 MB       heapTotal +537.52 MB       heapUsed +529.14 MB       external +7.65 MB         arrayBuffers +7.65 MB\r\n```\r\n\r\nSource code:\r\n\r\n```ts\r\nasync function analyzeStateMemory(): Promise<void> {\r\n  await init(\"blst-native\");\r\n\r\n  const tracker = new MemoryTracker();\r\n  tracker.logDiff(\"start\");\r\n\r\n  const pubkeys = getPubkeys().pubkeys;\r\n  tracker.logDiff(\"getPubkeys()\");\r\n\r\n  const defaultState = ssz.phase0.BeaconState.defaultValue();\r\n  tracker.logDiff(\".defaultValue()\");\r\n\r\n  const state = buildPerformanceStateAllForks(defaultState, pubkeys);\r\n  tracker.logDiff(\"build raw state\");\r\n\r\n  addPendingAttestations(state as phase0.BeaconState);\r\n  tracker.logDiff(\"addPendingAtt\");\r\n\r\n  const stateTB = ssz.phase0.BeaconState.createTreeBackedFromStruct(state as phase0.BeaconState);\r\n  tracker.logDiff(\"toTreeBacked\");\r\n\r\n  const cached = allForks.createCachedBeaconState(config, stateTB);\r\n  tracker.logDiff(\"CachedBeaconState\");\r\n}\r\n\r\nclass MemoryTracker {\r\n  prev = process.memoryUsage();\r\n\r\n  logDiff(id: string): void {\r\n    const curr = process.memoryUsage();\r\n    const parts: string[] = [];\r\n    for (const key of Object.keys(this.prev) as (keyof NodeJS.MemoryUsage)[]) {\r\n      const prevVal = this.prev[key];\r\n      const currVal = curr[key];\r\n      const bytesDiff = currVal - prevVal;\r\n      const sign = bytesDiff < 0 ? \"-\" : bytesDiff > 0 ? \"+\" : \" \";\r\n      parts.push(`${key} ${sign}${formatBytes(Math.abs(bytesDiff)).padEnd(15)}`);\r\n    }\r\n    this.prev = curr;\r\n    console.log(id.padEnd(20), parts.join(\" \"));\r\n  }\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/881551138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/922530306",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2846#issuecomment-922530306",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846",
    "id": 922530306,
    "node_id": "IC_kwDOCD5_Gc42_LIC",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2021-09-19T20:17:05Z",
    "updated_at": "2021-09-19T20:17:05Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed in 15 days if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/922530306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1122717294",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2846#issuecomment-1122717294",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2846",
    "id": 1122717294,
    "node_id": "IC_kwDOCD5_Gc5C605u",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-10T18:14:53Z",
    "updated_at": "2022-05-10T18:15:05Z",
    "author_association": "MEMBER",
    "body": "- Closing for https://github.com/ChainSafe/lodestar/issues/4005",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1122717294/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
