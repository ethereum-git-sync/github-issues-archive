{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/4005",
  "id": 1231497604,
  "node_id": "I_kwDOCD5_Gc5JZymE",
  "number": 4005,
  "title": "Regen refactor > safer resilient strategy",
  "user": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1200090446,
      "node_id": "MDU6TGFiZWwxMjAwMDkwNDQ2",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/prio-medium",
      "name": "prio-medium",
      "color": "fdc09f",
      "default": false,
      "description": "Resolve this some time soon (tm)."
    },
    {
      "id": 4116819988,
      "node_id": "LA_kwDOCD5_Gc71YbAU",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/scope-security",
      "name": "scope-security",
      "color": "980043",
      "default": false,
      "description": "Issues that fix security issues: DOS, key leak, CVEs."
    },
    {
      "id": 4324126345,
      "node_id": "LA_kwDOCD5_Gc8AAAABAbzuiQ",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/scope-none",
      "name": "scope-none",
      "color": "980043",
      "default": false,
      "description": "Issues that do not fit within any of the other defined scopes."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-05-10T17:51:08Z",
  "updated_at": "2022-09-29T08:25:50Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "## Background\r\n\r\nConsensus clients need to cache some states to fully participate in the network. States are very heavy so you can't cache all the states that you may need. Writing all the possible states you may need to disk is not practical either. So what do you do?\r\n\r\n- Keep in memory the few states that you need the most\r\n- Regenerate from memory or disk (i.e. re-process blocks) to access states that probabilistically are less useful.\r\n\r\nSo the stateCache and checkpointStateCache handle the first point: deciding which states to keep in memory. The regen module handles the second: provide the ability to regenerate _any_ state, within some boundary.\r\n\r\n## Current strategy\r\n\r\n- Keep in memory the most recent 96 states regardless of forks\r\n- Keep in memory checkpoint states for the most recent ~4 epochs\r\n- Keep in memory the latest finalized state + the head state\r\n- Write to disk the latest finalized state, delete the previous finalized state\r\n\r\nThis approach works well for good network conditions. Thanks for tree structural sharing the cost of those 96 states in a linear chain is very low multiple of the cost of a single state (~1.2x).\r\n\r\nHowever, during attacks, bugs or highly forked network our node quickly runs out of memory or can become unable to follow the chain.\r\n- If those 96 states are significantly different between each other structural sharing is not useful so the total memory could become 96x the cost of a single state.\r\n- Same for checkpoint states, see past example of this, which caused fast OOMs https://github.com/ChainSafe/lodestar/issues/3171\r\n- Structural sharing is only useful for states that are close to each other. In long periods of non-finality we would regen from latest finalized state which could be hours old, potentially DOS-ing ourselves.\r\n\r\nRelevant issues:\r\n- https://github.com/ChainSafe/lodestar/issues/3099\r\n\r\n## Improvements goals\r\n\r\nSo, we can do better. Specifically:\r\n\r\n1. Don't let the state cache cause an OOM if states are too expensive\r\n2. Limit max regen cost in all cases = reduce DOS risk\r\n3. Make regen as cheap as possible using both regen from memory states and disk states\r\n\r\n## Proposed strategies\r\n\r\n**1. Regen from memory and disk**\r\n\r\nOn every checkpoint write a state to disk to a \"hot state db\" bucket. On finalization, move some of those states \"cold state db\" or \"archive db\" bucket. Then on regen, use those states depending on the max distance of the closest available state in memory if any. This would allow to drop the need to keep the finalized state in memory.\r\n\r\n- https://github.com/ChainSafe/lodestar/issues/2154\r\n\r\n**2. Bound regen depending on consumer**\r\n\r\nDepending on the caller, restrict the work triggered by regen\r\n\r\n- https://github.com/ChainSafe/lodestar/issues/3683\r\n- https://github.com/ChainSafe/lodestar/issues/2846\r\n\r\n**3. WeakRef state cache**\r\n\r\nAllow GC to drop state when low in memory. Cache only 3 states behind current head. Do it behind a flag to extend modes for lightclient\r\n\r\n- Ongoing issue: https://github.com/ChainSafe/lodestar/issues/3094\r\n\r\nTBD\r\n\r\nCloses https://github.com/ChainSafe/lodestar/issues/3099",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1128030258",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/4005#issuecomment-1128030258",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005",
    "id": 1128030258,
    "node_id": "IC_kwDOCD5_Gc5DPGAy",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-16T19:03:44Z",
    "updated_at": "2022-05-16T19:03:44Z",
    "author_association": "MEMBER",
    "body": "Regarding loading a state from db, iirc this is expensive, like 6+ seconds. Might be good to benchmark this and get this lower.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1128030258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1129550950",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/4005#issuecomment-1129550950",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005",
    "id": 1129550950,
    "node_id": "IC_kwDOCD5_Gc5DU5Rm",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-18T04:22:48Z",
    "updated_at": "2022-05-18T04:25:12Z",
    "author_association": "MEMBER",
    "body": "> Regarding loading a state from db, iirc this is expensive, like 6+ seconds. Might be good to benchmark this and get this lower.\r\n\r\nIn terms of time to result, the tradeoff math is roughly:\r\n- Load from disk = deserialize (600ms) + process few block (10ms x block) + hashTreeRoot  (8000ms)\r\n- Advance old state = process many blocks (10ms x block) + process many epoch transitions (600ms x epoch) + hashTreeRoot  (?? ms)\r\n\r\nAlso keep in mind that if you advance and old state significantly the cost of the final hashTreeRoot can be very high as the whole state is different.\r\n\r\nHowever there's a memory limit in the amount and fork-ness of states you can keep in memory. In bad network conditions you must drop states to prevent OOMs, so regen from disk must always be available.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1129550950/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1253151853",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/4005#issuecomment-1253151853",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/4005",
    "id": 1253151853,
    "node_id": "IC_kwDOCD5_Gc5KsZRt",
    "user": {
      "login": "stale[bot]",
      "id": 26384082,
      "node_id": "MDM6Qm90MjYzODQwODI=",
      "avatar_url": "https://avatars.githubusercontent.com/in/1724?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stale%5Bbot%5D",
      "html_url": "https://github.com/apps/stale",
      "followers_url": "https://api.github.com/users/stale%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/stale%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stale%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/stale%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/stale%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/stale%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stale%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2022-09-21T03:12:33Z",
    "updated_at": "2022-09-21T03:12:33Z",
    "author_association": "NONE",
    "body": "This issue has been automatically marked as stale because it has not had recent activity. It will be closed in 15 days if no further activity occurs. Thank you for your contributions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1253151853/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
