{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6229",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6229/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6229/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6229/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/6229",
  "id": 2053523836,
  "node_id": "I_kwDOCD5_Gc56Zkl8",
  "number": 6229,
  "title": "Improve processRewardsAndPenalties",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4754137758,
      "node_id": "LA_kwDOCD5_Gc8AAAABG15ing",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/meta-feature-request",
      "name": "meta-feature-request",
      "color": "B5CF5F",
      "default": false,
      "description": "Issues to track feature requests."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-12-22T07:47:40Z",
  "updated_at": "2024-01-04T04:26:00Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "### Problem description\r\n\r\nThe `processRewardsAndPenalties` time is inconsistent, on most of test mainnet nodes it's all good\r\n\r\n<img width=\"1342\" alt=\"Screenshot 2023-12-22 at 14 27 48\" src=\"https://github.com/ChainSafe/lodestar/assets/10568965/8605543d-6d1a-4316-8afa-8e0f7c9a5188\">\r\n\r\nHowever on a lot of other mainnet nodes it's so different\r\n\r\n<img width=\"1338\" alt=\"Screenshot 2023-12-22 at 14 29 13\" src=\"https://github.com/ChainSafe/lodestar/assets/10568965/3c55ae8d-9406-4f76-9100-38dfd539823e\">\r\n\r\nNote that all of these nodes are with v1.13.0 and are all deployed at the same. Having a look at profile it seems the differences come from how much `gc` run mainly due to `packedRootsBytesToLeafNodes` function\r\n<img width=\"959\" alt=\"Screenshot 2023-12-22 at 14 31 27\" src=\"https://github.com/ChainSafe/lodestar/assets/10568965/0157bd41-5cd4-4ce7-8c56-7bd72dbebb01\">\r\n\r\n\r\n\r\n### Solution description\r\n\r\n1. ~~Reuse the whole `balances` nodes branch to avoid `gc`, this helps avoid recreating the whole `balances` branch per epoch transition~~\r\n  -  Set new `h${i}` values to existing leaf nodes\r\n  - For all branch nodes, set `h0` to null to trigger a rehash later https://github.com/ChainSafe/ssz/blob/93ab30e4fc2928fb808b4c76ee015631b8770126/packages/persistent-merkle-tree/src/node.ts#L74\r\n\r\nUpdate: not possible to do this as branch nodes are shared with other states, should not mutate them.\r\n\r\n2. Right now we serialize the whole `balances` before recreating the branch. We can bypass it by setting each `balances[i]` to `LeafNodes[Math.floor(i/4)]`, `h[(i % 4) * 2]` and `h[(i % 4) * 2 + 1]` directly\r\n\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6229/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6229/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1867440971",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/6229#issuecomment-1867440971",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6229",
    "id": 1867440971,
    "node_id": "IC_kwDOCD5_Gc5vTuNL",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-22T09:18:49Z",
    "updated_at": "2023-12-22T09:18:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "idea 1 is not possible for now because LeftNodes are shared across states, can revisit once we're done with n-historical state #5968 work\r\ngiven a deleted check point state, can `balances` tree  be reused for the next epoch transition?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1867440971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1876293461",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/6229#issuecomment-1876293461",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/6229",
    "id": 1876293461,
    "node_id": "IC_kwDOCD5_Gc5v1fdV",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-01-04T04:25:59Z",
    "updated_at": "2024-01-04T04:25:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "epoch transition time is getting worse and may cause missed attestations at slot 0 as it could be up to 6s\r\nJust take a look at gossipsub metric, bandwidth is in subscribe-all-subnets test mainnet node is even bigger than that in production mainnet node. \r\n\r\n<img width=\"1336\" alt=\"Screenshot 2024-01-04 at 11 20 05\" src=\"https://github.com/ChainSafe/lodestar/assets/10568965/0d1a265b-26b4-4f8e-9795-fade42667291\">\r\n\r\nvs our test node subscribing to all subnets\r\n\r\n<img width=\"1337\" alt=\"Screenshot 2024-01-04 at 11 23 23\" src=\"https://github.com/ChainSafe/lodestar/assets/10568965/3b58f38b-cd8e-4629-a6c9-b271b33444e3\">\r\n\r\n\r\nThe difference I see is in publish flow where production mainnet node has to serialize/prefix data while test mainnet node does not have to do that, this may cause `gc` to run more in `processRewardsAndPenalties` function (see the profile above)\r\n\r\nwe should prioritize gossipsub `publish in batch` issue which only require to serialize once per message (instead of per peer) https://github.com/ChainSafe/js-libp2p-gossipsub/issues/344 cc @wemeetagain @philknows ",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1876293461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
