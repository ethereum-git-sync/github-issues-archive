{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/5881",
  "id": 1848622707,
  "node_id": "I_kwDOCD5_Gc5uL75z",
  "number": 5881,
  "title": "Basic Auth userdata no longer working in validator client as of v1.10.0",
  "user": {
    "login": "jshufro",
    "id": 116244,
    "node_id": "MDQ6VXNlcjExNjI0NA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/116244?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jshufro",
    "html_url": "https://github.com/jshufro",
    "followers_url": "https://api.github.com/users/jshufro/followers",
    "following_url": "https://api.github.com/users/jshufro/following{/other_user}",
    "gists_url": "https://api.github.com/users/jshufro/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jshufro/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jshufro/subscriptions",
    "organizations_url": "https://api.github.com/users/jshufro/orgs",
    "repos_url": "https://api.github.com/users/jshufro/repos",
    "events_url": "https://api.github.com/users/jshufro/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jshufro/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 5670219610,
      "node_id": "LA_kwDOCD5_Gc8AAAABUfivWg",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/meta-bug",
      "name": "meta-bug",
      "color": "E79553",
      "default": false,
      "description": "Issues that identify a bug and require a fix."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2023-08-13T14:45:43Z",
  "updated_at": "2023-08-14T16:10:45Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "### Describe the bug\n\nUsing a url of the form `https://user:password@bn.com` no longer works with lodestar, presenting this error:\r\n\r\n```info: Waiting for genesis message=Request cannot be constructed from a URL that includes credentials: https://user:password@bn.com```\n\n### Expected behavior\n\nLodestar should parse the URI per spec and set the `Authorization` header as it did in previous versions\n\n### Steps to reproduce\n\n_No response_\n\n### Additional context\n\n_No response_\n\n### Operating system\n\nLinux\n\n### Lodestar version or commit hash\n\nv1.10.0",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676399377",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1676399377",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1676399377,
    "node_id": "IC_kwDOCD5_Gc5j69MR",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-13T15:59:53Z",
    "updated_at": "2023-08-13T15:59:53Z",
    "author_association": "MEMBER",
    "body": "Looks like this just worked before because the version of the library we used was not compliant to [fetch spec](https://fetch.spec.whatwg.org/), as per spec this is [expected behavior](https://fetch.spec.whatwg.org/#ref-for-include-credentials%E2%91%A3).\r\n\r\n> Lodestar should parse the URI per spec and set the Authorization header as it did in previous versions\r\n\r\nAre you sure this was the previous behavior, I checked the code of the library we were using and it looks like it just passed the URL as is which is pretty bad in terms of security.\r\n\r\nI think the easiest solution would be to just parse the URL, remove the basic auth credentials and add a Authorization header as suggested here https://github.com/node-fetch/node-fetch/issues/1304#issuecomment-1644700615.\r\n\r\nDoes that work for your use case?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676399377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676429062",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1676429062",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1676429062,
    "node_id": "IC_kwDOCD5_Gc5j7EcG",
    "user": {
      "login": "jshufro",
      "id": 116244,
      "node_id": "MDQ6VXNlcjExNjI0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116244?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jshufro",
      "html_url": "https://github.com/jshufro",
      "followers_url": "https://api.github.com/users/jshufro/followers",
      "following_url": "https://api.github.com/users/jshufro/following{/other_user}",
      "gists_url": "https://api.github.com/users/jshufro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jshufro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jshufro/subscriptions",
      "organizations_url": "https://api.github.com/users/jshufro/orgs",
      "repos_url": "https://api.github.com/users/jshufro/repos",
      "events_url": "https://api.github.com/users/jshufro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jshufro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-13T18:18:23Z",
    "updated_at": "2023-08-13T18:19:29Z",
    "author_association": "NONE",
    "body": "Thanks for the quick reply.\r\n\r\nI'm certain previous versions worked- I run Rocket Rescue Node for the Rocket Pool folks and we've been using basic auth with an hmac credential for a while now. I can see connections from lodestar clients still (presumably they just haven't updated yet):\r\n\r\n![image](https://github.com/ChainSafe/lodestar/assets/116244/aab54e82-e47b-4ec5-a295-1a70ecac1ee5)\r\n\r\nAs for `fetch`, I think their assumption is that they're running in a browser, and browsers have started disallowing `username:password` creds in the URI... which is especially frustrating given that `fetch` comes standard in Node 18.\r\n\r\nThat said, while the RFC specifically mentions deprecating `username:password`, userinfo is still a valid part of the authority section of the URL.\r\n\r\nAny non-browser-focused http library worth its salt should parse the `userinfo` element of the URI and encode it in the `Authorization` header before any http(s) requests are made- golang's standard http client does this automatically, for instance.\r\n\r\nIs it possible for Lodestar to parse the URI and populate the `Authorization` header when calling `fetch`? That would certainly solve our issue. If not, we can work with a cli flag that adds `Authorization` to requests, though I think this is more operational state to maintain- prysm has such a cli flag for grpc headers, and they occasionally forget to include them on requests.\r\n\r\nI can confirm that a small wrapper around fetch succeeds with the behavior correct:\r\n```javascript\r\nimport fetch from 'node-fetch';\r\n\r\nlet u = new URL(\"https://foo:bar@fbi.gov\")\r\n\r\nfunction fetch_internal(url) {\r\n  let stripped = new URL(url)\r\n  stripped.username=''\r\n  stripped.password=''\r\n  \r\n  let opts = {}\r\n  if (url.username) {\r\n    opts.headers = { \r\n      Authorization: `Basic ${Buffer.from(`${url.username}:${url.password}`).toString('base64')}`\r\n    }\r\n  }\r\n  \r\n  fetch(stripped, opts)\r\n} \r\n\r\nfetch_internal(u)\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676429062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676433452",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1676433452",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1676433452,
    "node_id": "IC_kwDOCD5_Gc5j7Fgs",
    "user": {
      "login": "jshufro",
      "id": 116244,
      "node_id": "MDQ6VXNlcjExNjI0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116244?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jshufro",
      "html_url": "https://github.com/jshufro",
      "followers_url": "https://api.github.com/users/jshufro/followers",
      "following_url": "https://api.github.com/users/jshufro/following{/other_user}",
      "gists_url": "https://api.github.com/users/jshufro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jshufro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jshufro/subscriptions",
      "organizations_url": "https://api.github.com/users/jshufro/orgs",
      "repos_url": "https://api.github.com/users/jshufro/repos",
      "events_url": "https://api.github.com/users/jshufro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jshufro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-13T18:40:54Z",
    "updated_at": "2023-08-13T18:40:54Z",
    "author_association": "NONE",
    "body": "(As an after thought, the fact that the native URL type in nodejs doesn't have a toString() variant that strips the userinfo is somewhat criminal...)",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676433452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676434121",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1676434121",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1676434121,
    "node_id": "IC_kwDOCD5_Gc5j7FrJ",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-13T18:44:09Z",
    "updated_at": "2023-08-13T18:44:09Z",
    "author_association": "MEMBER",
    "body": "> I'm certain previous versions worked\r\n\r\nYes it worked, it just kept the URL as is, it did not add it as Authorization header, most HTTP servers allow to use either approach.\r\n\r\n> As for fetch, I think their assumption is that they're running in a browser\r\n\r\nThe Lodestar HTTP client has to work in both browser and node, we used cross-fetch for a while which used polyfill implementations and the server-side was not spec compliant in many other aspects so we had different behavior depending on the environment. \r\n\r\nThe main reason we switched to native fetch was due to regressions in the polyfill implementation when upgrading to node 20.\r\n\r\nI also think whether or not the request is done from a browser or server doesn't really matter, credentials should ideally not be part of the URL. The previous library allowing this and not populating the header was rather a bug and has been addressed by https://github.com/node-fetch/node-fetch/pull/1268 but they also just throw an error now as per spec.\r\n\r\n> Any non-browser-focused http library worth its salt should parse the userinfo element of the URI and encode it in the Authorization header before any http(s) requests are made\r\n\r\n> Is it possible for Lodestar to parse the URI and populate the Authorization header when calling fetch?\r\n\r\nThat makes sense to me and we can add that to our HTTP client. Populating the header form the URL credentials would also restore previous behavior.\r\n\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676434121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676435205",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1676435205",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1676435205,
    "node_id": "IC_kwDOCD5_Gc5j7F8F",
    "user": {
      "login": "jshufro",
      "id": 116244,
      "node_id": "MDQ6VXNlcjExNjI0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116244?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jshufro",
      "html_url": "https://github.com/jshufro",
      "followers_url": "https://api.github.com/users/jshufro/followers",
      "following_url": "https://api.github.com/users/jshufro/following{/other_user}",
      "gists_url": "https://api.github.com/users/jshufro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jshufro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jshufro/subscriptions",
      "organizations_url": "https://api.github.com/users/jshufro/orgs",
      "repos_url": "https://api.github.com/users/jshufro/repos",
      "events_url": "https://api.github.com/users/jshufro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jshufro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-13T18:49:26Z",
    "updated_at": "2023-08-13T18:49:26Z",
    "author_association": "NONE",
    "body": "Ah, their logic is more sound than I gave them credit for.\r\n\r\nStill:\r\n> 1.  ...also throw an error when constructing the Request with a url that includes credentials (think this is for the best)\r\n> 2. or if we should auto \"converted to an Authorization value\" as mention in the spec also and strip away the usr/psw from the url\r\n> 3. or just simply allow it\r\n\r\nObviously I'm biased, but I would have gone with option 2, and wouldn't have merged a PR deprecating a valid use-case until the new behavior is in place...\r\n\r\nAnyway, thanks for everything.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676435205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676439071",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1676439071",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1676439071,
    "node_id": "IC_kwDOCD5_Gc5j7G4f",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-13T19:08:37Z",
    "updated_at": "2023-08-13T19:08:37Z",
    "author_association": "MEMBER",
    "body": "There seems to be a option `isAuthenticationFetch` which would built the Authorization header but this is disabled in all major browsers and Node fetch has not yet implemented it.\r\n\r\nSee [nodejs/undici/lib/fetch/index.js#L1558-L1560](https://github.com/nodejs/undici/blob/c83b084879fa0bb8e0469d31ec61428ac68160d5/lib/fetch/index.js#L1558-L1560)\r\n```js\r\n  // 17. If isAuthenticationFetch is true, then create an authentication entry\r\n  if (isAuthenticationFetch) {\r\n    // TODO\r\n  }\r\n```\r\n\r\nWe already have our own http client implementation which uses fetch, best to implement it there\r\n\r\nhttps://github.com/ChainSafe/lodestar/blob/f1a22910374e2f955641c9886b74eed189b27b97/packages/api/src/utils/client/httpClient.ts#L285\r\n\r\nWill take a look at this tomorrow, should be quite easy to add.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676439071/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676473348",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1676473348",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1676473348,
    "node_id": "IC_kwDOCD5_Gc5j7PQE",
    "user": {
      "login": "jshufro",
      "id": 116244,
      "node_id": "MDQ6VXNlcjExNjI0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116244?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jshufro",
      "html_url": "https://github.com/jshufro",
      "followers_url": "https://api.github.com/users/jshufro/followers",
      "following_url": "https://api.github.com/users/jshufro/following{/other_user}",
      "gists_url": "https://api.github.com/users/jshufro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jshufro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jshufro/subscriptions",
      "organizations_url": "https://api.github.com/users/jshufro/orgs",
      "repos_url": "https://api.github.com/users/jshufro/repos",
      "events_url": "https://api.github.com/users/jshufro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jshufro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-13T22:00:51Z",
    "updated_at": "2023-08-13T22:00:51Z",
    "author_association": "NONE",
    "body": "We dug into our stack a bit and discovered that converting raw `https://(userinfo)@foo.org` URIs appears to be an undocumented feature of haproxy.\r\n\r\nI tested by grabbing node-fetch@v2 and sending off some requests to one of our haproxy instances and observing the result in `capture request header authorization` logs.\r\n\r\nThanks again",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676473348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676948971",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1676948971",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1676948971,
    "node_id": "IC_kwDOCD5_Gc5j9DXr",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-14T08:59:39Z",
    "updated_at": "2023-08-14T08:59:39Z",
    "author_association": "MEMBER",
    "body": "Thanks for digging into this.\r\n\r\nI found where the magic happens [nodejs/node/lib/_http_client.js#L309-L312](https://github.com/nodejs/node/blob/de4553f3d11f07fa63e19069daa1b0890052d8b2/lib/_http_client.js#L309-L312)\r\n\r\n```js\r\n    if (options.auth && !this.getHeader('Authorization')) {\r\n      this.setHeader('Authorization', 'Basic ' +\r\n                     Buffer.from(options.auth).toString('base64'));\r\n    }\r\n```\r\n\r\nnode-fetch@v2 just parses the URL and add `auth` to options passed to http client\r\n\r\n```js\r\n{\r\n// ...\r\nauth: 'user:password'\r\n// ...\r\n}\r\n```\r\n\r\nnode-fetch@v3 and native fetch (undici) do not work that way.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1676948971/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1677293080",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1677293080",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1677293080,
    "node_id": "IC_kwDOCD5_Gc5j-XYY",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-14T13:14:23Z",
    "updated_at": "2023-08-14T13:14:23Z",
    "author_association": "MEMBER",
    "body": "@jshufro I'm curious, do you only use basic authentication for beacon nodes or also execution clients? Since ELs have their own auth mechanism using jwt tokens it might not be required there.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1677293080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1677585488",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1677585488",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1677585488,
    "node_id": "IC_kwDOCD5_Gc5j_exQ",
    "user": {
      "login": "jshufro",
      "id": 116244,
      "node_id": "MDQ6VXNlcjExNjI0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/116244?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jshufro",
      "html_url": "https://github.com/jshufro",
      "followers_url": "https://api.github.com/users/jshufro/followers",
      "following_url": "https://api.github.com/users/jshufro/following{/other_user}",
      "gists_url": "https://api.github.com/users/jshufro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jshufro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jshufro/subscriptions",
      "organizations_url": "https://api.github.com/users/jshufro/orgs",
      "repos_url": "https://api.github.com/users/jshufro/repos",
      "events_url": "https://api.github.com/users/jshufro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jshufro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-14T15:45:33Z",
    "updated_at": "2023-08-14T15:45:33Z",
    "author_association": "NONE",
    "body": "> @jshufro I'm curious, do you only use basic authentication for beacon nodes or also execution clients? Since ELs have their own auth mechanism using jwt tokens it might not be required there.\r\n\r\nOur architecture only exposes the BNs externally.\r\n\r\nBasically, working inwards from edge, we have:\r\n1) cloudflare \"orange cloud\" proxy\r\n2) haproxy\r\n3) a custom reverse proxy based on [this library](https://github.com/Rocket-Rescue-Node/guarded-beacon-proxy) to protect our users from mev theft: [rescue-proxy](https://github.com/Rocket-Rescue-Node/rescue-proxy). Our HMAC credentials are validated at this layer.\r\n4) The BN\r\n5) Finally, the EC\r\n\r\nGiven that validator clients perform all their duties against the beacon node, we didn't see a need to expose our ECs, but we locked down the BNs thoroughly. It's a lot of hops but we've found that performance is quite good anyway",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1677585488/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1677630487",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5881#issuecomment-1677630487",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5881",
    "id": 1677630487,
    "node_id": "IC_kwDOCD5_Gc5j_pwX",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-14T16:10:45Z",
    "updated_at": "2023-08-14T16:10:45Z",
    "author_association": "MEMBER",
    "body": "Thanks for the detailed info @jshufro. \r\n\r\nI think we don't have to support it in our `JsonRpcHttpClient` used to communicate with execution client as I doubt anybody is using it there. Generally, execution clients are either not protected (public RPC endpoints) or expose the execution engine which has its own authentication with JWTs, we should not advocate for using basic authentication there.\r\n\r\n> Given that validator clients perform all their duties against the beacon node, we didn't see a need to expose our ECs, but we locked down the BNs thoroughly.\r\n\r\nYour use case makes sense, using basic authentication should work with all clients as it can be specified in the URL and does not require other options like extra headers. Using an API key as query parameter as beaconcha.in does for their monitoring is strictly worse as it will always be part of the URL and more prone to leak credentials.\r\n\r\nIt would be good if there was a more standardized approach to protecting beacon node APIs, similar to execution clients and the keymanager API.\r\n\r\n> It's a lot of hops but we've found that performance is quite good anyway\r\n\r\nYeah it really depends on where those proxies are deployed and what there are doing. I had previously worked a lot with kubernetes and service meshs, and some requests there had 10+ hops, the overhead was minimal even though the traffic was encrypted/decrypted on every hop (I guess envoy is just really performant).",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1677630487/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
