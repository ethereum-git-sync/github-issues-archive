{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/1329",
  "id": 672611091,
  "node_id": "MDU6SXNzdWU2NzI2MTEwOTE=",
  "number": 1329,
  "title": "Stop fetching unnecessary eth1 proposing data",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2020-08-04T08:32:58Z",
  "updated_at": "2021-03-17T18:38:44Z",
  "closed_at": "2021-03-17T18:38:44Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nThis is before genesis time, we pass eth1 block that form eth2 genesis and keep fetching eth1 block to save proposing data\r\n```\r\n2020-08-04 15:20:00  [ETH1]          verbose: Processing proposing data of eth1 block 3154952\r\n2020-08-04 15:20:02  [ETH1]          verbose: Processing proposing data of eth1 block 3154953\r\n2020-08-04 15:20:03  [ETH1]          verbose: Processing proposing data of eth1 block 3154954\r\n2020-08-04 15:20:05  [ETH1]          verbose: Processing proposing data of eth1 block 3154955\r\n2020-08-04 15:20:06  [ETH1]          verbose: Processing proposing data of eth1 block 3154956\r\n2020-08-04 15:20:08  [ETH1]          verbose: Processing proposing data of eth1 block 3154957\r\n2020-08-04 15:20:08  [ETH1]          verbose: Processing 1 deposit events of eth1 block 3154958\r\n2020-08-04 15:20:10  [ETH1]          verbose: Processing proposing data of eth1 block 3154958\r\n2020-08-04 15:20:10  [ETH1]          verbose: Processing 1 deposit events of eth1 block 3154959\r\n2020-08-04 15:20:11  [ETH1]          verbose: Processing proposing data of eth1 block 3154959\r\n2020-08-04 15:20:13  [ETH1]          verbose: Processing proposing data of eth1 block 3154960\r\n2020-08-04 15:20:14  [ETH1]          verbose: Processing proposing data of eth1 block 315496\r\n```\r\n\r\n**Expected behavior**\r\nNeed to base on periodStart\r\n```\r\nexport function votingPeriodStartTime(config: IBeaconConfig, state: TreeBacked<BeaconState>): number {\r\n  const eth1VotingPeriodStartSlot = state.slot -\r\n    state.slot % (config.params.EPOCHS_PER_ETH1_VOTING_PERIOD * config.params.SLOTS_PER_EPOCH);\r\n  return computeTimeAtSlot(config, eth1VotingPeriodStartSlot, state.genesisTime);\r\n}\r\n```\r\nand how we query eth1Data to include in Block body:\r\n```\r\nconst validEth1Data = (await db.eth1Data.values({\r\n    gte: periodStart - config. params.SECONDS_PER_ETH1_BLOCK * config.params.ETH1_FOLLOW_DISTANCE,\r\n    lte: periodStart - config. params.SECONDS_PER_ETH1_BLOCK * config.params.ETH1_FOLLOW_DISTANCE * 2,\r\n  })).filter((eth1Data) => eth1Data.depositCount >= state.eth1Data.depositCount);\r\n```\r\n\r\nto fetch/store eth1Data only when needed\r\n",
  "closed_by": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/668465343",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-668465343",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 668465343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODQ2NTM0Mw==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-04T08:39:46Z",
    "updated_at": "2020-08-04T08:39:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "so based on `max(current_time, config.params.MIN_GENESIS_TIME)`, we calculate `periodStart` and minimum eth1BlockNumber for proposing data to get block/proposing data or not",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/668465343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/671053210",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-671053210",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 671053210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTA1MzIxMA==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-09T13:37:51Z",
    "updated_at": "2020-08-09T13:37:51Z",
    "author_association": "MEMBER",
    "body": "@tuyennhv Is this related or duplicated of https://github.com/ChainSafe/lodestar/issues/1354 ?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/671053210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/671678962",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-671678962",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 671678962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTY3ODk2Mg==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T01:57:35Z",
    "updated_at": "2020-08-11T01:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dapplion this happens at pregenesis time while the other one happens after genesis",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/671678962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/671682249",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-671682249",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 671682249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTY4MjI0OQ==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T02:09:48Z",
    "updated_at": "2020-08-11T02:09:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dapplion  you're right, it has same root cause",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/671682249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/695233121",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-695233121",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 695233121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTIzMzEyMQ==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-19T15:00:45Z",
    "updated_at": "2020-09-19T15:00:45Z",
    "author_association": "MEMBER",
    "body": "@tuyennhv if I understand the issue correctly: After genesis, blocks with a timestamp prior to\r\n```\r\nperiodStart - config. params.SECONDS_PER_ETH1_BLOCK * config.params.ETH1_FOLLOW_DISTANCE * 2\r\n```\r\nare useless right?\r\n\r\nBut without having access to state, can you compute `periodStart`? Would it be possible just by having access to the clock to compute the lowest possible `periodStart` given the current time?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/695233121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/695751078",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-695751078",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 695751078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTc1MTA3OA==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-20T06:24:40Z",
    "updated_at": "2020-09-20T06:24:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dapplion yes and yes, you are all right :D\r\n\r\nThe main point is not to query useless blocks at pregenesis time and after genesis time.\r\n+ Pregenesis time: as described in the issue description, we formed genesis state already but keeps querying eth1 block while waiting for genesis time (due to GENESIS_DELAY). I believe it's not an issue anymore.\r\n+ After genesis: as you said, we don't need blocks before `periodStart - config. params.SECONDS_PER_ETH1_BLOCK * config.params.ETH1_FOLLOW_DISTANCE * 2`. Also, when we are syncing, we don't need to query eth1 block to form eth1 data too.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/695751078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/695752130",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-695752130",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 695752130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTc1MjEzMA==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-20T06:40:53Z",
    "updated_at": "2020-09-20T06:41:06Z",
    "author_association": "MEMBER",
    "body": "Got it. In the current `Eth1ForBlockProduction` the constructor has no access to state\r\nhttps://github.com/ChainSafe/lodestar/blob/16e88384332ce3074da00fdba14d50405a432072/packages/lodestar/src/eth1/eth1ForBlockProduction.ts#L36-L42\r\n\r\nHow do you think would be the nicest way to have access to `periodStart` or the state to compute it at the constructor of `Eth1ForBlockProduction`?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/695752130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/695763591",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-695763591",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 695763591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTc2MzU5MQ==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-20T09:06:13Z",
    "updated_at": "2020-09-20T09:06:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we can use `getGenesisTime()` from chain and `currentSlot` from clock  instead of a state to calculate `periodStart`   at the constructor of `Eth1ForBlockProduction`.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/695763591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/696019173",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-696019173",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 696019173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjAxOTE3Mw==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-21T10:03:45Z",
    "updated_at": "2020-09-21T10:03:45Z",
    "author_association": "MEMBER",
    "body": "Once we get `periodStart` what range of blocks do you start to query from? The client should guess a block number from the lower-bound timestamp `periodStart`?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/696019173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/742736762",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-742736762",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 742736762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjczNjc2Mg==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-10T19:16:30Z",
    "updated_at": "2020-12-10T19:16:30Z",
    "author_association": "MEMBER",
    "body": "Is this an optimization worth pursuing or too niche?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/742736762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/801320565",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1329#issuecomment-801320565",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1329",
    "id": 801320565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTMyMDU2NQ==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-17T18:38:44Z",
    "updated_at": "2021-03-17T18:38:44Z",
    "author_association": "MEMBER",
    "body": "> Is this an optimization worth pursuing or too niche?\r\n\r\nToo niche",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/801320565/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
