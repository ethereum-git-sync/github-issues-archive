{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/889",
  "id": 614115236,
  "node_id": "MDU6SXNzdWU2MTQxMTUyMzY=",
  "number": 889,
  "title": "Process eth1 deposit logs in bulk",
  "user": {
    "login": "mpetrunic",
    "id": 8836210,
    "node_id": "MDQ6VXNlcjg4MzYyMTA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8836210?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mpetrunic",
    "html_url": "https://github.com/mpetrunic",
    "followers_url": "https://api.github.com/users/mpetrunic/followers",
    "following_url": "https://api.github.com/users/mpetrunic/following{/other_user}",
    "gists_url": "https://api.github.com/users/mpetrunic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mpetrunic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mpetrunic/subscriptions",
    "organizations_url": "https://api.github.com/users/mpetrunic/orgs",
    "repos_url": "https://api.github.com/users/mpetrunic/repos",
    "events_url": "https://api.github.com/users/mpetrunic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mpetrunic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2020-05-07T14:45:36Z",
  "updated_at": "2020-05-31T20:10:40Z",
  "closed_at": "2020-05-31T20:10:40Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "<!--NOTE: \r\n- General questions should go to the discord chat instead of the issue tracker.\r\n-->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!--A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]-->\r\nWe are currently fetching every eth1 block and deposit to check if it forms genesis.\r\n\r\n**Describe the solution you'd like**\r\n<!--A clear and concise description of what you want to happen.-->\r\nFetch deposit event logs in bulk (from deployedAt block till currentBlock-ETH1_FOLLOW_DISTANCE), while processing logs if we reach MIN_GENESIS_ACTIVE_VALIDATOR_COUNT deposits, start fetching eth1 blocks belonging to deposit and emit then to test if it forms valid genesis state.\r\n\r\n\r\n**Describe alternatives you've considered**\r\n<!--A clear and concise description of any alternative solutions or features you've considered.-->\r\nWe could also estimate which block number is most close to minimal eth1_timestamp to satisfy condition MIN_GENESIS_TIME condition and start processing eth1 blocks if there is enough deposits and block timestamp satisfies MIN_GENESIS_TIME\r\n\r\n**Additional context**\r\n<!--Add any other context or screenshots about the feature request here.-->\r\n",
  "closed_by": {
    "login": "wemeetagain",
    "id": 1348242,
    "node_id": "MDQ6VXNlcjEzNDgyNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wemeetagain",
    "html_url": "https://github.com/wemeetagain",
    "followers_url": "https://api.github.com/users/wemeetagain/followers",
    "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
    "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
    "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
    "repos_url": "https://api.github.com/users/wemeetagain/repos",
    "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/625730900",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-625730900",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 625730900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTczMDkwMA==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-08T09:34:23Z",
    "updated_at": "2020-05-08T09:34:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I prefer the alternative as it'll help detect genesis state quickly well even years after genesis time when we want to setup a new node.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/625730900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/625929268",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-625929268",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 625929268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTkyOTI2OA==",
    "user": {
      "login": "mpetrunic",
      "id": 8836210,
      "node_id": "MDQ6VXNlcjg4MzYyMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8836210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpetrunic",
      "html_url": "https://github.com/mpetrunic",
      "followers_url": "https://api.github.com/users/mpetrunic/followers",
      "following_url": "https://api.github.com/users/mpetrunic/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpetrunic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpetrunic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpetrunic/subscriptions",
      "organizations_url": "https://api.github.com/users/mpetrunic/orgs",
      "repos_url": "https://api.github.com/users/mpetrunic/repos",
      "events_url": "https://api.github.com/users/mpetrunic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpetrunic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-08T17:30:59Z",
    "updated_at": "2020-05-08T17:30:59Z",
    "author_association": "MEMBER",
    "body": "Oh it's not really alternative, deposit processing is more urgent, second thing could just help a bit reducing number of nodes we are processing",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/625929268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626081600",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-626081600",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 626081600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjA4MTYwMA==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-09T01:14:59Z",
    "updated_at": "2020-05-09T01:14:59Z",
    "author_association": "MEMBER",
    "body": "@tuyennhv take a look at #883. Our bottleneck is actually here right now.\r\nThe eth1 processing side can also be much faster (but its currently at ~1sec per block), but its not actually whats practically stopping us from genesis via eth1. Because we recreate a beacon state every block, with more and more deposits, it ends up quickly outpacing the eth1 block-processing overhead.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626081600/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626302180",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-626302180",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 626302180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjMwMjE4MA==",
    "user": {
      "login": "mpetrunic",
      "id": 8836210,
      "node_id": "MDQ6VXNlcjg4MzYyMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8836210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpetrunic",
      "html_url": "https://github.com/mpetrunic",
      "followers_url": "https://api.github.com/users/mpetrunic/followers",
      "following_url": "https://api.github.com/users/mpetrunic/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpetrunic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpetrunic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpetrunic/subscriptions",
      "organizations_url": "https://api.github.com/users/mpetrunic/orgs",
      "repos_url": "https://api.github.com/users/mpetrunic/repos",
      "events_url": "https://api.github.com/users/mpetrunic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpetrunic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-10T09:56:03Z",
    "updated_at": "2020-05-10T09:57:48Z",
    "author_association": "MEMBER",
    "body": "I was thinking a bit, I don't think we are covering all required scenarios, so I'll summarize here. Correct me if I'm wrong somewhere:\r\n\r\n### **We aren't block producer**\r\n\r\n1.1. **Starting from genesis file**\r\n- We should disable deposit and eth1 block processing and deposit tree building (we don't have genesis deposits in tree anyways).\r\n\r\n1.2. **Manually creating genesis**\r\n- Process bulk deposit events from deployedAt block until first block that satisfies min genesis time constraint\r\n- start processing eth1 blocks until genesis\r\n- stop listening on eth1 blocks (we could continue building deposit tree from eth2 block deposits)\r\n\r\n### **We are block producers**\r\n\r\n2.1 **Starting from genesis file**\r\n- We should bulk process deposit events from deployedAt until genesisState.eth1Data.blockHash so we have deposit tree till genesis\r\n- sync eth2 (this will build deposit tree from eth2 block deposits indirectly)\r\n- after we sync start processing eth1 blocks for eth1 data votes\r\n\r\n2.2 **Manually creating genesis**\r\n-  Process bulk deposit events from deployedAt block until first block that satisfies min genesis time constraint\r\n- start processing eth1 blocks until genesis\r\n- sync (which will build deposit tree)\r\n- start listening eth1 blocks again",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626302180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626498884",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-626498884",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 626498884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjQ5ODg4NA==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T06:29:25Z",
    "updated_at": "2020-05-11T06:29:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do we distinguish a node being a block producer or not? I thought we always assume we are block producers because a validator may connect to our node and become proposer later.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626498884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626506000",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-626506000",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 626506000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjUwNjAwMA==",
    "user": {
      "login": "mpetrunic",
      "id": 8836210,
      "node_id": "MDQ6VXNlcjg4MzYyMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8836210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpetrunic",
      "html_url": "https://github.com/mpetrunic",
      "followers_url": "https://api.github.com/users/mpetrunic/followers",
      "following_url": "https://api.github.com/users/mpetrunic/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpetrunic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpetrunic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpetrunic/subscriptions",
      "organizations_url": "https://api.github.com/users/mpetrunic/orgs",
      "repos_url": "https://api.github.com/users/mpetrunic/repos",
      "events_url": "https://api.github.com/users/mpetrunic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpetrunic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T06:47:31Z",
    "updated_at": "2020-05-11T06:47:31Z",
    "author_association": "MEMBER",
    "body": "> How do we distinguish a node being a block producer or not? I thought we always assume we are block producers because a validator may connect to our node and become proposer later.\n\nI think cayman already added eth1 flag, if not, should be easy to add",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626506000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626515334",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-626515334",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 626515334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjUxNTMzNA==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T07:10:48Z",
    "updated_at": "2020-05-11T07:10:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> sync eth2 (this will build deposit tree from eth2 block deposits indirectly)\r\n\r\nI can't find the place doing that, can show help show it?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/626515334/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/632457873",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-632457873",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 632457873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQ1Nzg3Mw==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T03:26:31Z",
    "updated_at": "2020-05-22T03:26:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> sync eth2 (this will build deposit tree from eth2 block deposits indirectly)\r\n\r\nI don't think we can build deposit root tree from eth2 blocks as we need all deposit roots of all deposit events, deposit data inside eth2 blocks may not be all deposit data roots in eth1. So we have to always scan eth1 to store all deposit roots.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/632457873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/632525445",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-632525445",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 632525445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjUyNTQ0NQ==",
    "user": {
      "login": "mpetrunic",
      "id": 8836210,
      "node_id": "MDQ6VXNlcjg4MzYyMTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8836210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpetrunic",
      "html_url": "https://github.com/mpetrunic",
      "followers_url": "https://api.github.com/users/mpetrunic/followers",
      "following_url": "https://api.github.com/users/mpetrunic/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpetrunic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpetrunic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpetrunic/subscriptions",
      "organizations_url": "https://api.github.com/users/mpetrunic/orgs",
      "repos_url": "https://api.github.com/users/mpetrunic/repos",
      "events_url": "https://api.github.com/users/mpetrunic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpetrunic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T06:58:26Z",
    "updated_at": "2020-05-22T06:58:26Z",
    "author_association": "MEMBER",
    "body": "> > sync eth2 (this will build deposit tree from eth2 block deposits indirectly)\n> \n> I don't think we can build deposit root tree from eth2 blocks as we need all deposit roots of all deposit events, deposit data inside eth2 blocks may not be all deposit data roots in eth1. So we have to always scan eth1 to store all deposit roots.\n\nIn what case deposit event won't be in block? Even with invalid signature it can be included",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/632525445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/632575658",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/889#issuecomment-632575658",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/889",
    "id": 632575658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjU3NTY1OA==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-22T08:44:00Z",
    "updated_at": "2020-05-22T08:44:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's hard to prove all deposit data will be included in eth2 blocks or not, at least what I see is we have `await db.processBlockOperations(block);` in post block processor, if next time our node becomes block proposer we may miss some deposit data (due to forkchoice switches the head and we did not recover the deleted deposit data for example).\r\n\r\nAnyway, we only have DepostData in our Block, what we need is the index of DepositData as well (which is only available in IDepositEvent) so that we can store in deposit root tree. So I think we still need to get all deposit events from eth1 ourself anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/632575658/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
