{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2103",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2103/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2103/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2103/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/2103",
  "id": 817126668,
  "node_id": "MDU6SXNzdWU4MTcxMjY2Njg=",
  "number": 2103,
  "title": "POC: Experiment pulling balances out of TreeBacked<BeaconState>",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-02-26T07:48:11Z",
  "updated_at": "2021-06-28T01:08:56Z",
  "closed_at": "2021-06-28T01:08:56Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently we have a performance issue with `processRewardsAndPenalties` due to the following steps:\r\n+ traversing the balances tree\r\n+ build back the tree\r\n+ getting through `BigIntUintType.toBytes()/fromBytes()` so much which requires BigInt operations a lot\r\n\r\nIt makes me think that maybe `balances` is not suitable to be part of the persistent data structure (persistent-merkle-tree in this case) since it changes very frequently.\r\n\r\nAlso if we access `state.balances[i]`, we have to traverse the tree until the chunk and do `fromBytes` from there (which requires BigInt).\r\n\r\n**Describe the solution you'd like**\r\n+ Model a `ShortBeaconState` interface similar to BeaconState but without `balances`, and add an additional `balancesRoot` instead. We use this mainly for the `hashTreeRoot` (`TreeBacked<ShortBeaconState>`) since the root is the same to the regular BeaconState (similar to `BeaconBlock` vs `BeaconBlockHeader`).\r\n+ Wrap it with a `BeaconStateImpl` class which implements `BeaconState` interface\r\n+ Track `balances` as a regular BigInt array inside `BeaconStateImpl`, hence we can access it easily\r\n+ Forward getter/setter methods to `ShortBeaconState`\r\n+ `hashTreeRoot()`: if `balances` is unchanged, forward to `TreeBacked<ShortBeaconState>`. Otherwise calculate `balancesRoot` manually and update `balancesRoot` to `TreeBacked<ShortBeaconState>` then call `TreeBacked<ShortBeaconState>.hashTreeRoot`\r\n+ `serialize`: hopefully not a concern since  `BeaconStateImpl` sticks to `BeaconState` interface\r\n+ `deserialize`: build a regular `BeaconState` first then `TreeBacked<ShortBeaconState>`, then `BeaconStateImpl`\r\n+ Use `BeaconStateImpl` across lodestar\r\n\r\n**Other thoughts**\r\n+ Not sure if we have any obstacles, have to try it\r\n+ Not sure if memory is an issue due to the cache\r\n+ Be careful with state transition regarding `balances`: need to make sure a change in a state does not affect the others\r\n+ If it works, may merge it to `CachedBeaconState`? The names in this proposal could be changed (I'm not good at naming).\r\n+ Regarding the performance: `hashTreeRoot` should be the same, `deserialize` happens only 1 time. Need to make sure `serialize` has the same performance (we don't do `serialize()` frequently through)\r\n+ We can even track `balances` as Uint8Array and do an update for it without BigInt? That's an open question, let's try BigInt first.\r\n",
  "closed_by": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2103/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2103/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/787827699",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2103#issuecomment-787827699",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2103",
    "id": 787827699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzgyNzY5OQ==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-01T10:10:25Z",
    "updated_at": "2021-03-01T10:10:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "One drawback with the above proposal was `dereaseBalance/increaseBalance` during processing block:  we have to calculate `balancesRoot` again from scratch.\r\n\r\n## Update\r\n+ ~Track balances as a regular BigInt array inside BeaconStateImpl, hence we can access it easily~ Track `balances` as an array of Uint8Array (8 bytes) => `balancesRoot` should be the same to BigInt.\r\n+ `processRewardsAndPenalties` based on byte array directly, instead of converting to BigInt\r\n+ ~hashTreeRoot(): if balances is unchanged, forward to TreeBacked<ShortBeaconState>. Otherwise calculate balancesRoot manually and update balancesRoot to TreeBacked<ShortBeaconState> then call TreeBacked<ShortBeaconState>.hashTreeRoot~ same idea but build the balances Tree (along with the `balances` Uint8Array[]) after processing rewards and penalties and leave it there (since we model balance as Uint8Array, building `persisten-merkle-tree` should be cheap) until the next epoch transition in order to calculate `hashTreeRoot`.\r\n+ During processing block (`increaseBalance/decreaseBalance`), update both `balances` Uint8Array array and the tree (create new `LeafNode`)",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/787827699/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/869263044",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2103#issuecomment-869263044",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2103",
    "id": 869263044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2OTI2MzA0NA==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-06-28T01:08:56Z",
    "updated_at": "2021-06-28T01:08:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "this does not work as expected so closing the issue",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/869263044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
