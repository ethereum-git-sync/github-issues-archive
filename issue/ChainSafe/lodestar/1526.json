{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/1526",
  "id": 697262150,
  "node_id": "MDU6SXNzdWU2OTcyNjIxNTA=",
  "number": 1526,
  "title": "Restore Chain: need to make it minimal",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-09-10T00:19:59Z",
  "updated_at": "2020-09-14T23:24:17Z",
  "closed_at": "2020-09-14T23:24:17Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\nAfter syncing medalla and restart, we have to load 8000 unfinalized blocks and reprocess which takes time and memory, it's redundant because:\r\n+ After chain is started, initial sync redownload same blocks again\r\n+ Some unfinalized blocks are even not in the finalized chain so it's redundant to restore\r\n\r\nThis leads to some weird issues like head slot is way behind latest slot when I restart.\r\n\r\n**Describe the solution you'd like**\r\nWhen we restart, we only need to feed forkchoice with last known state:\r\n+ Justified and finalized nodes are ones from the last known (finalized) state \r\n+ Get respective blocks and feed to forkchoice: 1 for head, 1 for justified, 1 for finalized\r\n+ Continue with initial sync and regular sync\r\n\r\nneed confirmation from @wemeetagain @mpetrunic \r\n",
  "closed_by": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/689899844",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1526#issuecomment-689899844",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526",
    "id": 689899844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTg5OTg0NA==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-10T00:40:30Z",
    "updated_at": "2020-09-10T00:40:30Z",
    "author_association": "MEMBER",
    "body": "> After chain is started, initial sync redownload same blocks again\r\n\r\nWhy does initial sync redownload the same blocks again? Do we always sync starting from our finalized checkpoint?\r\n\r\n> When we restart, we only need to feed forkchoice with last known state:\r\n\r\nWe have to initialize the fork choice with the finalized state / finalized block, and feed blocks, one-by-one starting there.\r\n\r\nIMO the solution I'd like to see is persisting/restoring our fork choice information. Then, on restore, we'd have the full block tree w/o needing to feed all blocks thru the processor. (Perhaps we could always regenerate the head state, seeding our state caches, in anticipation of continuing from there, or near there).",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/689899844/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/689904638",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1526#issuecomment-689904638",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526",
    "id": 689904638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTkwNDYzOA==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-10T00:55:51Z",
    "updated_at": "2020-09-10T10:12:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Why does initial sync redownload the same blocks again? Do we always sync starting from our finalized checkpoint?\r\n\r\nIn unfinalized period, I sync to slot 110000 and it's crashed. When I restart, we have to reprocess from block 73249 until 110000, then at initial sync we start from our finalized block which is 73248. So its a duplicate.\r\n\r\nAnother example, last time I came to regular sync and proceeded a little bit after that then I stop, get some unfinalized blocks. After ~ 2 weeks, when restart I have to reprocess these blocks but it turns out these blocks are not in the finalized chain, that's redundant. This lead me to weird situation where head block is way behind latest block as described.\r\n\r\n> We have to initialize the fork choice with the finalized state / finalized block, and feed blocks, one-by-one starting there.\r\n\r\n~My proposal is only feed forkchoice with 3 blocks: finalized block, justified block and head block (last finalized block) then we finish the chain restore and go to initial sync. Is that enough?~\r\nMy proposal is initialize the forkchoice with the finalized state / finalized block and justified block, finalized block of that state and reprocess other remaining finalized blocks (if we have it) through block processor, there are just few of them\r\n\r\n> IMO the solution I'd like to see is persisting/restoring our fork choice information. Then, on restore, we'd have the full block tree w/o needing to feed all blocks thru the processor.\r\n\r\n~Yeah, we don't need to touch the block processor. But I think we only need to do that with 3 blocks and let initial sync build the full block tree again through block processor.~\r\n\r\nWe also need state cache so still need the block processor, but we don't reprocess unfinalized blocks, just reprocess finalized blocks in order to have both forkchoice and state cache, then at initial sync we'll start at the last finalized block.\r\n\r\nThe main thing is not to touch unfinalized blocks upon restart since it's not necessary so I don't think we want to persist forkchoice just to have information of these unfinalized blocks.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/689904638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/692370047",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1526#issuecomment-692370047",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1526",
    "id": 692370047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjM3MDA0Nw==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T23:24:17Z",
    "updated_at": "2020-09-14T23:24:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "#1517  will resolve this issue",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/692370047/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
