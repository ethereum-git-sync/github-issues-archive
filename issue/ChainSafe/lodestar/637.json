{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/637",
  "id": 559154941,
  "node_id": "MDU6SXNzdWU1NTkxNTQ5NDE=",
  "number": 637,
  "title": "Filter out non-viable branches when call to get_head ",
  "user": {
    "login": "ColinSchwarz",
    "id": 44817566,
    "node_id": "MDQ6VXNlcjQ0ODE3NTY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/44817566?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ColinSchwarz",
    "html_url": "https://github.com/ColinSchwarz",
    "followers_url": "https://api.github.com/users/ColinSchwarz/followers",
    "following_url": "https://api.github.com/users/ColinSchwarz/following{/other_user}",
    "gists_url": "https://api.github.com/users/ColinSchwarz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ColinSchwarz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ColinSchwarz/subscriptions",
    "organizations_url": "https://api.github.com/users/ColinSchwarz/orgs",
    "repos_url": "https://api.github.com/users/ColinSchwarz/repos",
    "events_url": "https://api.github.com/users/ColinSchwarz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ColinSchwarz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-02-03T15:26:24Z",
  "updated_at": "2020-03-20T20:40:42Z",
  "closed_at": "2020-03-20T20:40:42Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "v0.9.3: filter out non-viable branches when call to get_head (ethereum/eth2.0-specs#1495)",
  "closed_by": {
    "login": "wemeetagain",
    "id": 1348242,
    "node_id": "MDQ6VXNlcjEzNDgyNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wemeetagain",
    "html_url": "https://github.com/wemeetagain",
    "followers_url": "https://api.github.com/users/wemeetagain/followers",
    "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
    "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
    "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
    "repos_url": "https://api.github.com/users/wemeetagain/repos",
    "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/590635809",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/637#issuecomment-590635809",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637",
    "id": 590635809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDYzNTgwOQ==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-25T01:33:31Z",
    "updated_at": "2020-02-25T01:38:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose we have nothing to do with this because we use different algorithm.\r\n+ According to the spec, we want to filter blocks before traverse them to getHead.\r\n+ For our algorithm, we maintain `bestTarget` so we only get it in `head` (getHead). We don't traverse blocks so we don't need to filter.\r\n\r\ncan you confirm @wemeetagain ?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/590635809/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/591225422",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/637#issuecomment-591225422",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637",
    "id": 591225422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTIyNTQyMg==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-26T03:52:32Z",
    "updated_at": "2020-02-26T03:52:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I took some more time on this. The main point is to make sure the head has the same finalized & justified checkpoint to the store, so I propose:\r\n\r\n+ Maintain justified/finalized checkpoint in all nodes\r\n+ Whenever there is justified/finalized checkpoint change, we have to traverse from the justified checkpoint to decide new best target of every node (if needed)\r\n+ On weight change, make sure the best target has same justified/finalized checkpoint to the store.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/591225422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/591239070",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/637#issuecomment-591239070",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/637",
    "id": 591239070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTIzOTA3MA==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-26T04:58:17Z",
    "updated_at": "2020-02-26T04:58:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "On the other hand, if we do like that it may not be worth to follow our own specific algorithm compared to the spec because we have to do the traversal anyway.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/591239070/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
