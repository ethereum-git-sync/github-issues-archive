{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/397",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/397/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/397/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/397/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/397",
  "id": 481014835,
  "node_id": "MDU6SXNzdWU0ODEwMTQ4MzU=",
  "number": 397,
  "title": "SSZ: hashTreeRoot never return",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-08-15T06:36:46Z",
  "updated_at": "2019-08-20T08:44:16Z",
  "closed_at": "2019-08-20T08:44:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nThis unit test never return\r\n```\r\nit(`should hash correctly with slice/array data`, () => {\r\n    const accountBalances = {\r\n      balances: []\r\n    };\r\n    for (let i = 0; i < 2; i++) {\r\n      accountBalances.balances.push(new BN(\"32000000000\"));\r\n    }\r\n    const accountBalancesType: AnySSZType = {\r\n      fields: [[\"balances\", { elementType: \"uint64\", maxLength: 2 }]]\r\n    };\r\n    const hash = hashTreeRoot(accountBalances, accountBalancesType).toString(\r\n      \"hex\"\r\n    );\r\n    assert(hash);\r\n  });\r\n```\r\nThis is because of the implementation inside `hashTreeRoot`.\r\n**Expected behavior**\r\nIt should return a hash or throw an error",
  "closed_by": {
    "login": "GregTheGreek",
    "id": 16929357,
    "node_id": "MDQ6VXNlcjE2OTI5MzU3",
    "avatar_url": "https://avatars.githubusercontent.com/u/16929357?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/GregTheGreek",
    "html_url": "https://github.com/GregTheGreek",
    "followers_url": "https://api.github.com/users/GregTheGreek/followers",
    "following_url": "https://api.github.com/users/GregTheGreek/following{/other_user}",
    "gists_url": "https://api.github.com/users/GregTheGreek/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/GregTheGreek/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/GregTheGreek/subscriptions",
    "organizations_url": "https://api.github.com/users/GregTheGreek/orgs",
    "repos_url": "https://api.github.com/users/GregTheGreek/repos",
    "events_url": "https://api.github.com/users/GregTheGreek/events{/privacy}",
    "received_events_url": "https://api.github.com/users/GregTheGreek/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/397/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/397/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/521533362",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/397#issuecomment-521533362",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/397",
    "id": 521533362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTUzMzM2Mg==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-15T06:40:05Z",
    "updated_at": "2019-08-15T07:27:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I found out that `padFor` in `merkleize` is  0.5 which is incorrect and it caused `bitLength` function to run forever\r\nwe expect integer there\r\nDigging into it, I see the following snippet in `_hashTreeRoot` maybe the root cause\r\n```\r\ncase Type.list:\r\n      value = value as SerializableArray;\r\n      if (isBasicType(type.elementType)) {\r\n        return mixInLength(\r\n          merkleize(\r\n            pack(value, (type as ListType).elementType),\r\n            (type.maxLength * fixedSize(type.elementType)) / BYTES_PER_CHUNK\r\n          ),\r\n          value.length\r\n        );\r\n      } else {\r\n```\r\nthe 2nd parameter in merkleize maybe not correct, it can be like this\r\n```\r\nMath.floor(type.maxLength * fixedSize(type.elementType) + 31) / BYTES_PER_CHUNK\r\n          )\r\n```\r\naccording to the spec of `chunk_count` in https://github.com/ethereum/eth2.0-specs/blob/dev/specs/simple-serialize.md\r\n```\r\nList[B, N] and Vector[B, N], where B is a basic type: (N * size_of(B) + 31) // 32 (dividing by chunk size, rounding up)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/521533362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
