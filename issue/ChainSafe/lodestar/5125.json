{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/5125",
  "id": 1579238617,
  "node_id": "I_kwDOCD5_Gc5eIUTZ",
  "number": 5125,
  "title": "Proposer boost reorg",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1200090446,
      "node_id": "MDU6TGFiZWwxMjAwMDkwNDQ2",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/prio-medium",
      "name": "prio-medium",
      "color": "fdc09f",
      "default": false,
      "description": "Resolve this some time soon (tm)."
    },
    {
      "id": 4754137758,
      "node_id": "LA_kwDOCD5_Gc8AAAABG15ing",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/meta-feature-request",
      "name": "meta-feature-request",
      "color": "B5CF5F",
      "default": false,
      "description": "Issues to track feature requests."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2023-02-10T08:24:19Z",
  "updated_at": "2023-12-19T19:51:17Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\n- Allow a proposer to reorg late block (blocks come after 4s): block `N + 2` may build on block `N` if block `N + 1` arrived late leveraging proposer boost\r\n\r\nThere are some benefits with this:\r\n- Proposer is likely to make more proposer reward due to more transactions\r\n- Connected attesters may get more reward since there votes on block `N + 1` are not considered late\r\n- It's better for the network, especially for Lodestar if a block comes after 4s then our attestations are potentially missed due to I/O lag issue https://github.com/ChainSafe/lodestar/issues/4881\r\n\r\n**Describe the solution you'd like**\r\n\r\n- Spec: https://github.com/ethereum/consensus-specs/pull/3034\r\n- Lighthouse's implementation: https://github.com/sigp/lighthouse/pull/2860\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1793336688",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5125#issuecomment-1793336688",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125",
    "id": 1793336688,
    "node_id": "IC_kwDOCD5_Gc5q5CVw",
    "user": {
      "login": "philknows",
      "id": 58080811,
      "node_id": "MDQ6VXNlcjU4MDgwODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58080811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philknows",
      "html_url": "https://github.com/philknows",
      "followers_url": "https://api.github.com/users/philknows/followers",
      "following_url": "https://api.github.com/users/philknows/following{/other_user}",
      "gists_url": "https://api.github.com/users/philknows/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philknows/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philknows/subscriptions",
      "organizations_url": "https://api.github.com/users/philknows/orgs",
      "repos_url": "https://api.github.com/users/philknows/repos",
      "events_url": "https://api.github.com/users/philknows/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philknows/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-11-04T04:38:38Z",
    "updated_at": "2023-11-04T04:38:38Z",
    "author_association": "MEMBER",
    "body": "Spec has now been merged. Great thread on feature here for implementation by Lighthouse: https://x.com/sproulm_/status/1720604070207950883",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1793336688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1839884796",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5125#issuecomment-1839884796",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125",
    "id": 1839884796,
    "node_id": "IC_kwDOCD5_Gc5tqmn8",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-05T02:17:29Z",
    "updated_at": "2023-12-05T02:17:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@naviechan is looking into this",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1839884796/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1857468931",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5125#issuecomment-1857468931",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125",
    "id": 1857468931,
    "node_id": "IC_kwDOCD5_Gc5utroD",
    "user": {
      "login": "ensi321",
      "id": 17676176,
      "node_id": "MDQ6VXNlcjE3Njc2MTc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/17676176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ensi321",
      "html_url": "https://github.com/ensi321",
      "followers_url": "https://api.github.com/users/ensi321/followers",
      "following_url": "https://api.github.com/users/ensi321/following{/other_user}",
      "gists_url": "https://api.github.com/users/ensi321/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ensi321/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ensi321/subscriptions",
      "organizations_url": "https://api.github.com/users/ensi321/orgs",
      "repos_url": "https://api.github.com/users/ensi321/repos",
      "events_url": "https://api.github.com/users/ensi321/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ensi321/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-15T08:22:52Z",
    "updated_at": "2023-12-15T08:22:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess there are couple questions that we want to answer before implementing it:\r\n1) Should we give users the option (via a flag) to enable/disable proposer boost reorg feature? \r\n2) If so, should it be enabled or disabled by default? imo, it should be enabled by default to contribute to the overall health of the protocol.\r\n3) Since the spec doesn’t enforce the implementation of [`should_override_forkchoice_update()`](https://github.com/ethereum/consensus-specs/blob/dev/specs/bellatrix/fork-choice.md#should_override_forkchoice_update) which is a collection of conditions that need to be satisfied in order to skip the late block, how closely should we follow the suggested implementation? Furthermore, any condition that should be added or removed on top of the suggested impl?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1857468931/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1863384777",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5125#issuecomment-1863384777",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5125",
    "id": 1863384777,
    "node_id": "IC_kwDOCD5_Gc5vEP7J",
    "user": {
      "login": "philknows",
      "id": 58080811,
      "node_id": "MDQ6VXNlcjU4MDgwODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58080811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philknows",
      "html_url": "https://github.com/philknows",
      "followers_url": "https://api.github.com/users/philknows/followers",
      "following_url": "https://api.github.com/users/philknows/following{/other_user}",
      "gists_url": "https://api.github.com/users/philknows/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philknows/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philknows/subscriptions",
      "organizations_url": "https://api.github.com/users/philknows/orgs",
      "repos_url": "https://api.github.com/users/philknows/repos",
      "events_url": "https://api.github.com/users/philknows/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philknows/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-12-19T19:51:15Z",
    "updated_at": "2023-12-19T19:51:15Z",
    "author_association": "MEMBER",
    "body": "> I guess there are couple questions that we want to answer before implementing it:\r\n> \r\n> 1. Should we give users the option (via a flag) to enable/disable proposer boost reorg feature?\r\n\r\nAccording to their PR, it looks like it's on by default but there is a `--disable-proposer-reorgs` to turn it off. I think we should do something similar.\r\n\r\n> 2. If so, should it be enabled or disabled by default? imo, it should be enabled by default to contribute to the overall health of the protocol.\r\n\r\nYes, on by default is my preference here to help with network health.\r\n\r\n> 3. Since the spec doesn’t enforce the implementation of [`should_override_forkchoice_update()`](https://github.com/ethereum/consensus-specs/blob/dev/specs/bellatrix/fork-choice.md#should_override_forkchoice_update) which is a collection of conditions that need to be satisfied in order to skip the late block, how closely should we follow the suggested implementation? Furthermore, any condition that should be added or removed on top of the suggested impl?\r\n\r\nI would say we should try to match at least what Lighthouse is doing and the options they give, which is explained very well in their PR here: https://github.com/sigp/lighthouse/pull/2860\r\n\r\nWill let the team also chime in to see if there's anything else we can add to it.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1863384777/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
