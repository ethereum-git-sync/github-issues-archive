{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5045",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5045/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5045/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5045/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/5045",
  "id": 1554055481,
  "node_id": "I_kwDOCD5_Gc5coQE5",
  "number": 5045,
  "title": "Docs: SSZ usage docs for TypeScript devs",
  "user": {
    "login": "philknows",
    "id": 58080811,
    "node_id": "MDQ6VXNlcjU4MDgwODEx",
    "avatar_url": "https://avatars.githubusercontent.com/u/58080811?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/philknows",
    "html_url": "https://github.com/philknows",
    "followers_url": "https://api.github.com/users/philknows/followers",
    "following_url": "https://api.github.com/users/philknows/following{/other_user}",
    "gists_url": "https://api.github.com/users/philknows/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/philknows/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/philknows/subscriptions",
    "organizations_url": "https://api.github.com/users/philknows/orgs",
    "repos_url": "https://api.github.com/users/philknows/repos",
    "events_url": "https://api.github.com/users/philknows/events{/privacy}",
    "received_events_url": "https://api.github.com/users/philknows/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1200090446,
      "node_id": "MDU6TGFiZWwxMjAwMDkwNDQ2",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/prio-medium",
      "name": "prio-medium",
      "color": "fdc09f",
      "default": false,
      "description": "Resolve this some time soon (tm)."
    },
    {
      "id": 3152474742,
      "node_id": "MDU6TGFiZWwzMTUyNDc0NzQy",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/scope-documentation",
      "name": "scope-documentation",
      "color": "980043",
      "default": false,
      "description": "All issues related to the Lodestar documentation."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-01-24T00:33:53Z",
  "updated_at": "2023-05-29T07:39:27Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "The goal of these docs are to enable more TypeScript devs to easily learn and experiment with the SSZ library. More tutorials, more detailed docs about usage for the greater community is desired and open for contributions.\r\n\r\nCurrently, there are some docs located here https://github.com/ChainSafe/lodestar/tree/unstable/packages/types describing the organization of the SSZ library. It should describe basic primary operations such as `serialize`, `deserialize` and `hashTreeRoot`.\r\n\r\nInclude example usage such as:\r\n```ts\r\nimport {ssz} from '@lodestar/types'\r\n\r\n// create an attestation (default value is all 0s)\r\nconst attestation = ssz.phase0.Attestation.defaultValue()\r\n\r\n// the object can be accessed / modified normally (and typescript should help ensure you're setting the values properly)\r\nattestation.data.source.epoch = 100\r\n\r\n// get the merkle root of the attestation\r\nconst root = ssz.phase0.Attestation.hashTreeRoot(attestation)\r\n\r\n// serialize the attestation\r\nconst serialized = ssz.phase0.Attestation.serialize(attestation)\r\n\r\n// deserialize the attestation\r\nconst attestation2 = ssz.phase0.Attestation.deserialize(serialized)\r\n\r\n// the deserialized value should equal the original value\r\nssz.phase0.Attestation.equals(attestation, attestation2) === true\r\n\r\n// you can also convert to/from a json-serializable format\r\nconst json = ssz.phase0.Attestation.toJson(attestation)\r\nconst attestation3 = ssz.phase0.Attestation.fromJson(json)\r\nssz.phase0.Attestation.equals(attestation, attestation3) === true\r\n```\r\n\r\nCreating and consuming proofs can use additional and clearer examples of usage.\r\n\r\nSome of the readme is already located here: https://github.com/ChainSafe/ssz/tree/master/packages/ssz \r\n\r\nAdditional usage to add:\r\n```ts\r\nimport {ssz} from '@lodestar/types'\r\n\r\n// create a default attestation optimized for proofs\r\nconst attestation = ssz.phase0.Attestation.defaultView()\r\n\r\n// this object combines a merkle tree and the ssz object information to provide the interface of the object\r\n// with a few caveats\r\n\r\n// retrieve the type and merkle tree from the view (usually this is not necessary)\r\nattestation.type === ssz.phase0.Attestation\r\nattestation.tree // <- underlying binary merkle tree\r\n\r\n// subproperties that are not primitives or byte vectors are subviews\r\nattestation.data // <- this is a view\r\n\r\n// subproperties that are primitives and byte vectors are represented as javascript native types and can be modified normally\r\nattestation.data.source.epoch = 100\r\n// subproperties that aren't primitives and byte vectors must be modified by setting as a view\r\nattestation.data = ssz.phase0.AttestationData.defaultView()\r\n// subproperties that are byte vectors must be set all at once, not element-by-element\r\n// attestation.data.source.root[0] = 100 // <- NO\r\nattestation.data.source.root = new Uint8Array(32) // <- yes\r\n\r\n// proofs can be created by selecting specific subproperties to include in the proof\r\n// eg: create a proof that proves the source and target epoch in an attestation\r\nconst proof = attestation.createProof([\r\n  ['data', 'source', 'epoch'],\r\n  ['data', 'target', 'epoch'],\r\n])\r\n\r\n// the proof can be consumed like so\r\nconst partialAttestation = ssz.phase0.Attestation.createFromProof(proof)\r\n\r\n// any part of object that the proof included can be accessed normally\r\npartialAttestation.source.epoch === 100\r\n\r\n// accessing part of the object that the proof did not include will throw\r\ntry {\r\n  partialAttestation.committeeIndex\r\n} catch (e) {}\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5045/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5045/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1403637952",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5045#issuecomment-1403637952",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5045",
    "id": 1403637952,
    "node_id": "IC_kwDOCD5_Gc5TqdDA",
    "user": {
      "login": "shaansundar",
      "id": 40330352,
      "node_id": "MDQ6VXNlcjQwMzMwMzUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/40330352?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shaansundar",
      "html_url": "https://github.com/shaansundar",
      "followers_url": "https://api.github.com/users/shaansundar/followers",
      "following_url": "https://api.github.com/users/shaansundar/following{/other_user}",
      "gists_url": "https://api.github.com/users/shaansundar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shaansundar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shaansundar/subscriptions",
      "organizations_url": "https://api.github.com/users/shaansundar/orgs",
      "repos_url": "https://api.github.com/users/shaansundar/repos",
      "events_url": "https://api.github.com/users/shaansundar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shaansundar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-25T13:40:36Z",
    "updated_at": "2023-01-25T13:40:36Z",
    "author_association": "NONE",
    "body": "Hey @philknows! I'd like to start contributing to lodestar, is this a beginner friendly task to assign myself upon?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1403637952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1403774656",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5045#issuecomment-1403774656",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5045",
    "id": 1403774656,
    "node_id": "IC_kwDOCD5_Gc5Tq-bA",
    "user": {
      "login": "philknows",
      "id": 58080811,
      "node_id": "MDQ6VXNlcjU4MDgwODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/58080811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/philknows",
      "html_url": "https://github.com/philknows",
      "followers_url": "https://api.github.com/users/philknows/followers",
      "following_url": "https://api.github.com/users/philknows/following{/other_user}",
      "gists_url": "https://api.github.com/users/philknows/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/philknows/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/philknows/subscriptions",
      "organizations_url": "https://api.github.com/users/philknows/orgs",
      "repos_url": "https://api.github.com/users/philknows/repos",
      "events_url": "https://api.github.com/users/philknows/events{/privacy}",
      "received_events_url": "https://api.github.com/users/philknows/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-01-25T15:13:50Z",
    "updated_at": "2023-01-25T15:13:50Z",
    "author_association": "MEMBER",
    "body": "Hey @shaansundar! I think docs are generally a great way to start contributing! It'll allow you to document your process and knowledge while learning. Feel free to[ join our discord](https://discord.gg/642wB3XC3Q) and ask any questions in our Lodestar>SSZ channel as you go through it. It's a great way to start learning how Lodestar works.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1403774656/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
