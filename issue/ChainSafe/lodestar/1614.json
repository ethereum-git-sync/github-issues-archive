{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1614",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1614/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1614/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1614/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/1614",
  "id": 712464997,
  "node_id": "MDU6SXNzdWU3MTI0NjQ5OTc=",
  "number": 1614,
  "title": "Regular Sync is stalled: do not trust empty range result",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-10-01T04:22:24Z",
  "updated_at": "2020-10-10T17:29:08Z",
  "closed_at": "2020-10-10T17:29:08Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nCurrently in regular sync, if we receive an empty range and later on we check best peer's head is above range end, we assume that it's really an empty range and we just move forward.\r\nIn reality, the peer may return beacon_block_by_range incorrectly, or because peer head is updated after we call beacon_block_by_range. So we have to be safe: should start from range.start and expand range.end.\r\n\r\n```\r\n2020-10-01 10:09:44  [SYNC]             info: Regular Sync: Setting target newTargetSlot=414580\r\n2020-10-01 10:09:44  [SYNC]             info: Regular Sync: Requesting blocks from slot 414561 to slot 414580\r\n2020-10-01 10:09:50  [SYNC]             info: Imported blocks for slots: 414561,414562,414564,414565,414567,414568,414569,414570,414571,414572,414573,414574,414575,414576,414577,414578,414579,414580\r\n2020-10-01 10:10:52  [SYNC]             info: Regular Sync: Synced up to slot 414580  currentSlot=414653, gossipParentBlockRoot=undefined\r\n2020-10-01 10:10:52  [SYNC]             info: Regular Sync: Requesting blocks from slot 414581 to slot 414600\r\n2020-10-01 10:10:55  [SYNC]             info: Imported blocks for slots:\r\n2020-10-01 10:10:55  [SYNC]             info: Regular Sync: Requesting blocks from slot 414601 to slot 414620\r\n2020-10-01 10:10:55  [SYNC]             info: Regular Sync: wait for best peer\r\n2020-10-01 10:11:36  [SYNC]             info: Imported blocks for slots: 414601,414602,414603,414604,414606,414607,414608,414611,414612,414614,414615,414616,414617,414618,414619,414620\r\n```\r\nIn the above log, fetching `414581 -> 414600` returns empty range (without error) and we trust that and move forward, but since we really have some blocks in that range, Regular Sync stalled (bc no \"processedBlock\" event emitted due to missing blocks in the middle) We should not trust that and fetch `414581 -> 414620` to be safe if possible.\r\n**Expected behavior**\r\nRegular sync is not stalled even best peer does not return correctly or whatever reason in the case of empty blocks returned.\r\n",
  "closed_by": {
    "login": "wemeetagain",
    "id": 1348242,
    "node_id": "MDQ6VXNlcjEzNDgyNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wemeetagain",
    "html_url": "https://github.com/wemeetagain",
    "followers_url": "https://api.github.com/users/wemeetagain/followers",
    "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
    "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
    "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
    "repos_url": "https://api.github.com/users/wemeetagain/repos",
    "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1614/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1614/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[

]
