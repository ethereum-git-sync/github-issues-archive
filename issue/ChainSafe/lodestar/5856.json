{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5856",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5856/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5856/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5856/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/5856",
  "id": 1839694704,
  "node_id": "I_kwDOCD5_Gc5tp4Nw",
  "number": 5856,
  "title": "Restart aware doppelganger protection",
  "user": {
    "login": "nflaig",
    "id": 38436224,
    "node_id": "MDQ6VXNlcjM4NDM2MjI0",
    "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nflaig",
    "html_url": "https://github.com/nflaig",
    "followers_url": "https://api.github.com/users/nflaig/followers",
    "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
    "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
    "organizations_url": "https://api.github.com/users/nflaig/orgs",
    "repos_url": "https://api.github.com/users/nflaig/repos",
    "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nflaig/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4754137758,
      "node_id": "LA_kwDOCD5_Gc8AAAABG15ing",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/meta-feature-request",
      "name": "meta-feature-request",
      "color": "B5CF5F",
      "default": false,
      "description": "Issues to track feature requests."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-08-07T15:17:16Z",
  "updated_at": "2023-10-17T08:51:34Z",
  "closed_at": "2023-10-17T08:51:34Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Problem description\r\n\r\nCurrent implementation of doppelganger protection does not differentiate between a simple restart and starting the validator on a new machine. This causes 2-3 missed attestations after every restart such as when upgrading Lodestar to a newer version but DP does not provide any protection in this case.\r\n\r\nFor some users (e.g. on dappnode), DP is enabled by default and every package upgrade introduces unnecessary downtime which causes bad user experience.\r\n\r\n### Solution description\r\n\r\nWe should make our DP implementation a bit smarter and be able to differentiate between a restart and a new installation. Validator duties should only be skipped if it is really required.\r\n\r\nThis can be achieved by looking at the local slashing protection DB and if the validator produced an attestation in the previous epoch it means that the validator client was just restarted and DP can be skipped for this validator.\r\n\r\nIt is even safer in this case to start attestations right away because if two validator clients are started at the same time and one of them has an existing DB it would prevent slashing, whereas if both wait for 2-3 epochs, no chain activity would be detected and both instances would start attesting at the same time, causing validators to be slashed if there are conflicting attestations.\r\n\r\n### Further considerations\r\n\r\nThere is an edge case when importing a validator via keymanager API, it is possible to also import the slashing protection interchange file. This will create an attestation record in the database and could cause doppelganger protection to be skipped if import happens within in the next epoch.\r\n\r\nI don't see this as a huge risk because exporting the slashing protection interchange from a running client is only possible while also deleting the key from that client, there is no risk of getting slashed due to a doppelganger.\r\nIt also assumes slashing protection was exported / imported within short time period, likely in an automated setup which aims to achieve no downtime when switching clients and therefore doppelganger protection would not be enabled anyways.\r\n\r\nConsidering this, I think there is no risk in the suggested approach and it is safe to skip doppelganger in any scenario if an attestation from previous epoch exists in the slashing protection db.\r\n\r\n### Additional context\r\n\r\nSimilar approach is described in https://github.com/prysmaticlabs/prysm/issues/7985#issuecomment-843209422 and https://github.com/status-im/nimbus-eth2/issues/3083.",
  "closed_by": {
    "login": "nflaig",
    "id": 38436224,
    "node_id": "MDQ6VXNlcjM4NDM2MjI0",
    "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/nflaig",
    "html_url": "https://github.com/nflaig",
    "followers_url": "https://api.github.com/users/nflaig/followers",
    "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
    "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
    "organizations_url": "https://api.github.com/users/nflaig/orgs",
    "repos_url": "https://api.github.com/users/nflaig/repos",
    "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/nflaig/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5856/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 1,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5856/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1669812899",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5856#issuecomment-1669812899",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5856",
    "id": 1669812899,
    "node_id": "IC_kwDOCD5_Gc5jh1Kj",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-08-08T15:13:15Z",
    "updated_at": "2023-08-08T15:13:36Z",
    "author_association": "MEMBER",
    "body": "Yes it's a nice strategy, I think it does not compromise the safety of DG on restarts",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1669812899/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1735505775",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5856#issuecomment-1735505775",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5856",
    "id": 1735505775,
    "node_id": "IC_kwDOCD5_Gc5ncbdv",
    "user": {
      "login": "nflaig",
      "id": 38436224,
      "node_id": "MDQ6VXNlcjM4NDM2MjI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/38436224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nflaig",
      "html_url": "https://github.com/nflaig",
      "followers_url": "https://api.github.com/users/nflaig/followers",
      "following_url": "https://api.github.com/users/nflaig/following{/other_user}",
      "gists_url": "https://api.github.com/users/nflaig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nflaig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nflaig/subscriptions",
      "organizations_url": "https://api.github.com/users/nflaig/orgs",
      "repos_url": "https://api.github.com/users/nflaig/repos",
      "events_url": "https://api.github.com/users/nflaig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nflaig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-09-26T13:05:31Z",
    "updated_at": "2023-10-14T22:25:26Z",
    "author_association": "MEMBER",
    "body": "I looked into finishing the implementation I started in https://github.com/ChainSafe/lodestar/compare/unstable...nflaig/zero-downtime-doppelganger but the issue is that making `addSigner` in validator store async due to `registerValidator` in doppelganger serivce becoming async is a bit problematic. This is required because we have to load data from the slashing protection db.\r\nhttps://github.com/ChainSafe/lodestar/blob/12f9e11cde669122565a2324436e254d2093c886/packages/validator/src/services/validatorStore.ts#L285\r\nhttps://github.com/ChainSafe/lodestar/blob/12f9e11cde669122565a2324436e254d2093c886/packages/validator/src/services/doppelgangerService.ts#L63\r\n\r\nIt makes the whole validator initialization async because we have to make sure that signers are added before executing any other code like registering validator with builder / beacon node.\r\nhttps://github.com/ChainSafe/lodestar/blob/12f9e11cde669122565a2324436e254d2093c886/packages/validator/src/validator.ts#L122-L123\r\n\r\nIt is also critical that the validator is registered as doppelganger before any other code can use the pubkey (e.g. to fetch duties) as this would impend the security of the doppelganger protection.\r\n\r\nI don't like making the validator store initialization async but on the other hand we are using this pattern all over the place for other modules. The validator initilization itself is already async anyways so it might be ok to introduce this change to make this feature possible.\r\nhttps://github.com/ChainSafe/lodestar/blob/a11427edba4a0cabcb4b212a9eeef78199bea246/packages/validator/src/validator.ts#L193",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1735505775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
