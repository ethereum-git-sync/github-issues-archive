{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/3792",
  "id": 1151367074,
  "node_id": "I_kwDOCD5_Gc5EoHei",
  "number": 3792,
  "title": "Improve BLS thread pool - job wait time",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2022-02-26T07:09:48Z",
  "updated_at": "2022-03-02T06:33:38Z",
  "closed_at": "2022-03-02T06:33:38Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThe BLS Thread pool - job wait time is designed to be consistently less than 100ms, however a lot of time it's > 100ms, maybe even up to 500ms.\r\n\r\nNote that this metric is important for the gossip Job Wait Time, we want it to be consistently <3s to avoid the gosisp peer penalty due to broken IWANT promises.\r\n\r\n**Describe the solution you'd like**\r\n\r\n+ The reason is when non-batchable jobs are sent to bls, it forces the worker thread to run and we don't utilize the worker threads at that time. If we only send batchable jobs to worker threads, it works as designed\r\n\r\n<img width=\"811\" alt=\"Screen Shot 2022-02-26 at 14 00 37\" src=\"https://user-images.githubusercontent.com/10568965/155833606-41bf114f-0987-4ce9-901e-60ce2c2f21b5.png\">\r\n\r\n+ In average, non-batchable signature sets happen only when we validate gossip blocks or run state transition, and it's <2ms in contabo or <1ms in hetzner so it's ok to run them in main-thread\r\n+ Verify batchable signature sets in worker threads",
  "closed_by": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1051738662",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/3792#issuecomment-1051738662",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792",
    "id": 1051738662,
    "node_id": "IC_kwDOCD5_Gc4-sEIm",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-26T07:17:14Z",
    "updated_at": "2022-02-26T07:17:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "also we face the below chicken-and-egg issue in ssz-v2:\r\n+ We receive few gossip blocks due to few mesh peers due to low gossip peer scores\r\n+ This is due to poor gossip Job Wait Time performance (and it leads to apply penalty for borken IWANT promises)\r\n+ Part of that is due to poor BLS Job Wait Time performance\r\n+ Part of that is due to so many blocks processed in Unknown Block sync which lead to sending non-batchable signature sets to bls\r\n+ That's because of not enough gossip blocks received \r\n... \r\n...\r\n(continue the loop)\r\n\r\nwhen this issue happens, cpu time is so low so we should be able to verify block signatures in main thread",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1051738662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1052024840",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/3792#issuecomment-1052024840",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792",
    "id": 1052024840,
    "node_id": "IC_kwDOCD5_Gc4-tKAI",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-26T11:14:01Z",
    "updated_at": "2022-02-26T11:14:01Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I follow your reasoning. The current implementation of the BLS thread pool will send multiple sig sets to a worker event if the jobs are not batch-able.\r\n\r\nLet's assume we have a single worker, and the following sequence of events\r\n- request verify sig set 0\r\n- thread pool send job 0 (with sig set 0) to worker 0\r\n- request verify sig set 1, keep in queue\r\n- request verify sig set 2, keep in queue\r\n- worker 0 finishes job 0\r\n- thread pool send job 1 (with both sig set 1 and 2) to worker 0\r\n- worker 0 finishes job 1\r\n\r\nSo for the first instance this may introduce delay but afterwards all buffered sig sets will be sent in batch on the same job.\r\n\r\nWhat host did you capture the metrics above? You should review the metrics:\r\n- \"BLS worker pool - sets per job\": if this number is high many different sig sets (both batch-able and non batch-able) are sent in the same job\r\n- \"BLS worker pool - sigs per set\": gives an idea of what type of jobs it's verifying. Aggregates have 3 sigs, attestations 1, and block ~ 100\r\n\r\n![Screenshot from 2022-02-26 16-34-44](https://user-images.githubusercontent.com/35266934/155840827-2c3b9141-c037-4bfc-a3c3-817cf62454ad.png)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1052024840/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1054035697",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/3792#issuecomment-1054035697",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/3792",
    "id": 1054035697,
    "node_id": "IC_kwDOCD5_Gc4-007x",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-02-28T09:04:49Z",
    "updated_at": "2022-02-28T09:04:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let's assume we have 1 single thread and the following scenario (happens in <100ms):\r\n+ send 5 batchable signature sets to thread pool\r\n+ gossip block comes, send 1 signature set to thread pool\r\n+ thread pool sends 6 signature sets to worker 0\r\n+ send another 5 batchable signature sets to thread pool\r\n+ wait for worker 0 to finish\r\n+ worker 0 finishes\r\n+ thread pool sends the latter 5 batchable signature sets to worker 0\r\n\r\nin the above scenario, worker 0 runs 2 times, there are latencies between to/from worker and wait time for the 1st run to finish. If we verify signatures of gossip block in main thread, worker 0 could run only 1 time.\r\n\r\nThe below metrics are captured from contabo-18: when there are non-batchable signature sets (should be from gossip blocks and unknown block sync), bls job wait time is clearly higher\r\n<img width=\"778\" alt=\"Screen Shot 2022-02-28 at 15 52 28\" src=\"https://user-images.githubusercontent.com/10568965/155953200-26ad4051-f408-4c20-9ebb-6e6fea01b200.png\">\r\n\r\nSome reasons for the change:\r\n+ We want good number of mesh peers\r\n+ So Gossip Job Wait Time should be <3s, otherwise gossip peer score is down due to broken IWANT promises penalty\r\n+ So Gossip Validation Time should be low, and this depends on BLS Job Wait Time\r\n\r\nthat's why we want to keep BLS Job Wait Time low.\r\nThe trade-off is that we have to verify gossip blocks' signatures in main thread, and signatures from unknown block syncs too. This change needs to be deployed in a node to prove it's worth for the change.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1054035697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
