{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5604",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5604/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5604/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5604/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/5604",
  "id": 1738421874,
  "node_id": "I_kwDOCD5_Gc5nnjZy",
  "number": 5604,
  "title": "Network worker extremely busy / high event loop lag / high I/O lag",
  "user": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 4754137758,
      "node_id": "LA_kwDOCD5_Gc8AAAABG15ing",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/meta-feature-request",
      "name": "meta-feature-request",
      "color": "B5CF5F",
      "default": false,
      "description": "Issues to track feature requests."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-06-02T15:38:50Z",
  "updated_at": "2023-06-05T04:10:52Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "### Problem description\r\n\r\nGeneral issue to recap observations of enabling the network worker on high load nodes.\r\n\r\nOn June 25th network worker is enabled on Goerli on the unstable group nodes. The lg1k node with 1000 validators connected, shows bad network performance with long response times and other metrics indicating very slow network handling.\r\n\r\nOn the week of June 25th we deploy network worker on feat1 group nodes, turning the network worker on and off (moving network stack to the main thread). The metrics below capture\r\n\r\n- after enabling the worker the main thread got less busy (green line decreasing)\r\n- network worker is extremely busy, causing bad network behaviour\r\n\r\n_Below, active handles in pink = network worker on_\r\n_Note there's an unrelated memory leak going on that's being addressed in another issue_\r\n_feat1-mainnet node running on mainnet with --subscribe-all-subnets, no validators attached, version v1.8.0/888c599, timeframe: 5/24 till 5/30_\r\n\r\n![image1](https://github.com/ChainSafe/lodestar/assets/35266934/f03cfe75-3e83-4685-8a8b-832dc92acac0)\r\n![image2](https://github.com/ChainSafe/lodestar/assets/35266934/f8592c3a-7aa4-4d30-9090-11d8245ff25e)\r\n![image3](https://github.com/ChainSafe/lodestar/assets/35266934/79582127-7db6-42e9-a64b-506c852af54f)\r\n\r\nThe biggest difference between using the network worker is the huge increase in outbound network traffic. Outbound gossip traffic jumped from 0.3MB/s to 2MB/s (~6x). Before this node dropped 50% of incoming attestations, now process everything relatively timely.\r\n\r\n_feat1-mainnet node running on mainnet with --subscribe-all-subnets, no validators attached, version v1.8.0/888c599, timeframe: 5/27 till 6/02_\r\n\r\n![image](https://github.com/ChainSafe/lodestar/assets/35266934/8c1fde3c-5e58-4b8d-a3a6-899070bfe129)\r\n\r\nconfirmed with system metrics\r\n\r\n![image](https://github.com/ChainSafe/lodestar/assets/35266934/b4867e50-6342-487c-bb3d-8ac8f8c263b1)\r\n\r\n\r\n\r\n**Questions**\r\n\r\n- What is the network worker doing that chokes so much?\r\n- Why is the overall load of the node up so much?\r\n- Is there any overhead of having most OS I/O interactions in a worker?\r\n\r\n\r\n### Solution description\r\n\r\n--\r\n\r\n### Additional context\r\n\r\n_No response_",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5604/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5604/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1575982741",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/5604#issuecomment-1575982741",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/5604",
    "id": 1575982741,
    "node_id": "IC_kwDOCD5_Gc5d75aV",
    "user": {
      "login": "matthewkeil",
      "id": 18608739,
      "node_id": "MDQ6VXNlcjE4NjA4NzM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18608739?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewkeil",
      "html_url": "https://github.com/matthewkeil",
      "followers_url": "https://api.github.com/users/matthewkeil/followers",
      "following_url": "https://api.github.com/users/matthewkeil/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewkeil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewkeil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewkeil/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewkeil/orgs",
      "repos_url": "https://api.github.com/users/matthewkeil/repos",
      "events_url": "https://api.github.com/users/matthewkeil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewkeil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-06-05T03:23:41Z",
    "updated_at": "2023-06-05T04:10:52Z",
    "author_association": "MEMBER",
    "body": "@dapplion I have come up with two strategies to poll the worker to generate profiles.\r\n\r\nThe first is the `perf record` command with the `--tid=***` flag to target the worker thread (and its `libuv` children).  There is also `--per-thread` flag to create separate `mmap` per thread but I am not sure how this will play in with the `V8` output until I pull the trigger a few more times because its not working as expected so need to figure out why.  I am playing with it now to see what is coming out of it and will report back as I know more. \r\n\r\nhttps://man7.org/linux/man-pages/man1/perf-record.1.html\r\n\r\nThis is what I found on one of the boxes running `v1.9.0-rc.0` so def looks like its gonna be one of the second batch on beacon.\r\n```sh\r\nadmin   1814305  212 10.4 209601852 6904800 ?   Ssl  Jun01 10330:54 node ./packages/cli/bin/lodestar beacon --rcConfig /data/rcconfig.yml\r\nadmin   1814731  2.8  0.5 54947096 342896 ?     Ssl  Jun01 139:35 node ./packages/cli/bin/lodestar validator --rcConfig /data/rcconfig.yml\r\nadmin@beta:~/beacon$ ls /proc/1814305/task\r\n1814305  1814318  1814319  1814320  1814321  1814322  1814323  1814325  1814326  1814327  1814328  1814335  1814338  1814339  1814340  1814341  1814342  1814343  1814344  1814345  1814346  1814347  1814348  1814349  1814352\r\nadmin@beta:~/beacon$ ls /proc/1814731/task\r\n1814731  1814743  1814744  1814745  1814746  1814747  1814748  1814749  1814750  1814751  1814752  1814771\r\n```\r\n\r\n\r\nThe second is a native library that plugs into the node inspector protocol and can generate profiles for the worker thread.  This will likely not show the native system (like profiler currently) calls like network but I will attempt to plug it in and see what happens.\r\n\r\nhttps://github.com/hyj1991/v8-profiler-next\r\n\r\n\r\nI suppose there is a third option but its really just an extension of the first option to get the correct `tid` from the runtime.\r\n\r\n`worker.threadId` [is available](https://github.com/nodejs/node/blob/4166d40d0873b6d8a0c7291872c8d20dc680b1d7/lib/worker_threads.js#L9) through the standard node api and that looks like it will [return the `uv_thread_t`](https://github.com/nodejs/node/blob/4166d40d0873b6d8a0c7291872c8d20dc680b1d7/src/node_worker.h#L91)  which is a [typedef for the `p_thread`](https://github.com/nodejs/node/blob/4166d40d0873b6d8a0c7291872c8d20dc680b1d7/deps/uv/include/uv/unix.h#L134) so should correlate correctly with on of the tasks in `/proc/<PID/task` dir theoretically.  If the above does not work I will push a branch that outputs that as a last resort but we should be able to get that right from the system without having to ask node...\r\n\r\n\r\n### the tl/dr; \r\nJust need to figure out the right tid's to poll but getting closer...",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/1575982741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
