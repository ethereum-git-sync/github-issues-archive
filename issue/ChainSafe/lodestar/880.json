{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/880",
  "id": 613510242,
  "node_id": "MDU6SXNzdWU2MTM1MTAyNDI=",
  "number": 880,
  "title": "Ensure beacon node cleanly exits",
  "user": {
    "login": "wemeetagain",
    "id": 1348242,
    "node_id": "MDQ6VXNlcjEzNDgyNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wemeetagain",
    "html_url": "https://github.com/wemeetagain",
    "followers_url": "https://api.github.com/users/wemeetagain/followers",
    "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
    "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
    "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
    "repos_url": "https://api.github.com/users/wemeetagain/repos",
    "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "lastmjs",
    "id": 7000719,
    "node_id": "MDQ6VXNlcjcwMDA3MTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7000719?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lastmjs",
    "html_url": "https://github.com/lastmjs",
    "followers_url": "https://api.github.com/users/lastmjs/followers",
    "following_url": "https://api.github.com/users/lastmjs/following{/other_user}",
    "gists_url": "https://api.github.com/users/lastmjs/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lastmjs/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lastmjs/subscriptions",
    "organizations_url": "https://api.github.com/users/lastmjs/orgs",
    "repos_url": "https://api.github.com/users/lastmjs/repos",
    "events_url": "https://api.github.com/users/lastmjs/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lastmjs/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "lastmjs",
      "id": 7000719,
      "node_id": "MDQ6VXNlcjcwMDA3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7000719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastmjs",
      "html_url": "https://github.com/lastmjs",
      "followers_url": "https://api.github.com/users/lastmjs/followers",
      "following_url": "https://api.github.com/users/lastmjs/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastmjs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastmjs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastmjs/subscriptions",
      "organizations_url": "https://api.github.com/users/lastmjs/orgs",
      "repos_url": "https://api.github.com/users/lastmjs/repos",
      "events_url": "https://api.github.com/users/lastmjs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastmjs/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2020-05-06T18:06:25Z",
  "updated_at": "2020-05-06T21:33:27Z",
  "closed_at": "2020-05-06T21:33:27Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "**Describe the bug**\r\nWhen starting the chain without a genesis state, not all modules are started, since `BeaconChain` blocks on `start` until a genesis state has been created.\r\nIf the node is stopped during this time, the node is not stopped properly, because other modules' `stop` method assumes that all modules have been started.\r\n\r\n**Expected behavior**\r\nBeacon node should exit cleanly, even if all modules have not started.\r\n\r\n**Steps to Reproduce**\r\nstart lodecli, using eth1 to trigger genesis, eg: using https://hackmd.io/2wNvrO77RQ6BWc2ZA7M0Cg\r\nOnce the node has started, hit Ctrl+C\r\nInstead of exiting, an unhandled promise rejection is thrown",
  "closed_by": {
    "login": "wemeetagain",
    "id": 1348242,
    "node_id": "MDQ6VXNlcjEzNDgyNDI=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/wemeetagain",
    "html_url": "https://github.com/wemeetagain",
    "followers_url": "https://api.github.com/users/wemeetagain/followers",
    "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
    "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
    "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
    "repos_url": "https://api.github.com/users/wemeetagain/repos",
    "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
    "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624834518",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/880#issuecomment-624834518",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880",
    "id": 624834518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDgzNDUxOA==",
    "user": {
      "login": "lastmjs",
      "id": 7000719,
      "node_id": "MDQ6VXNlcjcwMDA3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7000719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastmjs",
      "html_url": "https://github.com/lastmjs",
      "followers_url": "https://api.github.com/users/lastmjs/followers",
      "following_url": "https://api.github.com/users/lastmjs/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastmjs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastmjs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastmjs/subscriptions",
      "organizations_url": "https://api.github.com/users/lastmjs/orgs",
      "repos_url": "https://api.github.com/users/lastmjs/repos",
      "events_url": "https://api.github.com/users/lastmjs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastmjs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T19:07:53Z",
    "updated_at": "2020-05-06T19:07:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd be happy to dig into this, what do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624834518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624840849",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/880#issuecomment-624840849",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880",
    "id": 624840849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDg0MDg0OQ==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T19:21:28Z",
    "updated_at": "2020-05-06T19:21:28Z",
    "author_association": "MEMBER",
    "body": "Oh yea, go for it",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624840849/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624856956",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/880#issuecomment-624856956",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880",
    "id": 624856956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDg1Njk1Ng==",
    "user": {
      "login": "lastmjs",
      "id": 7000719,
      "node_id": "MDQ6VXNlcjcwMDA3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7000719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastmjs",
      "html_url": "https://github.com/lastmjs",
      "followers_url": "https://api.github.com/users/lastmjs/followers",
      "following_url": "https://api.github.com/users/lastmjs/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastmjs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastmjs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastmjs/subscriptions",
      "organizations_url": "https://api.github.com/users/lastmjs/orgs",
      "repos_url": "https://api.github.com/users/lastmjs/repos",
      "events_url": "https://api.github.com/users/lastmjs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastmjs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T19:55:43Z",
    "updated_at": "2020-05-06T19:59:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey, this might be a larger discussion better had elsewhere, but I noticed that strictNullChecks is set to false in the main tsconfig. What's the reasoning there? This issue would have been caught already if strictNullChecks were true. It looks probable that there are many hidden issues like this that will be uncovered with strictNullChecks set to true.\r\n\r\nHold on, I may have spoken too soon. My editor might be lagging",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624856956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624867676",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/880#issuecomment-624867676",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880",
    "id": 624867676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDg2NzY3Ng==",
    "user": {
      "login": "lastmjs",
      "id": 7000719,
      "node_id": "MDQ6VXNlcjcwMDA3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7000719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastmjs",
      "html_url": "https://github.com/lastmjs",
      "followers_url": "https://api.github.com/users/lastmjs/followers",
      "following_url": "https://api.github.com/users/lastmjs/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastmjs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastmjs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastmjs/subscriptions",
      "organizations_url": "https://api.github.com/users/lastmjs/orgs",
      "repos_url": "https://api.github.com/users/lastmjs/repos",
      "events_url": "https://api.github.com/users/lastmjs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastmjs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T20:18:07Z",
    "updated_at": "2020-05-06T20:19:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "There are a couple ways to go about this from what I can tell. There seem to be a lot of places where we aren't checking if variables hold values that are defined, leading to this situation and probably many others that are currently hidden. I could just put in some definition checks and call it good, but I'm running into a bit of a problem with the `libp2p-gossipsub` library.\r\n\r\nIf you try to call the `stop` method of a `GossipSub` instance, it will actually throw an error because `this._heartbeatTimer` is not defined. So it looks like `GossipSub` believes it is invalid to call stop if start hasn't been called. I'm not sure how to get around this, is there some public state in a `GossipSub` instance that I can use to determine if stop needs to be called?\r\n\r\nThis problem leads me to another potential solution (not sure if it would be a full solution). Instead of just doing these definition checks, what if each of these modules kept a `started` state within them. When a module/service starts, we can set `started` to true. If you call stop and `started` hasn't been called, then stop will do nothing. This could help.\r\n\r\nI could also just catch the heartbeat error and ignore it",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624867676/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624877285",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/880#issuecomment-624877285",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880",
    "id": 624877285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDg3NzI4NQ==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T20:36:42Z",
    "updated_at": "2020-05-06T20:36:42Z",
    "author_association": "MEMBER",
    "body": "re: `strictNullChecks`, not sure there's a good reasoning for it being false. Definitely think we should rip the bandaid off at some point.\r\n\r\nI think tracking the `started` state in each module would help, we already do this in a few modules (eth1 and sync).",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624877285/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624878529",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/880#issuecomment-624878529",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880",
    "id": 624878529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDg3ODUyOQ==",
    "user": {
      "login": "lastmjs",
      "id": 7000719,
      "node_id": "MDQ6VXNlcjcwMDA3MTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7000719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lastmjs",
      "html_url": "https://github.com/lastmjs",
      "followers_url": "https://api.github.com/users/lastmjs/followers",
      "following_url": "https://api.github.com/users/lastmjs/following{/other_user}",
      "gists_url": "https://api.github.com/users/lastmjs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lastmjs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lastmjs/subscriptions",
      "organizations_url": "https://api.github.com/users/lastmjs/orgs",
      "repos_url": "https://api.github.com/users/lastmjs/repos",
      "events_url": "https://api.github.com/users/lastmjs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lastmjs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T20:39:02Z",
    "updated_at": "2020-05-06T20:42:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> re: strictNullChecks, not sure there's a good reasoning for it being false. Definitely think we should rip the bandaid off at some point.\r\n\r\nWhen do you think we should rip the bandaid off? Should I open an issue for this? Will probably take some significant tedious effort across the entire codebase. Also it might be good to have a null/undefined strategy if there isn't one already. Such as always using undefined, always using null, or deciding when to use each. There's also the option of never using undefined or null if possible, such as creating types that are more descriptive, i.e. `NOT_SET`.\r\n\r\nExample:\r\n\r\n```typescript\r\n  public clock: IBeaconClock | \"NOT_SET\";\r\n```\r\nYou could also say \"NOT_INITIALIZED\", \"NOT_STARTED\", or something. I have found this to be a pretty nice way to do things, not without its own problems of course. `null` and `undefined` are just such problematic and broad types.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624878529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624880245",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/880#issuecomment-624880245",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/880",
    "id": 624880245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDg4MDI0NQ==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-06T20:42:39Z",
    "updated_at": "2020-05-06T20:42:39Z",
    "author_association": "MEMBER",
    "body": "Yeah, please do. :) I think we should do this as soon as feasible, as it won't be getting any easier the longer we wait. Agreed, it'll be a tedious kind of thing.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/624880245/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
