{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1063",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1063/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1063/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1063/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/1063",
  "id": 646305298,
  "node_id": "MDU6SXNzdWU2NDYzMDUyOTg=",
  "number": 1063,
  "title": "await async functions to prevent unhandled rejections",
  "user": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-06-26T14:33:55Z",
  "updated_at": "2020-08-18T08:12:08Z",
  "closed_at": "2020-08-18T08:12:08Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "As of now, some expected errors such as a wrongly configured deposit contract cause an unhandled rejection. It would be best to handle this as expected errors by catching them at the CLI level and then do a clean process exit.\r\n```\r\n2020-06-26 16:14:13  [NODE]             info: Starting eth2 beacon node - LODESTAR! \r\n2020-06-26 16:14:13  [DB]               info: Connected to LevelDB database at .lodestar/dev/beacon/db-16Uiu2HAmLXTUhNJZgYayrQc2EkRLbrHU49EqFfiE8pffrzJchVDq \r\n2020-06-26 16:14:13  [CHAIN]            info: Chain not started, listening for genesis block \r\n2020-06-26 16:14:13  [ETH1]             info: Eth1 notifier is disabled but starting it to build genesis state \r\n(node:14720) UnhandledPromiseRejectionWarning: Error: There is no deposit contract at given address: TBD\r\n    at EthersEth1Notifier.initContract (/home/lion/Code/eth2.0/lodestar/packages/lodestar/src/eth1/impl/ethers.ts:247:13)\r\n    at processTicksAndRejections (internal/process/task_queues.js:94:5)\r\n    at EthersEth1Notifier.startProcessEth1Blocks (/home/lion/Code/eth2.0/lodestar/packages/lodestar/src/eth1/impl/ethers.ts:265:7)\r\n(node:14720) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)\r\n(node:14720) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\r\n```\r\nHowever, in this case doing a try / catch won't save the unhandled rejection because the causing function is not awaited\r\nhttps://github.com/ChainSafe/lodestar/blob/e247acf95db46133d6766458c3414ea77dc393f7/packages/lodestar/src/eth1/impl/ethers.ts#L94-L95\r\n\r\nThere are other instances of this happening in the codebase, detected with the rule [@typescript-eslint/no-floating-promises](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-floating-promises.md)\r\n\r\n```\r\n@chainsafe/lodestar-validator: \r\n@chainsafe/lodestar-validator: /home/lion/Code/eth2.0/lodestar/packages/lodestar-validator/src/services/attestation.ts\r\n@chainsafe/lodestar-validator:   66:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar-validator: \r\n@chainsafe/lodestar-validator: /home/lion/Code/eth2.0/lodestar/packages/lodestar-validator/src/services/block.ts\r\n@chainsafe/lodestar-validator:   57:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar-validator: \r\n@chainsafe/lodestar-validator: /home/lion/Code/eth2.0/lodestar/packages/lodestar-validator/src/validator.ts\r\n@chainsafe/lodestar-validator:   65:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar-validator:   66:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar-validator: \r\n@chainsafe/lodestar: \r\n@chainsafe/lodestar: /home/lion/Code/eth2.0/lodestar/packages/lodestar/src/api/rest/routes/validator/publishAggregateAndProof.ts\r\n@chainsafe/lodestar:   25:11  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar: \r\n@chainsafe/lodestar: /home/lion/Code/eth2.0/lodestar/packages/lodestar/src/chain/blocks/processor.ts\r\n@chainsafe/lodestar:   64:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar: \r\n@chainsafe/lodestar: /home/lion/Code/eth2.0/lodestar/packages/lodestar/src/chain/chain.ts\r\n@chainsafe/lodestar:   129:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar:   233:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar:   281:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar: \r\n@chainsafe/lodestar: /home/lion/Code/eth2.0/lodestar/packages/lodestar/src/chain/genesis/genesis.ts\r\n@chainsafe/lodestar:   66:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar: \r\n@chainsafe/lodestar: /home/lion/Code/eth2.0/lodestar/packages/lodestar/src/eth1/impl/ethers.ts\r\n@chainsafe/lodestar:    95:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar:   278:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar: \r\n@chainsafe/lodestar: /home/lion/Code/eth2.0/lodestar/packages/lodestar/src/network/network.ts\r\n@chainsafe/lodestar:   58:7  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar: \r\n@chainsafe/lodestar: /home/lion/Code/eth2.0/lodestar/packages/lodestar/src/node/nodejs.ts\r\n@chainsafe/lodestar:   151:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar: \r\n@chainsafe/lodestar: /home/lion/Code/eth2.0/lodestar/packages/lodestar/src/tasks/index.ts\r\n@chainsafe/lodestar:   62:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar:   63:5  error  Promises must be handled appropriately  @typescript-eslint/no-floating-promises\r\n@chainsafe/lodestar: \r\n```\r\n\r\nI would like to discuss what's the best route to deal with this issue\r\n1. Make sure that all error throwing async functions are awaited so the error can be catched upstream\r\n2. It's okay to have unhandled rejection warnings\r\n3. Handle the [event](https://nodejs.org/api/process.html#process_event_unhandledrejection) at the process level (not recommended)\r\n",
  "closed_by": {
    "login": "mpetrunic",
    "id": 8836210,
    "node_id": "MDQ6VXNlcjg4MzYyMTA=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8836210?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/mpetrunic",
    "html_url": "https://github.com/mpetrunic",
    "followers_url": "https://api.github.com/users/mpetrunic/followers",
    "following_url": "https://api.github.com/users/mpetrunic/following{/other_user}",
    "gists_url": "https://api.github.com/users/mpetrunic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/mpetrunic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/mpetrunic/subscriptions",
    "organizations_url": "https://api.github.com/users/mpetrunic/orgs",
    "repos_url": "https://api.github.com/users/mpetrunic/repos",
    "events_url": "https://api.github.com/users/mpetrunic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/mpetrunic/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1063/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1063/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/650224211",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1063#issuecomment-650224211",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1063",
    "id": 650224211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDIyNDIxMQ==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-26T14:56:28Z",
    "updated_at": "2020-06-26T14:56:28Z",
    "author_association": "MEMBER",
    "body": "I think its best to not have unhandled rejections, but rather ensure that all errors can be caught. (1)\r\n:+1: for the linter rule, so we can catch all existing and future unawaited return values.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/650224211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/659742258",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/1063#issuecomment-659742258",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/1063",
    "id": 659742258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTc0MjI1OA==",
    "user": {
      "login": "3xtr4t3rr3str14l",
      "id": 32028745,
      "node_id": "MDQ6VXNlcjMyMDI4NzQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/32028745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/3xtr4t3rr3str14l",
      "html_url": "https://github.com/3xtr4t3rr3str14l",
      "followers_url": "https://api.github.com/users/3xtr4t3rr3str14l/followers",
      "following_url": "https://api.github.com/users/3xtr4t3rr3str14l/following{/other_user}",
      "gists_url": "https://api.github.com/users/3xtr4t3rr3str14l/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/3xtr4t3rr3str14l/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/3xtr4t3rr3str14l/subscriptions",
      "organizations_url": "https://api.github.com/users/3xtr4t3rr3str14l/orgs",
      "repos_url": "https://api.github.com/users/3xtr4t3rr3str14l/repos",
      "events_url": "https://api.github.com/users/3xtr4t3rr3str14l/events{/privacy}",
      "received_events_url": "https://api.github.com/users/3xtr4t3rr3str14l/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-16T23:57:29Z",
    "updated_at": "2020-07-16T23:57:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "i think catching the errors is the best method too.  i'll also add that linter rule",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/659742258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
