{
  "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
  "repository_url": "https://api.github.com/repos/ChainSafe/lodestar",
  "labels_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046/labels{/name}",
  "comments_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046/comments",
  "events_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046/events",
  "html_url": "https://github.com/ChainSafe/lodestar/issues/2046",
  "id": 808471944,
  "node_id": "MDU6SXNzdWU4MDg0NzE5NDQ=",
  "number": 2046,
  "title": "Investigate long epoch transition during Pyrmont sync",
  "user": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 2963898184,
      "node_id": "MDU6TGFiZWwyOTYzODk4MTg0",
      "url": "https://api.github.com/repos/ChainSafe/lodestar/labels/scope-performance",
      "name": "scope-performance",
      "color": "980043",
      "default": false,
      "description": "Performance issue and ideas to improve performance."
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "tuyennhv",
    "id": 10568965,
    "node_id": "MDQ6VXNlcjEwNTY4OTY1",
    "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tuyennhv",
    "html_url": "https://github.com/tuyennhv",
    "followers_url": "https://api.github.com/users/tuyennhv/followers",
    "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
    "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
    "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
    "repos_url": "https://api.github.com/users/tuyennhv/repos",
    "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2021-02-15T11:54:02Z",
  "updated_at": "2021-09-03T08:22:47Z",
  "closed_at": "2021-09-03T08:22:47Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I was able to catch a 4.84s epoch transition in my local environment using Chrome profiler\r\n<img width=\"1124\" alt=\"Screen Shot 2021-02-15 at 18 42 17\" src=\"https://user-images.githubusercontent.com/10568965/107942360-b6b8d280-6fbd-11eb-976d-08a8bad6f2b1.png\">\r\n\r\nAn overview:\r\n+ prepareEpochProcessState takes 530ms ++, and there are some small executions happened after that\r\n+ processRewardsAndPenalties takes 2.4s, getAttestationDeltas takes 1.17s, epochBalances setter takes 764ms\r\n+ rotateEpoch takes more than 1s, computeEpochShuffling takes 687ms\r\n+ hashTreeRoot takes 425ms\r\n\r\nevent loop lag somehow was at 1.5s only, I'm attaching the snapshot as well.\r\n[CPU-20210215T150254-4s-epoch-transition.cpuprofile.zip](https://github.com/ChainSafe/lodestar/files/5981369/CPU-20210215T150254-4s-epoch-transition.cpuprofile.zip)\r\n",
  "closed_by": {
    "login": "dapplion",
    "id": 35266934,
    "node_id": "MDQ6VXNlcjM1MjY2OTM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dapplion",
    "html_url": "https://github.com/dapplion",
    "followers_url": "https://api.github.com/users/dapplion/followers",
    "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
    "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
    "organizations_url": "https://api.github.com/users/dapplion/orgs",
    "repos_url": "https://api.github.com/users/dapplion/repos",
    "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dapplion/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046/reactions",
    "total_count": 2,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
[
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/779310435",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2046#issuecomment-779310435",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
    "id": 779310435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTMxMDQzNQ==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-15T15:54:20Z",
    "updated_at": "2021-02-15T15:54:20Z",
    "author_association": "MEMBER",
    "body": "IMO we have likely milked as much performance out of things as reasonable and should just attempt to mitigate the slowness. \r\nWe should just break up epoch processing with `await sleep(0);` to just prevent any single piece of the epoch transition from taking \r\n\r\nFor instance, there's not much that can be done regarding re-hashing the balances. It's just computationally intensive work that has to be done.\r\nSimilar issue with just setting the state balances. The balances list needs to be converted to a tree, and that just takes time.\r\n\r\nIf we yield back to the event loop in between our longer-running subtasks, it likely won't even matter that the epoch transition takes time.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/779310435/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/779859934",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2046#issuecomment-779859934",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
    "id": 779859934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTg1OTkzNA==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-16T14:09:00Z",
    "updated_at": "2021-02-16T14:09:00Z",
    "author_association": "MEMBER",
    "body": "@wemeetagain I had a chat with Paul from Lighthouse and their epoch transitions take 20-30 ms, 100 times faster than ours. That's an insane difference that should be at least investigated.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/779859934/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/779911286",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2046#issuecomment-779911286",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
    "id": 779911286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTkxMTI4Ng==",
    "user": {
      "login": "wemeetagain",
      "id": 1348242,
      "node_id": "MDQ6VXNlcjEzNDgyNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1348242?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wemeetagain",
      "html_url": "https://github.com/wemeetagain",
      "followers_url": "https://api.github.com/users/wemeetagain/followers",
      "following_url": "https://api.github.com/users/wemeetagain/following{/other_user}",
      "gists_url": "https://api.github.com/users/wemeetagain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wemeetagain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wemeetagain/subscriptions",
      "organizations_url": "https://api.github.com/users/wemeetagain/orgs",
      "repos_url": "https://api.github.com/users/wemeetagain/repos",
      "events_url": "https://api.github.com/users/wemeetagain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wemeetagain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-16T15:27:55Z",
    "updated_at": "2021-02-16T15:27:55Z",
    "author_association": "MEMBER",
    "body": "It looks like we might not be iterating thru our cached validators/balances where we can?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/779911286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/781972089",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2046#issuecomment-781972089",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
    "id": 781972089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTk3MjA4OQ==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T10:04:06Z",
    "updated_at": "2021-02-19T10:04:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "`getAttesationDeltas()`/BigInt performance is really unpredictable (ranging from 98ms to 1375ms) as shown in PR #2064 , one possibility is to implement the function in assemblyscript. From a quick look, we can just  pass balances, config params (5 of them), EpochProcess (may pass 20 different params), finalized epoch and receive back new balances (if assemblyscript does not support passing objects as argument).\r\n\r\nnot sure if we want to do a POC for it at this time.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/781972089/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/781999855",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2046#issuecomment-781999855",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
    "id": 781999855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTk5OTg1NQ==",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T10:55:31Z",
    "updated_at": "2021-02-19T10:55:31Z",
    "author_association": "MEMBER",
    "body": "> not sure if we want to do a POC for it at this time.\r\n\r\nI think it's worth it! Using assembly script won't introduce new complexities such as multi-treading",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/781999855/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/783862561",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2046#issuecomment-783862561",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
    "id": 783862561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Mzg2MjU2MQ==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-23T04:07:59Z",
    "updated_at": "2021-02-23T04:07:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "so I tried assemblyscript, one issue I had was OOM issue although I configured different `gc` strategies there and manually called `__collect()` (tried with v0.9.2), so for now I think this is more suitable to functions where we can allocate a static memory allocation similar to how `as-sha256` was implemented.\r\nAlso in order to pass bigint to wasm we have to use `--experimental-wasm-bigint` flag which is a different barrier, not sure when that become official in nodejs.",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/783862561/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/793601722",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2046#issuecomment-793601722",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
    "id": 793601722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MzYwMTcyMg==",
    "user": {
      "login": "tuyennhv",
      "id": 10568965,
      "node_id": "MDQ6VXNlcjEwNTY4OTY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10568965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tuyennhv",
      "html_url": "https://github.com/tuyennhv",
      "followers_url": "https://api.github.com/users/tuyennhv/followers",
      "following_url": "https://api.github.com/users/tuyennhv/following{/other_user}",
      "gists_url": "https://api.github.com/users/tuyennhv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tuyennhv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tuyennhv/subscriptions",
      "organizations_url": "https://api.github.com/users/tuyennhv/orgs",
      "repos_url": "https://api.github.com/users/tuyennhv/repos",
      "events_url": "https://api.github.com/users/tuyennhv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tuyennhv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-09T09:18:35Z",
    "updated_at": "2021-03-09T09:18:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "current epoch transition for Pyrmont at around slot 363972 is 890ms.\r\n\r\n@ChainSafe/eth2-0  I think the last thing to do for this issue is to add `await sleep(0)` in state transition and make sure we don't block for 200ms?",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/793601722/reactions",
      "total_count": 2,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/912356301",
    "html_url": "https://github.com/ChainSafe/lodestar/issues/2046#issuecomment-912356301",
    "issue_url": "https://api.github.com/repos/ChainSafe/lodestar/issues/2046",
    "id": 912356301,
    "node_id": "IC_kwDOCD5_Gc42YXPN",
    "user": {
      "login": "dapplion",
      "id": 35266934,
      "node_id": "MDQ6VXNlcjM1MjY2OTM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/35266934?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dapplion",
      "html_url": "https://github.com/dapplion",
      "followers_url": "https://api.github.com/users/dapplion/followers",
      "following_url": "https://api.github.com/users/dapplion/following{/other_user}",
      "gists_url": "https://api.github.com/users/dapplion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dapplion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dapplion/subscriptions",
      "organizations_url": "https://api.github.com/users/dapplion/orgs",
      "repos_url": "https://api.github.com/users/dapplion/repos",
      "events_url": "https://api.github.com/users/dapplion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dapplion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-03T08:22:46Z",
    "updated_at": "2021-09-03T08:22:46Z",
    "author_association": "MEMBER",
    "body": "> IMO we have likely milked as much performance out of things as reasonable and should just attempt to mitigate the slowness.\r\n> We should just break up epoch processing with `await sleep(0);` to just prevent any single piece of the epoch transition from taking\r\n> \r\n> For instance, there's not much that can be done regarding re-hashing the balances. It's just computationally intensive work that has to be done.\r\n> Similar issue with just setting the state balances. The balances list needs to be converted to a tree, and that just takes time.\r\n> \r\n> If we yield back to the event loop in between our longer-running subtasks, it likely won't even matter that the epoch transition takes time.\r\n\r\nOh man, we have milked so much more performance out of this :tada: \r\n\r\nClosing, add new issues for specific improvement strategies",
    "reactions": {
      "url": "https://api.github.com/repos/ChainSafe/lodestar/issues/comments/912356301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
